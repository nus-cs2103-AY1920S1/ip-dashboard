[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "[E][✓] splashdown (at: 28-Aug-2019 06:00PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "[T][✓] individual project"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "[E][✓] lunch (at: 26-Aug-2019 12:00PM)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "[D][✓] tutorial (by: 26-Aug-2019 10:00AM)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "[T][✓] JUnit testing"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "[D][✘] lab (by: 08-Feb-2021 12:00PM)"
      }
    ],
    "authorContributionMap": {
      "jietung": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Deadline(String description, Date date, LocalTime time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return dateFormatter.format(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return timeFormatter.format(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateString()  + \" \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + getTimeString() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (!(o instanceof Deadline)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Deadline other \u003d (Deadline) o;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return this.description \u003d\u003d ((Deadline) o).description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        while (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "                tasks \u003d ui.input(str, tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.err.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "            str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\jietung\\\\Desktop\\\\duke\\\\src\\\\main\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 41,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Event(String description, Date date, LocalTime time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return dateFormatter.format(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return timeFormatter.format(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDateString()  + \" \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + getTimeString() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (!(o instanceof Event)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Event other \u003d (Event) o;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return this.description \u003d\u003d ((Event) o).description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 45
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList parseDone(String str, TaskList list) throws Exception{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please state the task number you want to mark as done.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The number is too large.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The number is too small.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showTaskDone(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList parseTodo(String str, TaskList list) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d new Todo(str.substring(5));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showAddTask(t, list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList parseDeadline(String str, TaskList list) throws Exception {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (!str.contains(\" /by \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date/time of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int indexOfSlash \u003d str.indexOf(47);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String ss1 \u003d str.substring(0, indexOfSlash);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] ss1Arr \u003d ss1.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String ss2 \u003d str.substring(indexOfSlash);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] ss2Arr \u003d ss2.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (ss1Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (ss2Arr.length \u003c 3) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date/time of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Date date \u003d parser.parse(ss2Arr[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int intTime \u003d Integer.parseInt(ss2Arr[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int hour \u003d intTime / 100;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int minute \u003d intTime % 100;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jietung"
        },
        "content": "        LocalTime time \u003d LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d new Deadline(str.substring(9, indexOfSlash - 1), date, time);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jietung"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showAddTask(t, list);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList parseEvent(String str, TaskList list) throws Exception {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (!str.contains(\" /at \")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date/time of event cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int indexOfSlash \u003d str.indexOf(47);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String ss1 \u003d str.substring(0, indexOfSlash);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] ss1Arr \u003d ss1.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String ss2 \u003d str.substring(indexOfSlash);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] ss2Arr \u003d ss2.split(\" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (ss1Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (ss2Arr.length \u003c 3) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date/time of event cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Date date \u003d parser.parse(ss2Arr[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int intTime \u003d Integer.parseInt(ss2Arr[2]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int hour \u003d intTime / 100;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int minute \u003d intTime % 100;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jietung"
        },
        "content": "        LocalTime time \u003d LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d new Event(str.substring(6, indexOfSlash - 1), date, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jietung"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showAddTask(t, list);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList parseDelete(String str, TaskList list) throws Exception {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please state the task number you want to delete.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The number is too large.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! The number is too small.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d list.delete(index);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ui.showDeleteTask(t, list);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 144
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "            FileReader reader \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "            while ((s \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (s.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Todo(s.substring(7));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "                } else if (s.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    int index \u003d s.indexOf(58);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String ss \u003d s.substring(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String[] ssArr \u003d ss.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    Date date \u003d parser.parse(ssArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String strTime \u003d ssArr[2].substring(0, 7);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(strTime, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Deadline(s.substring(7, index - 4), date, time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jietung"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    int index \u003d s.indexOf(58);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String ss \u003d s.substring(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String[] ssArr \u003d ss.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    Date date \u003d parser.parse(ssArr[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String strTime \u003d ssArr[2].substring(0, 7);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(strTime, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Event(s.substring(7, index - 4), date, time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jietung"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jietung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jietung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jietung"
        },
        "content": "            FileWriter writer \u003d new FileWriter(fileName, false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jietung"
        },
        "content": "            BufferedWriter bufferedWriter \u003d  new BufferedWriter(writer);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jietung"
        },
        "content": "            for (Task t : arr) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jietung"
        },
        "content": "                bufferedWriter.write(t.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jietung"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jietung"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jietung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[\"  + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Task t \u003d list.remove(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (!(o instanceof Todo)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Todo other \u003d (Todo) o;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return this.description \u003d\u003d ((Todo) o).description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showTaskList(TaskList TaskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "        for (Task t : TaskList.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\t\" + i + \". \" + t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList input(String str, TaskList list) throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (strArr[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": "            showTaskList(list);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list \u003d parser.parseDone(str, list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list \u003d parser.parseTodo(str, list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list \u003d parser.parseDeadline(str, list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list \u003d parser.parseEvent(str, list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list \u003d parser.parseDelete(str, list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! I,m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showAddTask(Task t, TaskList list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\t  \" + t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showTaskDone(Task t) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void showDeleteTask(Task t, TaskList list) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tNoted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 75
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Deadline constructDeadline() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Date date \u003d parser.parse(\"2/12/2019\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "        LocalTime time \u003d LocalTime.of(23, 59);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Deadline d \u003d new Deadline(\"test\", date, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testDateStringConversion() throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Deadline d \u003d constructDeadline();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"02-Dec-2019\", d.getDateString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testTimeString() throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Deadline d \u003d constructDeadline();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"11:59PM\", d.getTimeString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testStringConversion() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Deadline d \u003d constructDeadline();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"[D][✘] test (by: 02-Dec-2019 11:59PM)\", d.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 36
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Event constructEvent() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Date date \u003d parser.parse(\"8/9/2019\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "        LocalTime time \u003d LocalTime.of(00, 00);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Event e \u003d new Event(\"test\", date, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testDateStringConversion() throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Event e \u003d constructEvent();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"08-Sep-2019\", e.getDateString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testTimeString() throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Event e \u003d constructEvent();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"12:00AM\", e.getTimeString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testStringConversion() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Event e \u003d constructEvent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"[E][✘] test (at: 08-Sep-2019 12:00AM)\", e.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 36
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public TaskList constructTaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "            SimpleDateFormat parser1 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Date date1 \u003d parser1.parse(\"8/9/2019\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "            LocalTime time1 \u003d LocalTime.of(00, 00);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Event e \u003d new Event(\"test\", date1, time1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "            SimpleDateFormat parser2 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Date date2 \u003d parser2.parse(\"2/12/2019\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "            LocalTime time2 \u003d LocalTime.of(23, 59);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Deadline d \u003d new Deadline(\"test\", date2, time2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list.add(new Todo(\"test\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list.add(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "            list.add(d);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return new TaskList(list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testGet() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "        TaskList list \u003d constructTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(new Todo(\"test\"), list.get(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testSize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "        TaskList list \u003d constructTaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(3, list.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testDelete() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jietung"
        },
        "content": "        TaskList list \u003d constructTaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(new Todo(\"test\"), list.delete(0));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 54
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Todo t \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "        assertEquals(\"[T][✘] test\", t.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 12
    }
  }
]
