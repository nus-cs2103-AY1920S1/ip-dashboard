[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 28,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public abstract class Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    abstract public void execute(TaskList taskList);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 6
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private int minute; "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private int date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    // Map\u003cString, String\u003e map \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    // map.put(\"dog\", \"type of animal\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public DateTime(int hour, int minute, int date, String month, int year){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.hour \u003d hour ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.minute \u003d minute ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.date \u003d date ;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.month \u003d month ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public int getHour(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return hour;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public int getMin(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return minute;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(String.valueOf(date).contains(\"1\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String convertedDate \u003dInteger.toString(date) + \"st\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else if (String.valueOf(date).contains(\"2\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String convertedDate \u003dInteger.toString(date) + \"nd\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else if (String.valueOf(date).contains(\"3\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String convertedDate \u003dInteger.toString(date) + \"rd\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String convertedDate \u003dInteger.toString(date) + \"th\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String convertedHour;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(hour \u003e 12){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            convertedHour \u003d Integer.toString(hour - 12) + \"pm\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            convertedHour \u003d Integer.toString(hour) + \"am\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return month + \" \" + date + \" \" + convertedHour;   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toFileString(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return date + \" \" + month + \" \" + year + \" \" +hour + \" \"+ minute ;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 56
    }
  },
  {
    "path": "src/main/java/DeadlinesTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "class DeadlinesTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    // Note that the endingDateTime may have null values for"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    // its time "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    DateTime endingDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public DeadlinesTask (Boolean status, String message, DateTime endingDateTime){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        super(status, message, \"[D]\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.endingDateTime \u003d endingDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[✓]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[X]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return  super.type + doneString + \" \" + super.message + \" (by: \" +endingDateTime + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toFileFormat(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return \"D|\" +doneString + \"|\"+ super.message+ \"|\" + endingDateTime.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private UI ui; "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public Duke(String filepath){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String startingMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\" ;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(startingMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.taskList \u003d storage.loadStorage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        ui \u003d new UI(storage, taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        new Duke(\"../resources/data/duke.txt\").run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 30,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "class DukeException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 6
    }
  },
  {
    "path": "src/main/java/EventsTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "class EventsTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    DateTime startingDateTime ; "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    DateTime endingDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public EventsTask (Boolean status, String message, "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    DateTime startingDateTime, DateTime endingDateTime){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        super(status, message, \"[E]\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.startingDateTime \u003d startingDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.endingDateTime \u003d endingDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[✓]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[X]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return super.type + doneString + \" \" + super.message +\" (at: \" + startingDateTime  + \" to \" +endingDateTime + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toFileFormat(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"1\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return \"E|\" +doneString + \"|\"+ super.message+ \"|\" + startingDateTime.toFileString() +\" \"+ endingDateTime.getHour() + \" \" + endingDateTime.getMin() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 34
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public FindCommand(String command){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void execute(TaskList taskList){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        TaskList taskListsWithKeyWords \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        int length \u003d taskList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        for(int i \u003d 0; i \u003c length; i++){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            Task currentTask \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            if(currentTask.getMessage().contains(command)){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                taskListsWithKeyWords.add(currentTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskListsWithKeyWords.printTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 27
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class Parser{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public Parser(Storage storage, TaskList taskList){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public boolean parse (String line){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(line.equals(\"bye\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else if(line.equals(\"list\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            taskList.printTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String inputnoun \u003d line.split(\" \")[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                if((!inputnoun.equals(\"done\")) \u0026\u0026"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                (!inputnoun.equals(\"todo\")) \u0026\u0026"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                (!inputnoun.equals(\"deadline\")) \u0026\u0026"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                (!inputnoun.equals(\"event\")) \u0026\u0026"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                (!inputnoun.equals(\"delete\"))\u0026\u0026"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                (!inputnoun.equals(\"find\")) ){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                }else if((line.split(\" \", 2)).length \u003c 2){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    String taskName \u003d line.split(\" \", 2) [1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    if(inputnoun.equals(\"done\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String stringFromUser \u003d line.replaceAll(\"\\\\D+\",\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        Integer indexFromUser \u003d Integer.parseInt(stringFromUser);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        taskList.doneTask(indexFromUser - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        storage.save();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                            "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }else if (inputnoun.equals(\"todo\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        ToDoTask newTask \u003d new ToDoTask (false, taskName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        storage.save();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }else if (inputnoun.equals(\"deadline\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String [] deadlineArray \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        if(deadlineArray.length \u003c 2){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The date of a deadline cannot be empty.\"); "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int date \u003d  Integer.parseInt(deadlineArray[1].replace(\"by \", \"\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String month \u003d deadlineArray[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int year \u003d Integer.parseInt(deadlineArray[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int hour \u003d Integer.parseInt(deadlineArray[4]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int min \u003d Integer.parseInt(deadlineArray[5]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        DateTime deadlineDateTime \u003d new DateTime(hour, min, date, month, year);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String newTaskName \u003d taskName.split(\"/\")[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        DeadlinesTask newTask \u003d new DeadlinesTask (false, newTaskName, deadlineDateTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        storage.save();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }else if (inputnoun.equals(\"event\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String [] deadlineArray \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        if(deadlineArray.length \u003c 2){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The date of an event cannot be empty.\"); "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String newTaskName \u003d taskName.split(\"/\")[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int startingDate \u003d  Integer.parseInt(deadlineArray[1].replace(\"at \", \"\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String startingMonth \u003d deadlineArray[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int startingYear \u003d Integer.parseInt(deadlineArray[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int startingHour \u003d Integer.parseInt(deadlineArray[4]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int startingMin \u003d Integer.parseInt(deadlineArray[5]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        DateTime startingDateTime \u003d new DateTime(startingHour, startingMin, startingDate, startingMonth, startingYear);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int endingDate \u003d  Integer.parseInt(deadlineArray[6]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        String endingMonth \u003d deadlineArray[7];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int endingYear \u003d Integer.parseInt(deadlineArray[8]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int endingHour \u003d Integer.parseInt(deadlineArray[9]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int endingMin \u003d Integer.parseInt(deadlineArray[10]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        DateTime endingDateTime \u003d new DateTime(endingHour, endingMin, endingDate, endingMonth, endingYear);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        EventsTask newTask \u003d new EventsTask (false, newTaskName, startingDateTime, endingDateTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        storage.save();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }else if(inputnoun.equals(\"find\")){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        Command findCommand \u003d new FindCommand(taskName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        findCommand.execute(taskList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        int offset \u003d Integer.parseInt(taskName) - 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        if(offset \u003e taskList.size() - 1){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! There aren\u0027t so many tasks!\"); "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        }else{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                            taskList.deleteTask(offset);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                        storage.save();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }catch(DukeException e){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 118
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public Storage (String filepath){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public TaskList loadStorage(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filepath))) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               String[] currentTaskArray \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               String taskCategory \u003d currentTaskArray[0].replace(\" \",\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               String currentStatus \u003d currentTaskArray[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               String taskName \u003d currentTaskArray[2];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               if(taskCategory.equals(\"T\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                ToDoTask newTask \u003d new ToDoTask (false, taskName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                taskList.fileAdd(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               }else if(taskCategory.equals(\"D\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   String deadline \u003d currentTaskArray[3];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   String [] deadlineArray \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   int deadlineArraySize \u003d deadlineArray.length;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   DateTime endingDateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   int date \u003d Integer.parseInt(deadlineArray[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   String month \u003d deadlineArray[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int year \u003d Integer.parseInt(deadlineArray[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int hour \u003d Integer.parseInt(deadlineArray[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int min \u003d Integer.parseInt(deadlineArray[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    endingDateTime \u003d new DateTime(hour, "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    min, "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    date,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    month,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    year);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   DeadlinesTask newTask \u003d new DeadlinesTask (false, taskName, endingDateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   taskList.fileAdd(newTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               }else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    String deadline \u003d currentTaskArray[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    String [] deadlineArray \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int deadlineArraySize \u003d deadlineArray.length;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    DateTime startingDateTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    DateTime endingDateTime;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int date \u003d Integer.parseInt(deadlineArray[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    String month \u003d deadlineArray[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int year \u003d Integer.parseInt(deadlineArray[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int startingHour \u003d Integer.parseInt(deadlineArray[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int startingMin \u003d Integer.parseInt(deadlineArray[4]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int endingHour \u003d Integer.parseInt(deadlineArray[5]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    int endingMin \u003d Integer.parseInt(deadlineArray[6]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    startingDateTime \u003d new DateTime(startingHour, "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    startingMin, "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    date,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    month,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    year);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    endingDateTime \u003d new DateTime(endingHour, "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    endingMin, "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    date,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    month,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    year);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    EventsTask newTask \u003d new EventsTask (false, taskName, startingDateTime, endingDateTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                    taskList.fileAdd(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "               }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            StackTraceElement[] elements \u003d e.getStackTrace();  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            for (int iterator\u003d1; iterator\u003c\u003delements.length; iterator++){  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                   System.out.println(\"Class Name:\"+elements[iterator-1].getClassName()+\" Method Name:\"+elements[iterator-1].getMethodName()+\" Line Number:\"+elements[iterator-1].getLineNumber());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void save(){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            for(int i \u003d 0; i \u003c taskList.size(); i ++){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "                writer.write(taskList.getTask(i).toFileFormat());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "class Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public Task (Boolean status, String message, String type){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void setStatus(boolean status){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(status){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[✓]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[X]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return type + doneString + \" \" + message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toFileFormat(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return \"dummy\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private ArrayList \u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public TaskList (){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskList \u003d new ArrayList \u003cTask\u003e ();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void fileAdd(Task newTask){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void add(Task newTask){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void deleteTask(int index){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(taskList.get(index));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskList.size() ));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void doneTask(int index){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        Task currentTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        currentTask.setStatus(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + currentTask;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public ArrayList \u003cTask\u003e getTaskList(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void printTaskList(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        for(int i \u003d 0; i \u003c size; i ++){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            Integer number \u003d i + 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String message \u003d number + \". \" + taskList.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 58
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "class ToDoTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public ToDoTask (Boolean status, String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        super(status, message, \"[T]\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[✓]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"[X]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return super.type + doneString + \" \" + super.message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public String toFileFormat(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        String doneString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        if(super.status){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            doneString \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        return \"T|\" +doneString +\"|\" + super.message + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 27
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "public class UI{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public UI(Storage storage, TaskList taskList){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        this.parser \u003d new Parser(storage, taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        boolean flag \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        while(flag){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            flag \u003d parser.parse(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "            "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 28
    }
  },
  {
    "path": "src/main/resources/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "T|0|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "D|0|return book|6 June 2019 14 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "E|0|project meeting|6 Aug 2019 14 0 16 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "T|0|join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrnewguy"
        },
        "content": "E|0|project meeting |3 oct 2019 18 0 19 0"
      }
    ],
    "authorContributionMap": {
      "mrnewguy": 5
    }
  }
]
