[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 26,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "E | 0 | kick me  | 31/8/2019 2200"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 1
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The AddCommand class takes care of any commands that would"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " add tasks onto the current task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The type of task, whether it is a ToDo, Event or Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String typeOfTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new AddCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param typeOfTask The type of AddCommand task to be added to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param commandText The portion of text that contains the details of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public AddCommand(String typeOfTask, String commandText) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.description \u003d commandText;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            ui.showText(task.addTask(new ToDos(description)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            String[] input2 \u003d description.trim().split(\"/by\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (input2.length !\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            ui.showText(task.addTask(new Deadlines(input2[0], input2[1])));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            String[] input3 \u003d description.trim().split(\"/at\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (input3.length !\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            ui.showText(task.addTask(new Event(input3[0], input3[1])));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 60
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Command class covers all types of possible commands the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " may input into the application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Checks whether \"bye\" has been said, if yes then isExit is true"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     and the program will terminate, else the program continues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Description of the command, the necessary information of the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Command object,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     isExit is set to false by default."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Checks whether the terminated command has been given in order to terminate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return returns a boolean, true if \"bye\" is called, false if it is not."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public abstract void execute(TaskList task, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 44
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * Date class, to store the date information of a certain task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The day portion of the Date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The month portion of the Date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The year portion of the Date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The time portion of the Date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Date object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param info The required information to retrieve date, month, year and time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Date(String info) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Scanner sc \u003d new Scanner(info);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String[] info1 \u003d sc.next().split(\"[/]\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.day \u003d getDate(info1[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.month \u003d getMonth(info1[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.year \u003d info1[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.time \u003d getTime(sc.nextLine().trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Helps to format the date correctly."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param date date information to be formatted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return The formatted date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String getDate(String date) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        if (date.startsWith(\"1\") \u0026\u0026 date.length() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return date + \"th\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else if (date.endsWith(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return date + \"st\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else if (date.endsWith(\"2\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return date + \"nd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else if (date.endsWith(\"3\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return date + \"rd\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return date + \"th\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Helps to format the month correctly."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param month month information to be formatted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return The formatted month."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String getMonth(String month) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String[] arrayOfMonths \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return arrayOfMonths[Integer.parseInt(month) - 1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Helps to format the time correctly."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param time month information to be formatted."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return The formatted time."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String getTime(String time) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String timing \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        if (time.startsWith(\"0\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            timing \u003d time.substring(1, 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            timing \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        int t \u003d Integer.parseInt(timing);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        if (t \u003e 12) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return (t % 12) + \"pm\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return 12 + \"am\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return t + \"am\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A String representation of a Data object, printing its fields in a format."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the formatted String representation of Data objects."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"%s of %s %s, %s\", day, month, year, time);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 103
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * Deadlines is a form of Task. It contains a description of the task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " and additional information such as the date that the task is due."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The information of the Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The Date when the Deadline is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private Date details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Deadlines object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param info Additional information of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Deadlines(String description, String info) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.details \u003d new Date(info);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.info \u003d info.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Deadlines object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param checker Checks the status of the task recorded."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param info Additional information of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Deadlines(String description, String checker, String info) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description, checker);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.details \u003d new Date(info);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.info \u003d info.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Prints the task in the desired format for storing in text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Deadlines."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", super.getStatusIcon(), description, info);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Overrides the underlying Object toString method to print Deadlines in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the desired format to show to users."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Deadlines."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + details + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 57
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The DeleteCommand class takes care of any commands that would"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " delete tasks from the current task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new DeleteCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param commandText The portion of text that contains the details of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public DeleteCommand(String commandText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        description \u003d commandText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        int sizeOfList \u003d task.getNumOfTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        if (description.matches(\"^\\\\d+\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            int taskNum \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (taskNum \u003e sizeOfList || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                ui.showText(task.removeTask(taskNum));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 37
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The DoneCommand class that marks the stated task on the current task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " as done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new DoneCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param commandText The portion of text that contains the details of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public DoneCommand(String commandText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        description \u003d commandText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        int sizeOfList \u003d task.getNumOfTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String number \u003d description.substring(4).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        if (number.matches(\"^\\\\d+\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            int taskNum \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (taskNum \u003e sizeOfList || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                ui.showText(task.tickTask(taskNum));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            throw new InvalidDescriptionException(\"Wrong description\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 38
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * Duke is the main class of the app, where the execution command exists."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A Storage attribute to deal with reading data from files or writing data"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     to files."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A TaskList attribute to keep a list of all the tasks the user inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A Ui attribute to deal with all display and print showed to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Duke object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param filePath File path to the text file to read and write data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    * A method to begin the application."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * main method for the program to execute."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param args Takes in an array of Strings as arguments."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Duke duke \u003d new Duke(\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * A specific type of Exception thrown for all exceptions that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " occur in the Duke application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The exception message to be printed to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new DukeException object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param message The message to be shown by the exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Returns the exception message to be printed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the exception message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"☹ OOPS!!! %s\", message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 26
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Event class is a type of task. It contains a description of the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " event and additional information such as the date of the event."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The information of the Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The Date when the Event occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private Date details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param info Additional information of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Event(String description, String info) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.details \u003d new Date(info);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.info \u003d info.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Event object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param checker Checks the status of the task recorded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param info Additional information of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Event(String description, String checker, String info) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description, checker);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.details \u003d new Date(info);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.info \u003d info.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Prints the task in the desired format for storing in text file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", super.getStatusIcon(), description, info);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Overrides the underlying Object toString method to print Event in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the desired format to show to users."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + details + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 56
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The ExitCommand class takes care of closing the application"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " when the exit keyword \"bye\" is input by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new ExitCommand object,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     isExit is set to true by default."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     an exception occuring in the running of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        storage.writeToFile(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 28
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The FindCommand class takes care finding specific task stated"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " by user input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new FindCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description The description of the specified task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String pattern \u003d String.format(\".*%s.*\", description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        TaskList tempTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        for (Task t : task.getTaskList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            if (t.getDescription().matches(pattern)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                tempTaskList.addTask(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        ui.showText(tempTaskList.printMatchingTasks());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 34
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The InvalidCommand class that takes care of all unaccepted command words"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " passed in by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new InvalidCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     an exception occuring in the running of the application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 25
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The InvalidCommandException class handles all invalid command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " input by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new InvalidCommandException"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param message The message to be shown by the exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 14
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The InvalidDescriptionException class handles all invalid description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " added after the user input the command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class  InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new InvalidDescriptionException"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param message The message to be shown by the exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 14
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Parser class makes sense of the user command taken in, it"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " decides the next methods executed by the application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A static method used for reading in user command and deciding"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the next method to be executed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param commandText The command text entered by a user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the corresponding type of Command to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public static Command parse(String commandText) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String[] arr \u003d commandText.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String command \u003d arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new PrintCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new DoneCommand(commandText);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            System.out.println(arr[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new DeleteCommand(arr[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new AddCommand(arr[0], arr[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new AddCommand(arr[0], arr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new AddCommand(arr[0], arr[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 46
    }
  },
  {
    "path": "src/main/java/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The PrintCommand class takes care of any printing command passed in"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class PrintCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new PrintCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public PrintCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Carries out the command and does the necessary changes and prompts"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     user about the change."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param task Current list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param ui Ui for user interactions."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param storage Storage for writing of information to text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Possibility of throwing a DukeException due to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     *      an exception occuring in the running of the application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        ui.showText(task.printTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 25
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Storage class handles all reading of data from files and writing of data to"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " the files."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The file path to the text file, where data is read from and written to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param filePath The file path to the text file, where data is read from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     and written to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Loads and reads data from the file specified in the file path."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the data read as a String to be processed by TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @throws DukeException Throws a DukeException in the event the intended"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     file is not found at the file path."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String load() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(sc.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                sb.append(\"\\n\" + sc.nextLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Writes the data retrieved from TaskList to the text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param list The TaskList where updated data is retrieved from, and"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     to be written to the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void writeToFile(TaskList list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            for (Task t : list.getTaskList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                String task \u003d t.getFormattedString() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                fileWriter.write(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Task class handles all types of tasks a user will input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A boolean to represent the status of the task, true if completed,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     false if not completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Task object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param checker Checks the status of the task recorded."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Task(String description, String checker) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.isDone \u003d (checker.equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to mark the status of the task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to retrieve the status icon representing the status of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     1 if done, 0 if not done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to retrieve the description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the description of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Prints the task in the desired format for storing in text file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public abstract String getFormattedString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Overrides the underlying Object toString method to print Task in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the desired format to show to users."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 74
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The TaskList class handles consolidating the task input by the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " into a list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The ArrayList of Task contained by TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private ArrayList\u003cTask\u003e xs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * The number of Task recorded in the TaskList currently."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private int numOfTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new TaskList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        xs \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new TaskList object,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     with data read from previous existing data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param currentList The list of tasks previously stored on the text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     written to."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public TaskList(String currentList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        xs \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        integrateList(xs, currentList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to process the data of previous taskings, and add them to the"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     current TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param list List of Task to be updated."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param content Data to be processed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private void integrateList(ArrayList\u003cTask\u003e list, String content) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Scanner s \u003d new Scanner(content);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            String text \u003d s.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            String[] itemArr \u003d text.split(\" [|] \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            switch (itemArr[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                xs.add(new ToDos(itemArr[2], itemArr[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                xs.add(new Deadlines(itemArr[2], itemArr[1], itemArr[3]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                xs.add(new Event(itemArr[2], itemArr[1], itemArr[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to return the number of Task that exist in TaskList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the number of Task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to retrieve the list of task in TaskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns the list of Task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return xs;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to add a task to the list of task in TaskList."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a String to be printed when the list is updated."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String addTask(Task t) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        xs.add(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\", t, numOfTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to mark a specified task in the list as done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a String to be printed when the task is marked as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String tickTask(int num) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        xs.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", xs.get(num - 1));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to remove a task from the list of task in TaskList."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a String to be printed when the task is removed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String removeTask(int num) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        numOfTasks--;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Task t \u003d xs.get(num - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        xs.remove(num - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\", t, numOfTasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method iterate through the list of task and print each Task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a String representation of all the Task in the TaskList."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d xs.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            sb.append(\"\\n\" + String.format(\"%d.%s\", i, xs.get(i - 1)));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to print the tasks in the list that matches the predicate."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a String representation of all the Task that match the predicate."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String printMatchingTasks() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d xs.size(); i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "            sb.append(\"\\n\" + String.format(\"%d.%s\", i, xs.get(i - 1)));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 145
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The ToDos class is a type of task. It contains description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " of the task to be completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new ToDos object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new ToDos object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param checker Check the status of the task recorded."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public ToDos(String description, String checker) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        super(description, checker);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Prints the task in the desired format for storing in text file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing ToDos."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return String.format(\"T | %s | %s\", super.getStatusIcon(), description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Overrides the underlying Object toString method to print ToDos in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     the desired format to show to users."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns formatted String representing ToDos."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 40
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " * The Ui class handles the display of information to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A Scanner used for reading user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * Constructs and initializes the attributes of a new Ui object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to display welcome message at the start of the application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to display text to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param text The text to be displayed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void showText(String text) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to display the error message to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param error The Error to be displayed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void showError(DukeException error) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to display the error message upon reading data from text file at the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     start of the application."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @param error The Error to be displayed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void showLoadingError(DukeException   error) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to display the exit message to be shown when the application terminates."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * A method to read in user input for commands."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     * @return Returns a response as a result of the command executed by the application."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 70
    }
  },
  {
    "path": "src/test/java/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "class DateTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void testToString1() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Date day \u003d new Date(\"2/10/2020 1000\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(\"2nd of October 2020, 10am\", day.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void testToString2() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Date day \u003d new Date(\"2/10/2020 0000\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(\"2nd of October 2020, 12am\", day.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void testToString3() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        Date day \u003d new Date(\"2/10/2020 0500\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(\"2nd of October 2020, 5am\", day.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 24
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void parse1() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(new PrintCommand(), Parser.parse(\"add\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void parse2() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(new AddCommand(\"random\", \"random\"), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void parse3() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"any\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 21
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    void getNumOfTasks() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        TaskList task \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        task.addTask(new ToDos(\"do 2103\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        task.addTask(new ToDos(\"do 2101\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "        assertEquals(1, task.getNumOfTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "[T][0] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "[D][0] return book (by: Sunday)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "[E][0] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "1.[T][0] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "2.[D][0] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "3.[E][0] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "deadline return book /by 28/8/2020 1000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "event project meeting /at 2/9/2017 0000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OneArmyj"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "OneArmyj": 21
    }
  }
]
