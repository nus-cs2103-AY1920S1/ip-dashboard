[
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public static boolean verifyDateTimeDeadline(String dateTime) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        System.out.println(\"Input: \" + dateTime);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (dateTime.length() !\u003d 15) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String date \u003d dateTime.substring(0, 10);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String time \u003d dateTime.substring(11, 15);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int dd \u003d Integer.parseInt(date.substring(0, 2));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int mm \u003d Integer.parseInt(date.substring(3, 5));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int yyyy \u003d Integer.parseInt(date.substring(6, 10));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean dateCorrect \u003d ((01 \u003c\u003d dd) \u0026\u0026 (dd \u003c\u003d 31)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (01 \u003c\u003d mm) \u0026\u0026 (mm \u003c\u003d 12));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes \u003d Integer.parseInt(time.substring(2));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean timeCorrect \u003d ((00 \u003c\u003d hh) \u0026\u0026 (hh \u003c\u003d 23)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes) \u0026\u0026 (minutes \u003c\u003d 59));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return dateCorrect \u0026\u0026 timeCorrect;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid date-time format.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public static boolean verifyDateTimeEvent(String dateTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        System.out.println(\"Input: \" + dateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (dateTime.length() !\u003d 20) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String date \u003d dateTime.substring(0, 10);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String time \u003d dateTime.substring(11, 20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int dd \u003d Integer.parseInt(date.substring(0, 2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int mm \u003d Integer.parseInt(date.substring(3, 5));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int yyyy \u003d Integer.parseInt(date.substring(6, 10));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean dateCorrect \u003d ((01 \u003c\u003d dd) \u0026\u0026 (dd \u003c\u003d 31)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (01 \u003c\u003d mm) \u0026\u0026 (mm \u003c\u003d 12));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh1 \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes1 \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int hh2 \u003d Integer.parseInt(time.substring(5, 7));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            int minutes2 \u003d Integer.parseInt(time.substring(7, 9));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            boolean timeCorrect \u003d ((00 \u003c\u003d hh1) \u0026\u0026 (hh1 \u003c\u003d 23)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes1) \u0026\u0026 (minutes1 \u003c\u003d 59))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 ((00 \u003c\u003d hh2) \u0026\u0026 (hh2 \u003c\u003d 23)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    \u0026\u0026 (00 \u003c\u003d minutes2) \u0026\u0026 (minutes2 \u003c\u003d 59));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return dateCorrect \u0026\u0026 timeCorrect;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid date-time format.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 54
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"D | \" + super.getAscii() + \" | \" + by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.IllegalFormatException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            setStorage(new Storage(filePath));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            System.out.println(\"Invalid file path!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setStorage(Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        new Duke(\"C:/CS2103/iP/data/duke.txt\").run();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "         */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        dukeOutput(\"Hello, this is Duke.\\n\" + \"How may I help you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        readInputs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void readInputs() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        while (!input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                evaluateInput(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                dukeOutput(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluateInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                dukeOutput(\"Bye. Have a nice day!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                printTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (input.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                evaluateDone(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (input.toLowerCase().startsWith(\"todo\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    || input.toLowerCase().startsWith(\"deadline\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    || input.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addTask(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (input.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                deleteTask(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                throw new DukeException(\"OOPS!!! I don\u0027t know what this is :(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            storage.writeTasks(getTasksAscii());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(\"OOPS!!! Check your data file path :-(\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void evaluateDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String number \u003d input.substring(4, input.length()).strip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (number.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(\"Invalid input! Mention a valid task number.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                if (taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    dukeOutput(\"Task doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    String output \u003d \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                            + \"\\n  \" + tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                    dukeOutput(output);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                throw new DukeException(\"OOPS!!! The Done command must be followed by a valid task ID.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (tokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid delete command.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                Task removedTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                String message \u003d \"Noted. I\u0027ve deleted this task:\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                        + \"  \" + removedTask.toString()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                        + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                dukeOutput(message);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please enter a valid number after delete.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addTask(String description) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String taskType \u003d tokens[0];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        //System.out.println(taskType);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (taskType.equalsIgnoreCase(\"Event\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addEvent(description);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"Todo\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addTodo(description);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"Deadline\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                addDeadline(description);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                dukeOutput(\"Invalid task!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(e.getMessage());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addEvent(String description) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        int indexOfAt \u003d description.indexOf(\"/at\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The event description must contain a time following \\\"/at\\\"\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String desc \u003d description.substring(5, indexOfAt).strip();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String at \u003d description.substring(indexOfAt + 3).strip();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!Date.verifyDateTimeEvent(at)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(\"Invalid format! Please stick to DD/MM/YYYY HHMM-HHMM\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            tasks.add(new Event(desc, at));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            printTaskAdded();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addTodo(String description) throws DukeException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder desc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 1; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            desc.append(tokens[i] + \" \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String newDescription \u003d desc.toString().strip();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        tasks.add(new Todo(newDescription));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        printTaskAdded();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void addDeadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        int indexOfBy \u003d description.indexOf(\"/by\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The deadline description must contain a time following \\\"/by\\\"\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String desc \u003d description.substring(8, indexOfBy).strip();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String by \u003d description.substring(indexOfBy + 3).strip();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!Date.verifyDateTimeDeadline(by)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(\"Invalid time format! Please stick to DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            tasks.add(new Deadline(desc, by));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            printTaskAdded();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void printTaskAdded() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + \"  \" + tasks.get(tasks.size() - 1).toString()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + \"\\n\" + getNumberOfTasks();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        dukeOutput(output);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            output.append((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (output.toString().isBlank()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(\"You have no tasks to do o_O!\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            dukeOutput(output.toString());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getTasksAscii() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            output.append((i + 1) + \". \" + tasks.get(i).getAscii());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getNumberOfTasks() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void dukeOutput(String out) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String bound \u003d \"_______________________________________\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String newOutput \u003d out.replace(\"\\n\", \"\\n    \");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        System.out.println(\"    \" + bound + \"\\n    \""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                + newOutput + \"\\n    \" + bound);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 213,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 6
    }
  },
  {
    "path": "src/main/java/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Hello, this is Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    How may I help you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! I don\u0027t know what this is :("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! I don\u0027t know what this is :("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! The deadline description must contain a time following \"/by\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [T][?] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    OOPS!!! The Done command must be followed by a valid task ID."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [T][?] read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    3. [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Noted. I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "      [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Task doesn\u0027t exist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    1. [T][?] read book"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    2. [D][?] return book (by: Aug 31st)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    3. [E][?] lecture (at: 4 PM)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    Bye. Have a nice day!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    _______________________________________"
      }
    ],
    "authorContributionMap": {
      "uggi121": 77
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"E | \" + super.getAscii() + \" | \" + at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 22
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Storage(String filePath) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        setFilePath(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setFilePath(String filePath) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void writeTasks(String content) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        fw.write(content);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new FileNotFoundException(\"Please check your file path!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                tasks.add(parseStoredTask(line));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                // What to do?"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    private Task parseStoredTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String[] tokens \u003d task.substring(3).split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (tokens[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Deadline d \u003d new Deadline(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                d.setDone(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return d;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Event e \u003d new Event(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                e.setDone(true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return e;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            Todo t \u003d new Todo(tokens[2]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uggi121"
        },
        "content": "                t.setDone(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid task.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 71
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String doneOrNot \u003d isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return doneOrNot + \" | \" + getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        String value \u003d \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a Todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String getAscii() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"T | \" + super.getAscii();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uggi121": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uggi121"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uggi121"
        },
        "content": "if not exist C:\\CS2103\\iP\\bin mkdir C:\\CS2103\\iP\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uggi121"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uggi121"
        },
        "content": "javac  -cp C:\\CS2103\\iP\\src\\ -Xlint:none -d C:\\CS2103\\iP\\bin C:\\cs2103\\iP\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uggi121"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uggi121"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uggi121"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uggi121"
        },
        "content": "java -classpath C:\\CS2103\\iP\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uggi121"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uggi121"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uggi121"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "uggi121": 21
    }
  }
]
