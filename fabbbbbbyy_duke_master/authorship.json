[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "fabbbbbbyy": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 1
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Keep track of daily tasks: to-dos, deadlines and events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Search for repeating keywords in tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `help` - Provides a list of possible Duke commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Displays a list of possible Duke commands that the user can "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "input into Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Type one of the following commands: todo \u003ctaskName\u003e ...`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `todo` - Adds a todo task to the user list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Adds a todo task to the user list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`todo (taskName)`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Got it. I\u0027ve added this task...`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `deadline` - Adds a deadline task to the user list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Adds a deadline task to the user list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`deadline (taskName) / (deadlineDate) (deadlineTime)`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Got it. I\u0027ve added this task...`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `event` - Adds a event task to the user list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Adds a event task to the user list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`event (taskName) / (eventDate) (eventTime)`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Got it. I\u0027ve added this task...`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `list` - Lists everything in the user task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Lists everything in the user task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Here are the tasks in your list...`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `find` - Finds all tasks in the user list with the matching keyword."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Finds all tasks in the user list with the matching keyword."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`find (keyword)`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Here are the matching tasks in your list...`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "### `delete` - Deletes the task in the list with the same index."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Deletes the task in the list with the same index."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`delete (taskNumber)`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "`Got it. I\u0027ve deleted...`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "fabbbbbbyy": 82
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates an add command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String taskDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an AddCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskType The type of task to be recorded."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDescription The description of task to be recorded."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public AddCommand(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an AddCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskType The type of task to be recorded."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDescription The description of task to be recorded."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskDateTime The date \u0026 time of the task to be recorded."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public AddCommand(String taskType, String taskDescription, String taskDateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the add command; creates and adds the task to the task list,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the added message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful add command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isToDo(taskType)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ToDo toDo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return ui.stringAddedMessage(toDo, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDeadline(taskType)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return ui.stringAddedMessage(deadline, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Event event \u003d new Event(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return ui.stringAddedMessage(event, taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isToDo(String str) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"todo\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDeadline(String str) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"deadline\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 66
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a bye command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an ByeCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the bye command; stores the task list in the hard drive,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the bye message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful bye command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        storage.storeList(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringGoodbyeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 29
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a possible command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns true if isExit is true, else false."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The boolean value of isExit."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 20
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Represents the date time of user input in proper format."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String[] months \u003d {\"DummyMonth\", \"January\", \"February\", \"March\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \"December\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DateTime instance with the appropriate attributes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param day The day."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param month The month."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param year The year."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param time The time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DateTime(String day, String month, String year,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                            String time) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the user input into proper representation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void format() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatDay();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatMonth();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formatTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the day into proper representation."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatDay() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(day.equals(\"01\") || day.equals(\"1\") || day.equals(\"21\") || day.equals(\"31\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"st\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(day.equals(\"02\") || day.equals(\"2\") || day.equals(\"22\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"nd\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(day.equals(\"03\") || day.equals(\"3\") || day.equals(\"23\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"rd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            day +\u003d \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the month into proper representation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatMonth() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        month \u003d months[Integer.parseInt(month)];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the time into proper representation."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void formatTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int twentyFourHourTime \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int hours \u003d twentyFourHourTime / 100;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int minutes \u003d twentyFourHourTime % 100;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int convertedHours \u003d hours % 12;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(convertedHours \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            convertedHours \u003d 12;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String meridian;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(hours \u003c 12) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            meridian \u003d \"am\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            meridian \u003d \"pm\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(minutes \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            time \u003d convertedHours + meridian;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            time \u003d convertedHours + \":\" + minutes + meridian;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a DateTime object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The day, month, year and time formatted into proper"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * representation."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 105
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a deadline task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Deadline instance with the appropriate attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"D | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description + \" | \" + dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + this.description + \" (\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    this.dateTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 49
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a delete command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DeleteCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskNumber The position number of the task in the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the delete command; deletes the task from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the deleted message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful delete command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Task task \u003d arrayList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.deleteTask(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringDeletedMessage(task, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 36
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a done command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a DoneCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskNumber The position number of the task in the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the done command; marks the task as done from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the done message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful done command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Task task \u003d arrayList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.setTaskAsDone(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringDoneMessage(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Handles the details of the Duke System,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * receiving user input and displaying the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * appropriate information as per requested."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Duke instance with the appropriate attributes."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The filepath to the text document for Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList \u003d storage.loadList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//     * Iteration 1:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//     * @param text String containing text to add"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//        return textToAdd;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                DialogBox.getUserDialog(userText, new Image(String.valueOf(user))),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new Image(String.valueOf(duke)))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(userText.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes and handles user input."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the result of the user input."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String response \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "fabbbbbbyy": 155
    }
  },
  {
    "path": "src/main/java/DummyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a dummy command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * This is to be used to signify an error."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DummyCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * A dummy execute method which does absolutely nothing."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful dummy command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return EMPTY_STRING;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 22
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors. Specifically, empty descriptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class EmptyDescriptionException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates an event task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an Event instance with the appropriate attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"E | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description + \" | \" + dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of an Event task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + this.description + \" (\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                this.dateTime + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 49
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a find command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a FindCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param word The word to be found."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the find command; finds tasks with the word from the task list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and prints the found message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful find command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        TaskList foundList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(Task task : arrayList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(task.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                foundList.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringFoundMessage(foundList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 41
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a help command of the Duke System. C-Help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the help command; shows all possible Duke commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful help command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringHelpMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 19
    }
  },
  {
    "path": "src/main/java/InputMismatchException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors. Specifically, input mismatches."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class InputMismatchException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InputMismatchException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates an invalid command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an InvalidCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.errorMessage \u003d EMPTY_STRING;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates an InvalidCommand instance with the appropriate attributes."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param errorMessage The string representation of the error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InvalidCommand(String errorMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the invalid command; highlighting errors in input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful help command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringInvalidMessage(errorMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 38
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates invalid user input errors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public InvalidInputException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 12
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a list command of the Duke System."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Executes the list command; prints the contents of the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list for the task to be added to."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param ui The ui which prints the added message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param storage The storage which deals with the hard drive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a successful list command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return ui.stringTaskList(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 19
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.stringWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(input.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                public void run () { System.exit(0); }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }, 1000);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 61
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a system that parses user input into"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * commands for the Duke System."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Parsers user input into appropriate commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input in String format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The command to be carried out by Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        assert fullCommand !\u003d \"\" : \" Empty String\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command returnCommand \u003d new DummyCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isBye(fullCommand)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isList(fullCommand)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isHelp(fullCommand)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDone(fullCommand)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processDoneCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isDelete(fullCommand)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processDeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isFind(fullCommand)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d processFindCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if(isToDo(fullCommand) || isDeadline(fullCommand) || isEvent(fullCommand)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                returnCommand \u003d processAddCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            } catch(InvalidInputException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                returnCommand \u003d new InvalidCommand(\"InvalidExceptionError occurred.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnCommand \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a done command for a task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the done command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The done command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processDoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command doneCommand \u003d new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return doneCommand;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a delete command for a task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the delete command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The delete command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processDeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command deleteCommand \u003d new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return deleteCommand;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes an add command for a task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the add command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The add command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws InvalidInputException The exception to be thrown if the input is invalid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processAddCommand(String fullCommand) throws InvalidInputException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // Block for catching input mismatch errors."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (!fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if (!fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if (!fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    throw new InputMismatchException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitInput \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        // Block for catching empty description errors."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (splitInput.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (isToDo(fullCommand)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(fullCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else if (isDeadline(fullCommand)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String[] splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDateTime \u003d processDateTime(splitBySlash);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(splitBySlash[0]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String[] splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskType \u003d \"event\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDateTime \u003d processDateTime(splitBySlash);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d processTaskDescription(splitBySlash[0]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            Command addCommand \u003d new AddCommand(taskType, taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return addCommand;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes a find command for a word."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param fullCommand The user input for the find command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The find command."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static Command processFindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String word \u003d splitCommand[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Command findCommand \u003d new FindCommand(word);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return findCommand;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Splits the input String into appropriate format."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The description of the action to be carried out."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static String processTaskDescription(String input) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int arrSize \u003d splitInput.length;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String returnString \u003d splitInput[1];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for (int i \u003d 2; i \u003c arrSize; i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            returnString +\u003d \" \" + splitInput[i];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return returnString;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes the date time into appropriate format."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param splitBySlash The split input."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The appropriate date time format."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static String processDateTime(String[] splitBySlash) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String day \u003d splitBySlash[1];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String month \u003d splitBySlash[2];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitYearTime \u003d splitBySlash[3].split(\" \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String year \u003d splitYearTime[0];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String time \u003d splitYearTime[1];"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        DateTime dateTime \u003d new DateTime(day, month, year, time);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        dateTime.format();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return dateTime.toString();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isBye(String str) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"bye\") || str.equals(\"Bye\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isList(String str) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.equals(\"list\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDone(String str) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"done\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDelete(String str) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"delete\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isToDo(String str) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"todo\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isDeadline(String str) { return str.startsWith(\"deadline\"); }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isEvent(String str) { return str.startsWith(\"event\"); }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isFind(String str) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"find\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static boolean isHelp(String str) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return str.startsWith(\"help\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 215
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Storage instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The filepath to the storage text document."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Loads a list from the hard drive into a task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task list, loaded with information from the hard drive."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public TaskList loadList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        transferContentsToListWrapper(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Stores a task list into a file from the hard drive."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be stored into the hard drive."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void storeList(TaskList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        writeContentsToFile(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Writes the current task list contents to the hard drive."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeContentsToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(Task task : arrayList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d task.formatForFile() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        writeToFileWrapper(formattedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Hides the try catch block whilst executing the method"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writeToFile."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param textToAdd The text to be added to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeToFileWrapper(String textToAdd) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            writeToFile(filePath, textToAdd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Writes given input to given file path."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The path to the text file to be written to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param textToAdd The text to be added to the text file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws IOException The IO Exception."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        fileWriter.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Hides the try catch block whilst executing the method"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * transferContentsToList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void transferContentsToListWrapper(TaskList taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            transferContentsToList(filePath, taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Transfers the contents of the file to a static array list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param filePath The path to the source text file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @throws FileNotFoundException The exception to be thrown if no such file is found."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void transferContentsToList(String filePath, TaskList taskList)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            processNextLine(fileReader.nextLine(), taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Processes the next line into proper format."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param nextLine The line to be processed."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private void processNextLine(String nextLine, TaskList taskList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String[] splitString \u003d nextLine.split(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String taskType \u003d splitString[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String doneStatus \u003d splitString[2];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d splitString[4];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int i \u003d 5; i \u003c splitString.length; i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskDescription +\u003d \" \" + splitString[i];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            ToDo toDo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                toDo.setDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            int counter \u003d 5;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String taskDescription \u003d splitString[4];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int i \u003d 5; i \u003c splitString.length \u0026\u0026 !splitString[i].equals(\"|\"); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskDescription +\u003d \" \" + splitString[i];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            String dateTime \u003d splitString[++counter];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            for(int j \u003d counter + 1; j \u003c splitString.length; j++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                dateTime +\u003d \" \" + splitString[j];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            if(taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskDescription, dateTime);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    deadline.setDone();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskList.addTask(deadline);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                Event event \u003d new Event(taskDescription, dateTime);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                if(doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                taskList.addTask(event);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 171
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Task instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the status icon of a task, with ticks representing done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * and crosses representing undone."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The status icon of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the task description in String format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Sets the status of a task to be done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public abstract String formatForFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates Duke\u0027s task list and handles operations such as"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * adding, removing and marking tasks as done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a TaskList instance with the appropriate attributes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the size of a task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the array list of a task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The array list of a task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ArrayList getArrayList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be added to the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be deleted from the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Sets a task as done from the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be set as done from the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void setTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Lists all the tasks in the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int indexNumber \u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            tasks +\u003d (indexNumber++) + \". \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 73
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Simulates a to do task for accessing and updating descriptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * and done statuses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a ToDo instance with the appropriate attributes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Formats the task in suitable String representation for"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * writing to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String formattedTask \u003d \"T | \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"1 | \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            formattedTask +\u003d \"0 | \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        formattedTask +\u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return formattedTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a string representation of a ToDo task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 45
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * Handles the interaction with user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " * @author Fabian Chia Hup Peng"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String NEW_LINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m Damith!\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d \"Bye. Please come for lectures!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String HELP_MESSAGE \u003d \"Type one of the following commands:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String TASKS_MESSAGE \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private static final String INVALID_MESSAGE \u003d \"Sorry, I don\u0027t recognise that!\\n\\nFor a list of commands: type \u0027help\u0027\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Creates a Ui instance with the appropriate attributes."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Reads the next line of user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The user input, in string representation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke welcome message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke welcome message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public static String stringWelcomeMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return INTRO_MESSAGE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke goodbye message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke deleted message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringGoodbyeMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return GOODBYE_MESSAGE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke added message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be added to."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke added message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringAddedMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d ADDED_MESSAGE + task + NEW_LINE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int numTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (numTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            message +\u003d \"Now you have \" + numTasks + \" task in the list.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            message +\u003d \"Now you have \" + numTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke deleted message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list to be deleted from."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke deleted message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringDeletedMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d DELETED_MESSAGE + task + NEW_LINE;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        int numTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        if (numTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            message +\u003d \"Now you have \" + numTasks + \" task in the list.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            message +\u003d \"Now you have \" + numTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke done message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param task The task to be set as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke done message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringDoneMessage(Task task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d DONE_MESSAGE + task + NEW_LINE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the contents of a found list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param foundList The found list with contents to be returned."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the contents of the found list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringFoundMessage(TaskList foundList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d FOUND_MESSAGE + foundList.listTasks();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns all possible Duke commands."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of all possible Duke commands."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringHelpMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d HELP_MESSAGE + NEW_LINE + generatePossibleCommands();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the Duke invalid message."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param errorMessage The string representation of the error message."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the Duke invalid message."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringInvalidMessage(String errorMessage) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d INVALID_MESSAGE + NEW_LINE + errorMessage;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns the contents of a task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @param taskList The task list with contents to be returned."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of the contents of the task list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public String stringTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String message \u003d TASKS_MESSAGE + taskList.listTasks();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * Returns a list of possible Duke commands."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     * @return The string representation of a list of possible Duke commands."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    private String generatePossibleCommands() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        String allCommands \u003d \"todo \u003ctaskName\u003e\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tAdds a todo task to the list\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"deadline \u003ctaskName\u003e / \u003cdd/mm/yyyy\u003e \u003c24HrTime\u003e\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tAdds a deadline task to the list\\n\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"event \u003ctaskName\u003e / \u003cdd/mm/yyyy\u003e \u003c24HrTime\u003e\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tAdds an event task to the list\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"list\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tDisplays all tasks in the list\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"find \u003ckeyWord\u003e\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tDisplays all tasks with \u003ckeyWord\u003e in description\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"delete \u003ctaskNumber\u003e\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                                + \"\\tDeletes the task with matching \u003ctaskNumber\u003e in list\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        return allCommands;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 169
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fabbbbbbyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fabbbbbbyy": 10
    }
  }
]
