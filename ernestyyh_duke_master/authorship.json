[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task that needs to be done before a specific date/time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * two Strings e.g., \u003ccode\u003e\"submit report\",\"11/10/2019 5pm\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Date/time deadline for this task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a chatbot assistant. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * to a chatbot that has \u003ccode\u003eStorage\u003c/code\u003e, \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * and \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object with a storage filepath."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param filePath Storage filepath."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Initiates the chatbot to take user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui.initiate(storage, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 36,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents an exception encountered by \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(\"File does not exist\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Creates a \u003ccode\u003eDukeException\u003c/code\u003e that prints an error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(String.format(\"\\u2639 OOPS!!! %s\\n\", message));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task that starts and ends at a specific time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * two Strings e.g., \u003ccode\u003e\"team project meeting\",\"2/10/2019 2-4pm\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Event time for this task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task event time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param at Event time of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 36
    }
  },
  {
    "path": "src/main/java/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents an exception thrown when arguments are insufficient."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InsufficientArgumentException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Creates a \u003ccode\u003eInsufficientArgumentException\u003c/code\u003e for the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * given error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InsufficientArgumentException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 15
    }
  },
  {
    "path": "src/main/java/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents an exception thrown when arguments are invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Creates a \u003ccode\u003eInvalidArgumentException\u003c/code\u003e for the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * given error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 15
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a parser that makes sense of user commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns parsed command from given user command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Parsed command is represented by an array that contains"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * command type and command details."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param input User command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Parsed command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo \u003d new String[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.matches(\"done\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DONE\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"done\\\\s+\", \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"delete\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DELETE\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"delete\\\\s+\", \"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"todo\\\\s+.+\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"TODO\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"todo\\\\s+\", \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"deadline\\\\s+.+\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DEADLINE\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"deadline\\\\s+\", \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"event\\\\s+.+\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"EVENT\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"event\\\\s+\", \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"find\\\\s+.+\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"FIND\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"find\\\\s+\", \"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"LIST\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"UNKNOWN\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns parsed details from given command details."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Parsed details represented by array that contains task description"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * and task date/time information."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param input Command details."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Parsed details."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseDetails(String input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        parseInfo[1] \u003d convertDate(parseInfo[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns date/time in text format from date/time in numerical format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param date Numerical date/time."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Textual date/time."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String convertDate(String date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat numDateTime \u003d new SimpleDateFormat(\"d/M/y HHmm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat textDateTime \u003d new SimpleDateFormat(\"d MMMM y, h.mma\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (date.matches(\"\\\\d+/\\\\d+/\\\\d+\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                Date d \u003d numDateTime.parse(date);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                date \u003d textDateTime.format(d);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 91
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a storage handler that loads from and saves task to a file location."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a storage handler that interacts"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * with a \u003ccode\u003eFile\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private File diskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e based on a storage filepath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param filePath Storage filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        diskList \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns updated list of tasks from specified storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @throws DukeException If diskList does not exist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            Scanner s \u003d new Scanner(diskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                String[] savedTasks \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                switch (savedTasks[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Todo t \u003d new Todo(savedTasks[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTasks[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        t.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Deadline d \u003d new Deadline(savedTasks[2], savedTasks[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTasks[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        d.setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    tasks.add(d);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Event e \u003d new Event(savedTasks[2], savedTasks[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTasks[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        e.setDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    tasks.add(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Overwrites stored list of tasks with given list of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void overWrite(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            diskList.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String s \u003d t.formatString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (first) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(s);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(String.format(\"\\n%s\", s));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(diskList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 105
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task with a description and state."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * a String and a boolean e.g., \u003ccode\u003e\"read book\",true\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** State of task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTask\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * initial state being false."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns symbolic status of specified task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Symbolic status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public abstract String formatString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns true if specified task has description which contains given keyword."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param keyword Possible word in task description."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return True if task description has keyword."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a list of tasks. A \u003ccode\u003eTaskList\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * corresponds to a list of tasks represented by an \u003ccode\u003eArrayList\u003c/code\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * of \u003ccode\u003eTask\u003c/code\u003e and an integer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private int numTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e from an existing list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param existingTasks Existing list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e existingTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.tasks \u003d existingTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d existingTasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public int getNumTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return numTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns last \u003ccode\u003eTask\u003c/code\u003e that was added to the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Last \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks.get(numTask - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns \u003ccode\u003eTask\u003c/code\u003e at specified index of the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param i List index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return \u003ccode\u003eTask\u003c/code\u003e at index position."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates and returns a \u003ccode\u003eTask\u003c/code\u003e as done based on task number."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param index Task number."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Done \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getDoneTask(String index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d tasks.get(Integer.valueOf(index) - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Removes a \u003ccode\u003eTask\u003c/code\u003e from list of tasks based on task number."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param index Task number."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Removed \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task deleteTask(String index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        int listRank \u003d Integer.valueOf(index) - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d tasks.get(listRank);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.remove(listRank);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask--;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param detail Task details."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addTodoTask(String detail) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Todo(detail));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param details Task details in array."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addDeadlineTask(String[] details) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Deadline(details[0], details[1]));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param details Task details in array."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addEventTask(String[] details) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Event(details[0], details[1]));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 113
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task without any specific date/time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * one String e.g., \u003ccode\u003e\"visit new theme park\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e with a task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"T | %d | %s\", super.isDone ? 1 : 0, super.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 30
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a user interface that deals with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Sets up the user interface to take in user commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param storage Storage handling."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param taskList Task handling."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void initiate(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String greeting \u003d String.format(\"\\n%s\\n%s\\n\", \"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(logo + greeting);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String[] parseInfo \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            int currentNum \u003d taskList.getNumTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            switch (parseInfo[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(taskList.getDoneTask(parseInfo[1]) + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(taskList.deleteTask(parseInfo[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.addTodoTask(parseInfo[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.addDeadlineTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.addEventTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(String.format(\"%d.%s\", i + 1, taskList.getTask(i)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"FIND\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                for (int i \u003d 0, j \u003d 0; i \u003c taskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Task current \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (current.hasKeyword(parseInfo[1])) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        System.out.println(String.format(\"%d.%s\", ++j, current));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                            || input.equals(\"done\") || input.equals(\"find\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        String message \u003d String.format(\"The description of a %s cannot be empty.\", input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new InsufficientArgumentException(message);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new InvalidArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (currentNum !\u003d taskList.getNumTask()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getNumTask()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        storage.overWrite(taskList.getList());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Prints out task addition response given specified list of task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param taskList List of task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void printTaskAddition(TaskList taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(taskList.getTask());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Prints out loading error message."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(\"No existing task list can be loaded. New task list will be created.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 117
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDateConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(\"2 September 2019, 12.00AM\", Parser.convertDate(\"02/09/2019 0000\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDetailParsing() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expectedOutputs \u003d new String[] {\"project meeting\", \"Mon 2-4pm\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[0], Parser.parseDetails(input)[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[1], Parser.parseDetails(input)[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testCommandParsing() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expectedOutputs \u003d new String[] {\"DONE\", \"1\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"done 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[0], Parser.parseCommand(input)[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[1], Parser.parseCommand(input)[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 27
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testStorageLoad() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Storage dummy \u003d new Storage(\"data/dummy.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(new ArrayList\u003cTask\u003e(), dummy.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(\"File does not exist\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 20
    }
  }
]
