[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 23,
      "-": 19
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command \"bye\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ByeCommand(String commandDesc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 20
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is an abstract class for command inputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String commandDesc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Command(String commandDesc) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.commandDesc \u003d commandDesc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for deadline tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String deadLine;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Deadline(String description, String deadLine) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.by \u003d dateFormat.parse(deadLine);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.deadLine \u003d deadLine;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.deadLine \u003d deadLine;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadLine + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"D | \" + super.getStatusIcon() + \" | \" + description + \" | \" + deadLine;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 45
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new deadline tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DeadlineCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if description is empty (does not check when user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //multiple spaces as the description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String[] commandLine \u003d commandDesc.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newDeadline.stringForAppend());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks.addDeadline(newDeadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"deadline\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with deletions of any tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DeleteCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Error if user inputs spaces"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (commandDesc.substring(7).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandDesc.substring(7).split(\" \")[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if task number is valid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.taskList.size()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.deleteFromFile(System.getProperty(\"user.dir\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        tasks.taskList.get(taskNumber - 1).stringForAppend());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If user input for task number is empty"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If non-numeric input given for task number"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 42
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command where tasks are marked as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DoneCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Error if user inputs spaces"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (commandDesc.substring(5).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandDesc.substring(5).split(\" \")[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if task number is valid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.taskList.size()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.editsFile(System.getProperty(\"user.dir\"), tasks.taskList.get(taskNumber - 1).stringForAppend());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                System.out.println(tasks.taskList.get(taskNumber - 1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If user input for task number is empty"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If non-numeric input given for task number"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is the main class for Project Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        //Load tasks from hard disk if file exists"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        new Duke(\"/data/tasks.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 44,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for custom exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/java/EmptyDescDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class of exception where the description of the command is empty."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EmptyDescDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public EmptyDescDukeException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for event tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Date at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String atString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Event(String description, String eventDate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.at \u003d dateFormat.parse(eventDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.atString \u003d eventDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.atString \u003d eventDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + atString + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"E | \" + super.getStatusIcon() + \" | \" + description + \" | \" + atString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 45
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new event tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    EventCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, EmptyDescDukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String[] commandLine \u003d commandDesc.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Event newEvent \u003d new Event(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newEvent.stringForAppend());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks.addEvent(newEvent);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"event\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 29
    }
  },
  {
    "path": "src/main/java/FileNotFoundDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the file is not found."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class FileNotFoundDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public FileNotFoundDukeException(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(filePath + \" not found\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    FindCommand(String commandDesc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            /*Check if description is empty (does not check when user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "              multiple spaces as the description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!commandDesc.substring(5).equals((\"\"))) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.findTasks(commandDesc.substring(5));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new EmptyDescDukeException(\"find\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"find\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 29
    }
  },
  {
    "path": "src/main/java/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the command is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public InvalidCommandDukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumberDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the task number is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class InvalidTaskNumberDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public InvalidTaskNumberDukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"☹ OOPS!!! The task number is \" + error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for list command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ListCommand(String commandDesc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        tasks.displayTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class which makes sense and differentiates the commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Makes sense of user input to which command it corresponds to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new ByeCommand(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new TodoCommand(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidCommandDukeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 35
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class to deal with writing and loading from hard disk."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.filePath \u003d currentDirectory + filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (dataFile.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Scanner fileReader \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                fileReader \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new FileNotFoundDukeException(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Load the data from hard disk and create the taskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String readNewLine \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String[] arrayInput \u003d readNewLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                if (arrayInput[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Todo newTodo \u003d new Todo(arrayInput[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newTodo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } else if (arrayInput[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(arrayInput[2], arrayInput[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Event newEvent \u003d new Event(arrayInput[2], arrayInput[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newEvent);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //If tasks is done, mark as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                if (arrayInput[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.get(taskList.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new FileNotFoundDukeException(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Function to append to file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Deletes specific line from file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void deleteFromFile(String currentDirectory, String line) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File inputFile \u003d new File(currentDirectory + \"/data/tasks.txt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File tempFile \u003d new File(currentDirectory + \"/data/temp.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!trimmedLine.equals(line)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(currentLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isDeleted \u003d inputFile.delete();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isRenamed \u003d tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Edits status of a record"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void editsFile(String currentDirectory, String line) throws IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File inputFile \u003d new File(currentDirectory + \"/data/tasks.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File tempFile \u003d new File(currentDirectory + \"/data/temp.txt\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!trimmedLine.equals(line)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(currentLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String newLine \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String[] splittedParts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                for (int j \u003d 0; j \u003c splittedParts.length; j++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    if (j !\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d \"|\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    if (j \u003d\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d \" \\u2713 \";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d splittedParts[j];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(newLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isDeleted \u003d inputFile.delete();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isRenamed \u003d tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 129
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class which keeps track of the list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Create new file to store task lists"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public TaskList() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File parent \u003d new File(currentDirectory + \"/data/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File newFile \u003d new File(parent, \"/tasks.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (parent.mkdirs()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            boolean isCreated \u003d newFile.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Load tasklist with data from hard disk"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void displayTaskList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numCommands \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i : taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            numCommands +\u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            System.out.println(numCommands + \".\" + i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void addToDo(Todo newTodo) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(newTodo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void addDeadline(Deadline newDeadline) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void addEvent(Event newEvent) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(newEvent);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(taskList.get(taskNumber - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void findTasks(String taskName) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numCommands \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i : taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            numCommands +\u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i.description.toLowerCase().contains(taskName.toLowerCase())) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                System.out.println(numCommands + \".\" + i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 78
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for todo tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"T | \" + super.getStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 31
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new todo tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    TodoCommand(String commandDesc) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            /*Check if description is empty (does not check when user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "              multiple spaces as the description.)*/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!commandDesc.substring(5).equals((\"\"))) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                Todo newTodo \u003d new Todo(commandDesc.substring(5));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newTodo.stringForAppend());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.addToDo(newTodo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new EmptyDescDukeException(\"todo\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for ui which deals with user interactions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Display welcome message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Read new command inputs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Shows the divider line"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Display error messages"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void showError(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    //Display exit message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 46
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Deadline test \u003d new Deadline(\"Return book\", \"12/12/2019 1200\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[D][\" + \"✘\" + \"] Return book (by: 12/12/2019 1200)\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"D | \" + \"✘\" + \" | Return book | 12/12/2019 1200\", test.stringForAppend());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Event test \u003d new Event(\"Project meeting\", \"12/12/2019 1200\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[E][\" + \"✘\" + \"] Project meeting (at: 12/12/2019 1200)\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"E | \" + \"✘\" + \" | Project meeting | 12/12/2019 1200\", test.stringForAppend());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Todo test \u003d new Todo(\"Read book\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[T][\" + \"✘\" + \"] Read book\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"T | \" + \"✘\" + \" | Read book\", test.stringForAppend());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 12
    }
  }
]
