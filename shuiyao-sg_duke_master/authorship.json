[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[D][✓] return book 1 by: 1 FEBRUARY 2019 21:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[E][✘] project meeting at: 1 JUNE 2019 13:00 to 15:30"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.date.MyDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected MyDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.by \u003d MyDate.genMyDate(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Deadline genDeadline(String s) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des, by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            by \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for deadline. \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"Please key in \u0027deadline \u003ctask\u003e /by \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new Deadline(des, by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[D]\" + super.toString() + \" by: \" + by.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String INDENT_BY_FOUR \u003d \" \" + \" \" + \" \" + \" \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d INDENT_BY_FOUR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FILE_PATH \u003d \"F:/CS2103T/Duke/data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        String filePath \u003d \"/data/duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        //initiate task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        // read input file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(new File(FILE_PATH));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String heading \u003d \"File successfully loaded. Remaining tasks: \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (heading.length() + 5) + \"s\\n\", heading);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String nextLineOfFile \u003d fileScanner.nextLine().trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task task \u003d genTaskFromFile(nextLineOfFile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            //System.out.println(nextLineOfFile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            System.out.printf(\"%1$\" + (nextLineOfFile.length() + 5) + \"s\\n\", nextLineOfFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (input.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"Empty user input is not allowed\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    bye();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//                    fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    printList(list);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    if (inputArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            int index \u003d Integer.parseInt(inputArray[1]) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            String initialTaskString \u003d task.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            printDoneTask(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            //modify file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(FILE_PATH));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            String output \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            for (String s : inputList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                if (s.equals(initialTaskString)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    output +\u003d task.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    output +\u003d s + System.lineSeparator();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            FileWriter fw \u003d new FileWriter(FILE_PATH, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            fw.write(output);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Please enter an integer after \u0027done\u0027\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Input is not an integer. \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    + \"Please enter an integer after \u0027done\u0027\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Please input a number between 1 and \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    + list.size() + \" (inclusive)\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    } else if (inputArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            int index \u003d Integer.parseInt(inputArray[1]) - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            list.remove(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            printTaskDeleted(list, task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            /*"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            need to add file output"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                             */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            //modify file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(FILE_PATH));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            String output \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            for (String s : inputList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                if (!s.equals(task.toString())) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    output +\u003d s + System.lineSeparator();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            FileWriter fw \u003d new FileWriter(FILE_PATH, false);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            fw.write(output);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            fw.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Please enter an integer after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Input is not an integer. \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    + \"Please enter an integer after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            throw new DukeIllegalArgumentException(\"Please input a number between 1 and \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                    + list.size() + \" (inclusive)\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    } else if (inputArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        String des \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        Task task \u003d new ToDo(des);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        printTaskAdded(list, task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        // append to file"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.close();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    } else if (inputArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        String newInput \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        Task task \u003d Deadline.genDeadline(newInput);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        printTaskAdded(list, task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        // append to file"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.close();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    } else if (inputArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        String newInput \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        Task task \u003d Event.genEvent(newInput);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        printTaskAdded(list, task);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        // append to file"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        fw.close();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        String secondLine \u003d \"Permissible command: [list], [done], [todo], [deadline], [event], [bye]\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"Illegal user input.\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                                + String.format(\"%1$\" + (secondLine.length() + 5) + \"s\", secondLine));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String firstLine \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String secondLine \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (firstLine.length() + 5) + \"s\\n\", firstLine);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (secondLine.length() + 5) + \"s\\n\", secondLine);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void bye() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (bye.length() + 5) + \"s\\n\", bye);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printDoneTask(Task task) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String heading \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (heading.length() + 5) + \"s\\n\", heading);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (task.toString().length() + 7) + \"s\\n\",task.toString());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String heading \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (heading.length() + 5) + \"s\\n\", heading);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String output \u003d index + \".\" + task.toString();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            System.out.printf(\"%1$\" + (output.length() + 5) + \"s\\n\", output);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskAdded(List\u003cTask\u003e list, Task task) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String firstLine \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, firstLine);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskDeleted(List\u003cTask\u003e list, Task task) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String firstLine \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, firstLine);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTask(List\u003cTask\u003e list, Task task, String firstLine) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String lastLine \u003d \"Now you have\" + \" \" + list.size() + \" \" + \"tasks in the list.\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (firstLine.length() + 5) + \"s\\n\", firstLine);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\" + (task.toString().length() + 7) + \"s\\n\", task.toString());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.printf(\"%1$\"+ (lastLine.length() + 5) + \"s\\n\", lastLine);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static String reformString(String[] arr, int start, int end) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            output +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static Task genTaskFromFile(String s) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        char taskType \u003d s.charAt(1);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String isDone \u003d s.charAt(4) + \"\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int index \u003d s.indexOf(\"] \");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String taskContent \u003d s.substring(index + 1).trim();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Task todo \u003d new ToDo(taskContent);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                String[] deadlineContentArray \u003d taskContent.split(\"by:\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Task deadline \u003d new Deadline(deadlineContentArray[0].trim(), deadlineContentArray[1].trim());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                String[] eventContentArray \u003d taskContent.split(\"at:\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Task event \u003d new Event(eventContentArray[0].trim(), eventContentArray[1].trim());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 280,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.date.MyDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "//    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected MyDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.at \u003d MyDate.genMyDate(at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Event genEvent(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des, at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            at \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for event. \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"Please key in \u0027event \u003ctask\u003e /at \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new Event(des, at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[E]\" + super.toString() + \" at: \" + at.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.RedundantOperationException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task(String description) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Please specify your task description after your command\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new RedundantOperationException(\"The task has already been done\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 36
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ToDo(String descprition) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(descprition);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 11
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/date/Month.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public enum Month {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JANUARY(1),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    FEBRUARY(2),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    MARCH(3),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    APRIL(4),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    MAY(5),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JUNE(6),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JULY(7),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    AUGUST(8),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    SEPTEMBER(9),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    OCTOBER(10),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    NOVEMBER(11),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    DECEMBER(12);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Month(int value) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Month parseFromInt(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (i) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return JANUARY;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return FEBRUARY;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return MARCH;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return APRIL;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return MAY;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return JUNE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return JULY;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return AUGUST;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return SEPTEMBER;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return OCTOBER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return NOVEMBER;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return DECEMBER;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static Month parseFromString(String month) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (month.equalsIgnoreCase(\"JANUARY\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JANUARY;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"FEBRUARY\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return FEBRUARY;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"MARCH\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MARCH;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"APRIL\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return APRIL;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"MAY\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MAY;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"JUNE\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JUNE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"JULY\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JULY;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"AUGUST\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return AUGUST;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"SEPTEMBER\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return SEPTEMBER;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"OCTOBER\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return OCTOBER;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"NOVEMBER\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return NOVEMBER;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"DECEMBER\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return DECEMBER;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 84
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/date/MyDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class MyDate {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Month month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int fromHour;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int fromMin;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int toHour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int toMin;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private MyDate(int day, int month, int year, int fromHour, int fromMin, int toHour, int toMin) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.month \u003d Month.parseFromInt(month);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromHour \u003d fromHour;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromMin \u003d fromMin;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toHour \u003d toHour;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toMin \u003d toMin;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private MyDate(int day, Month month, int year, int fromHour, int fromMin, int toHour, int toMin) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromHour \u003d fromHour;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromMin \u003d fromMin;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toHour \u003d toHour;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toMin \u003d toMin;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static MyDate genMyDate(String date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] tempArray \u003d date.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (tempArray.length \u003e 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int day \u003d Integer.parseInt(tempArray[0]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Month month \u003d Month.parseFromString(tempArray[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int year \u003d Integer.parseInt(tempArray[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (tempArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new MyDate(day, month, year, -1, -1, -1, -1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int fromHour \u003d Integer.parseInt(tempArray[3].substring(0, 2));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int fromMin \u003d Integer.parseInt(tempArray[3].substring(3));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (tempArray.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new MyDate(day, month, year, fromHour, fromMin, -1, -1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int toHour \u003d Integer.parseInt(tempArray[5].substring(0, 2));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int toMin \u003d Integer.parseInt(tempArray[5].substring(3));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, fromHour, fromMin, toHour, toMin);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] dateArray \u003d tempArray[0].split(\"/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int month \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, -1, -1, -1, -1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] timeArray \u003d tempArray[1].split(\"-\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int fromHour \u003d Integer.parseInt(timeArray[0].substring(0, 2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int fromMin \u003d Integer.parseInt(timeArray[0].substring(2));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (timeArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, fromHour, fromMin, -1, -1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int toHour \u003d Integer.parseInt(timeArray[1].substring(0, 2));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int toMin \u003d Integer.parseInt(timeArray[1].substring(2));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new MyDate(day, month, year, fromHour, fromMin, toHour, toMin);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return toHour \u003c 0"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    ? fromHour \u003c 0"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        ? day + \" \" + month.toString() + \" \" + year"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        : day + \" \" + month.toString() + \" \" + year + \" \" + String.format(\"%02d\", fromHour) + \":\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            + String.format(\"%-2s\", fromMin).replace(\u0027 \u0027, \u00270\u0027)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    : day + \" \" + month.toString() + \" \" + year + \" \" + String.format(\"%02d\", fromHour) + \":\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            + String.format(\"%-2s\", fromMin).replace(\u0027 \u0027, \u00270\u0027) + \" to \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                            + String.format(\"%02d\", toHour) + \":\" + String.format(\"%-2s\", toMin).replace(\u0027 \u0027, \u00270\u0027);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 93
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeArrayIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeArrayIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeArrayIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 8
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String horizontalLine \u003d \" \" + \" \" + \" \" + \" \" + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return horizontalLine + \"\\n\" + String.format(\"%1$\" + (super.getMessage().length() + 5) + \"s\\n\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                super.getMessage()) + horizontalLine + \"\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 8
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/RedundantOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class RedundantOperationException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public RedundantOperationException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 8
    }
  }
]
