[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "group \u0027weijie.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    mainClassName \u003d \"weijie.duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.3.1\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    archiveVersion \u003d \"0.1.3\" "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "weiijiie": 30
    }
  },
  {
    "path": "src/main/java/weijie/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.commands.CommandList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.commands.TaskCommandFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.db.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.presenters.TasksPresenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.TaskRepo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.views.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private TasksPresenter presenter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private void initDependencies() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            IRepository\u003cTask\u003e repo \u003d new TaskRepo(storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            TaskCommandFactory factory \u003d new TaskCommandFactory(CommandList.getCommandMap());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            factory.registerDependency(repo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            factory.registerDependency(ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            presenter \u003d new TasksPresenter(ui, factory);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            ui.printExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        initDependencies();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        presenter.run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "weiijiie": 48
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public abstract class AddCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    AddCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.repo \u003d repo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public abstract TaskResponse execute(String... args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    String getResponseFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        int size \u003d repo.getSize();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  %s\\nNow you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 21
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.utils.DateUtils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    AddDeadlineCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(repo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @SuppressWarnings(\"Duplicates\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] descriptionAndDate \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (descriptionAndDate.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            System.out.println(\"help\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(new DukeInvalidInputException(\"☹ OOPS!!! Must specify date and time for deadline\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(descriptionAndDate[1].trim(), DateUtils.DUKE_DATETIME_PARSE_FORMAT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Date and time must be in the format DD/MM/YYYY HHMM\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task \u003d new Deadline(descriptionAndDate[0], dateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            repo.create(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(getResponseFormat(), Collections.singletonList(task));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 50
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.utils.DateUtils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    AddEventCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(repo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @SuppressWarnings(\"Duplicates\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] descriptionAndDate \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (descriptionAndDate.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(new DukeInvalidInputException(\"☹ OOPS!!! Must specify date and time for event\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(descriptionAndDate[1].trim(), DateUtils.DUKE_DATETIME_PARSE_FORMAT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Date and time must be in the format DD/MM/YYYY HHMM\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task \u003d new Event(descriptionAndDate[0], dateTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            repo.create(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(getResponseFormat(), Collections.singletonList(task));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 49
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    AddTodoCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(repo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @SuppressWarnings(\"Duplicates\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            repo.create(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(getResponseFormat(), Collections.singletonList(task));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 38
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "@SuppressWarnings(\"unused\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public enum CommandList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    LIST_COMMAND(\"list\", ListCommand.class),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    ADD_TODO_COMMAND(\"todo\", AddTodoCommand.class),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    ADD_DEADLINE_COMMAND(\"deadline\", AddDeadlineCommand.class),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    ADD_EVENT_COMMAND(\"event\", AddEventCommand.class),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    DONE_COMMAND(\"done\", DoneCommand.class),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    DELETE_COMMAND(\"delete\", DeleteCommand.class),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    FIND_COMMAND(\"find\", FindCommand.class),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    INVALID_COMMAND(null, InvalidCommand.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private static Map\u003cString, Class\u003c? extends ITaskCommand\u003e\u003e commandMap;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Class\u003c? extends ITaskCommand\u003e commandClass;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        commandMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        for (CommandList command : values()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            commandMap.put(command.getCommandString(), command.getCommandClass());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    CommandList(String command, Class\u003c? extends ITaskCommand\u003e commandClass) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.commandString \u003d command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.commandClass \u003d commandClass;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public static Map\u003cString, Class\u003c? extends ITaskCommand\u003e\u003e getCommandMap() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return commandMap;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return commandString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Class\u003c? extends ITaskCommand\u003e getCommandClass() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return commandClass;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 45
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DeleteCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DeleteCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.repo \u003d repo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @SuppressWarnings(\"Duplicates\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Please input the number of the task to mark as done.\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        int id \u003d Integer.parseInt(args[1]) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (id \u003e repo.getSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Task with that number does not exist!\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task deletedTask \u003d repo.get(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo.delete(id);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        int size \u003d repo.getSize();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String responseFormat \u003d \"Noted. I\u0027ve removed this task:\\n  \" + deletedTask.getDescription()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                + \"\\nNow you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(responseFormat, Collections.singletonList(deletedTask));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 40
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.views.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DoneCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DoneCommand(IRepository\u003cTask\u003e repo, Ui view) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.repo \u003d repo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @SuppressWarnings(\"Duplicates\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Please input the number of the task to mark as done.\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        int id \u003d Integer.parseInt(args[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (id \u003e repo.getSize()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    new DukeInvalidInputException(\"☹ OOPS!!! Task with that number does not exist!\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task \u003d repo.get(id);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            repo.update(id, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String responseFormat \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task.getDescription();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(responseFormat, Collections.singletonList(task));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 44
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeInvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class FindCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    FindCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.repo \u003d repo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String searchParam \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (searchParam.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(new DukeInvalidInputException(\"☹ OOPS!!! Please specify a search term.\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e queriedTasks \u003d repo.find(searchParam);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (queriedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new TaskResponse(\"No matching tasks found :(\", queriedTasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String responseFormat \u003d \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                + IntStream.rangeClosed(1, queriedTasks.size())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .mapToObj(index -\u003e index + \".%s\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(responseFormat, queriedTasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 42
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/ITaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public interface ITaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    TaskResponse execute(String... args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 7
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class InvalidCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String response \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(response, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 13
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class ListCommand implements ITaskCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    ListCommand(IRepository\u003cTask\u003e repo) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.repo \u003d repo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse execute(String... args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e tasks \u003d repo.getAll();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String responseFormat \u003d \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                + IntStream.rangeClosed(1, tasks.size())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .mapToObj(index -\u003e index + \".%s\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return new TaskResponse(responseFormat, tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 27
    }
  },
  {
    "path": "src/main/java/weijie/duke/commands/TaskCommandFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeDependencyNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.lang.reflect.Constructor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class TaskCommandFactory {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private List\u003cObject\u003e registeredDependencies;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Map\u003cString, Class\u003c? extends ITaskCommand\u003e\u003e commandMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskCommandFactory(Map\u003cString, Class\u003c? extends ITaskCommand\u003e\u003e commandMap) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.registeredDependencies \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.commandMap \u003d commandMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Compares input command with a list of commands and returns the matching command, injecting any necessary"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     constructor dependencies if they have been registered."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @param command Command invoked."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @return The matching command if any, and an InvalidCommand otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @throws DukeException If dependency injection fails, ie if a required dependency is not added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public ITaskCommand tryMakeCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Class\u003c? extends ITaskCommand\u003e commandClass \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                commandMap.getOrDefault(command, CommandList.INVALID_COMMAND.getCommandClass());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            Constructor\u003c?\u003e[] constructors \u003d commandClass.getDeclaredConstructors();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            Arrays.sort(constructors, (constructor1, constructor2) -\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    Integer.compare(constructor2.getParameterCount(), constructor1.getParameterCount()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            for (Constructor\u003c?\u003e constructor : constructors) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                Class\u003c?\u003e[] classes \u003d constructor.getParameterTypes();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                Object[] args \u003d generateConstructorDependencies(classes);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                if (args !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    return (ITaskCommand) constructor.newInstance(args);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeDependencyNotFoundException(\"☹ OOPS!!! This command is not working properly\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! An unexpected error has occurred.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void registerDependency(Object dependency) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        registeredDependencies.add(dependency);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Compares an array of classes against the registered dependencies and outputs the matching dependencies in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     an array."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @param constructorClasses Array of classes corresponding to a Command\u0027s constructor parameter types."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @return Object array of concrete dependencies matching the constructor, or null if such an array cannot"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *         be found."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Object[] generateConstructorDependencies(Class\u003c?\u003e[] constructorClasses) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Object[] dependencies \u003d IntStream.range(0, constructorClasses.length)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .boxed()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .flatMap(index -\u003e registeredDependencies.stream()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                        .filter(dependency -\u003e constructorClasses[index].isInstance(dependency))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                        .limit(1))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .toArray();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return dependencies.length \u003d\u003d constructorClasses.length ? dependencies : null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 81
    }
  },
  {
    "path": "src/main/java/weijie/duke/db/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.db;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *      Creates a Storage class which reads and writes Tasks at the specified path location. If the file does not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *      exist, a new file with the specified name will be created at the path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @param path Path to file to read and write Tasks from"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @throws DukeIoException If an IO exception occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Storage(String path) throws DukeIoException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.file \u003d new File(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            write(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Reads a list of Tasks from the file path specified in the class\u0027s constructor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @return The list of Tasks stored in the file path."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @throws DukeIoException If there is no file located at the file path."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e read() throws DukeIoException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try (FileInputStream fileInputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "             ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            Task[] tasks \u003d  (Task[]) objectInputStream.readObject();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return new ArrayList\u003c\u003e(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeIoException(\"☹ OOPS!!! Invalid file file provided.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeIoException(\"☹ OOPS!!! Unexpected IO error has occurred!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Writes a list of Tasks at the file path specified in the class\u0027s constructor."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @param tasks The list of Tasks to write."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @throws DukeIoException If an IOException occurs."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void write(List\u003cTask\u003e tasks) throws DukeIoException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        try (FileOutputStream fileOutputStream \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            objectOutputStream.writeObject(tasks.toArray(new Task[0]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeIoException(\"☹ OOPS!!! Invalid file file provided.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            throw new DukeIoException(\"☹ OOPS!!! Unexpected IO error has occurred!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 78
    }
  },
  {
    "path": "src/main/java/weijie/duke/exceptions/DukeDependencyNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DukeDependencyNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DukeDependencyNotFoundException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 7
    }
  },
  {
    "path": "src/main/java/weijie/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 8
    }
  },
  {
    "path": "src/main/java/weijie/duke/exceptions/DukeInvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DukeInvalidInputException  extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DukeInvalidInputException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 7
    }
  },
  {
    "path": "src/main/java/weijie/duke/exceptions/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public DukeIoException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 7
    }
  },
  {
    "path": "src/main/java/weijie/duke/models/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.utils.DateUtils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"(by: \" + dateTime.format(DateUtils.DUKE_DATETIME_OUTPUT_FORMAT) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 24
    }
  },
  {
    "path": "src/main/java/weijie/duke/models/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.utils.DateUtils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"(at: \" + dateTime.format(DateUtils.DUKE_DATETIME_OUTPUT_FORMAT) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 24
    }
  },
  {
    "path": "src/main/java/weijie/duke/models/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return getTaskIcon() + \"[\" + getStatusIcon() + \"] \" + description + \" \" + getDateTime();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public abstract String getDateTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public abstract String getTaskIcon();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (this.getClass() \u003d\u003d obj.getClass()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            Task other \u003d (Task) obj;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return this.description.equals(other.description)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                    \u0026\u0026 this.isDone \u003d\u003d other.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 39
    }
  },
  {
    "path": "src/main/java/weijie/duke/models/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 17
    }
  },
  {
    "path": "src/main/java/weijie/duke/presenters/TasksPresenter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.presenters;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.commands.ITaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.commands.TaskCommandFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.views.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class TasksPresenter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private TaskCommandFactory factory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TasksPresenter(Ui ui, TaskCommandFactory factory) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.factory \u003d factory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Starts the main flow of the app. Presenter will start to listen for user input from the Ui, and will"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     create appropriate Commands and invoke them, returning any TaskResponses to the Ui to be displayed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        ui.startDisplay();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                ui.printExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            String[] args \u003d input.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                ITaskCommand command \u003d factory.tryMakeCommand(args[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                ui.print(response);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiijiie": 50
    }
  },
  {
    "path": "src/main/java/weijie/duke/repos/IRepository.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.repos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public interface IRepository\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    List\u003cT\u003e getAll();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    int getSize();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    T get(int id);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    List\u003cT\u003e find(String searchParam);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void create(T entity) throws DukeIoException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void update(int id, T entity) throws DukeIoException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void delete(int id);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 21
    }
  },
  {
    "path": "src/main/java/weijie/duke/repos/TaskRepo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.repos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.db.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class TaskRepo implements IRepository\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskRepo(Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.tasks \u003d storage.read();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e getAll() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e find(String searchParam) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(searchParam))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void create(Task entity) throws DukeIoException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.add(entity);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void update(int id, Task entity) throws DukeIoException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.set(id, entity);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void delete(int id) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.remove(id);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 58
    }
  },
  {
    "path": "src/main/java/weijie/duke/responses/TaskResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.responses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class TaskResponse {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private String responseFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private DukeException exception;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse(String responseFormat, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.responseFormat \u003d responseFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public TaskResponse(DukeException exception) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        this.exception \u003d exception;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * Returns the Task response formatted for human readability on the console."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @return A String of the formatted response."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getFormattedResponse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Object[] descriptions \u003d tasks.stream()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .map(Task::getDescription)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .toArray();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return String.format(responseFormat, descriptions);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public boolean isInvalidInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return exception !\u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return exception.getMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 44
    }
  },
  {
    "path": "src/main/java/weijie/duke/utils/DateUtils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class DateUtils {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public static final DateTimeFormatter DUKE_DATETIME_PARSE_FORMAT \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public static final DateTimeFormatter DUKE_DATETIME_OUTPUT_FORMAT \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:kk a\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 11
    }
  },
  {
    "path": "src/main/java/weijie/duke/utils/StringUtils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class StringUtils {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    static String indent(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String indentation \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return Arrays.stream(input.split(\"\\n\"))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .map(line -\u003e indentation + line)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public static String indentf(String input, Object... args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String formattedInput \u003d String.format(input, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return indent(formattedInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 19
    }
  },
  {
    "path": "src/main/java/weijie/duke/views/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.utils.StringUtils;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private Scanner consoleInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        consoleInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void startDisplay() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                StringUtils.indentf(\"%s%sHello! I\u0027m Duke\\nWhat can I do for you?\\n%s\", DIVIDER, LOGO, DIVIDER));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return consoleInput.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     *     Prints the appropriate message (expected / error) as indicated by the response, while formatting it."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     * @param response The response generated by a Command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void print(TaskResponse response) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        if (response.isInvalidInput()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            System.out.println(StringUtils.indentf(\"%s\" + response.getErrorMessage() + \"\\n%s\", DIVIDER, DIVIDER));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String output \u003d response.getFormattedResponse();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        System.out.println(StringUtils.indentf(\"%s\" + output + \"\\n%s\", DIVIDER, DIVIDER));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void printError(DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        System.out.println(StringUtils.indentf(\"%s\" + e.getMessage() + \"\\n%s\", DIVIDER, DIVIDER));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        System.out.println(StringUtils.indentf(\"%sBye. Hope to see you again soon!\\n%s\", DIVIDER, DIVIDER));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 55
    }
  },
  {
    "path": "src/test/java/weijie/duke/commands/AddDeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertIterableEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "class AddDeadlineCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo \u003d new MockTaskRepo();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_oneValidInput_taskAddedAndReturnedValidResponse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"deadline thing /by 23/4/2019 1800\".split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddDeadlineCommand command \u003d new AddDeadlineCommand(repo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task taskCreated \u003d new Deadline(\"thing\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2019, 4, 23, 18, 0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e expectedTasksList \u003d Collections.singletonList(taskCreated);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertFalse(response.isInvalidInput());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedTasksList, response.getTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedTasksList, repo.getAll());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_twoValidInputs_tasksAddedAndReturnedValidResponse() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args1 \u003d \"deadline thingy /by 12/6/2019 1900\".split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args2 \u003d \"deadline other thing /by 14/7/2019 1234\".split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddDeadlineCommand command \u003d new AddDeadlineCommand(repo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response1 \u003d command.execute(args1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response2 \u003d command.execute(args2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task1 \u003d new Deadline(\"thingy\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2019, 6, 12, 19, 0));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task task2 \u003d new Deadline(\"other thing\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2019, 7, 14, 12, 34));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e expectedTasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        expectedTasksList.add(task1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        expectedTasksList.add(task2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertFalse(response1.isInvalidInput());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertFalse(response2.isInvalidInput());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(Collections.singletonList(task1), response1.getTasks());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(Collections.singletonList(task2), response2.getTasks());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedTasksList, repo.getAll());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_invalidDateFormat_noTaskAddedAndReturnsInvalidInputResponse() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"deadline thing /by 23/4/2019, 1800\".split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddDeadlineCommand command \u003d new AddDeadlineCommand(repo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(response.isInvalidInput());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(repo.getAll().isEmpty());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_inputWithNoDateAndTimeSpecified_noTaskAddedAndReturnsInvalidInputResponse() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"deadline very busy help me\".split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddDeadlineCommand command \u003d new AddDeadlineCommand(repo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(response.isInvalidInput());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(repo.getAll().isEmpty());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 93
    }
  },
  {
    "path": "src/test/java/weijie/duke/commands/AddEventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertIterableEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "class AddEventCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo \u003d new MockTaskRepo();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_oneValidInput_taskAddedAndReturnedValidResponse() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"event eventful /at 06/12/2018 2359\".split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddEventCommand command \u003d new AddEventCommand(repo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Task taskCreated \u003d new Event(\"eventful\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2018, 12, 6, 23, 59));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e expectedTasksList \u003d Collections.singletonList(taskCreated);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertFalse(response.isInvalidInput());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedTasksList, response.getTasks());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedTasksList, repo.getAll());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_invalidDateInput_noTaskAddedAndReturnsInvalidInputResponse() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"event help /at 23/13/2019 1800\".split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddEventCommand command \u003d new AddEventCommand(repo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(response.isInvalidInput());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(repo.getAll().isEmpty());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_inputWithNoDateAndTimeSpecified_noTaskAddedAndReturnsInvalidInputResponse() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"event orbital splashdown :O\".split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        AddEventCommand command \u003d new AddEventCommand(repo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(response.isInvalidInput());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertTrue(repo.getAll().isEmpty());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 65
    }
  },
  {
    "path": "src/test/java/weijie/duke/commands/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.exceptions.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.responses.TaskResponse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertIterableEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private IRepository\u003cTask\u003e repo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo \u003d new MockTaskRepo();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_listCommandWithNoTasksSaved_returnsEmptyList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"list\".split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        ListCommand command \u003d new ListCommand(repo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(new ArrayList\u003c\u003e(), response.getTasks());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void execute_listCommandWithFewTasksSaved_returnsCorrectListOfTasks() throws DukeIoException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String[] args \u003d \"list\".split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Event event \u003d new Event(\"2103 project due\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2019, 8, 29, 23, 59));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"ok\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                LocalDateTime.of(2020, 12, 3, 2, 4));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        Todo todo \u003d new Todo(\"TODOOOO\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        List\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        expectedList.add(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        expectedList.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        expectedList.add(todo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo.create(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo.create(deadline);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        repo.create(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        ListCommand command \u003d new ListCommand(repo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        TaskResponse response \u003d command.execute(args);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertIterableEquals(expectedList, response.getTasks());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 61
    }
  },
  {
    "path": "src/test/java/weijie/duke/commands/MockTaskRepo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.models.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import weijie.duke.repos.IRepository;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "class MockTaskRepo implements IRepository\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    MockTaskRepo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e getAll() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public List\u003cTask\u003e find(String searchParam) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(searchParam))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void create(Task entity) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.add(entity);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void update(int id, Task entity) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.set(id, entity);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    public void delete(int id) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        tasks.remove(id);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 55
    }
  },
  {
    "path": "src/test/java/weijie/duke/utils/StringUtilsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "package weijie.duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "class StringUtilsTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void indent_singleLineInput_indentedOutput() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d \"input string\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String expectedOutput \u003d \"    input string\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertEquals(expectedOutput, StringUtils.indent(input));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void indent_multiLineInput_indentedOutput() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d \"hello\\n   this is a test \\n  ok bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String expectedOutput \u003d \"    hello\\n       this is a test \\n      ok bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertEquals(expectedOutput, StringUtils.indent(input));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void indent_emptyStringInput_fourSpaces() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String expectedOutput \u003d \"    \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertEquals(expectedOutput, StringUtils.indent(input));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiijiie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    void indentf_inputWithArgs_indentedOutput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String input \u003d \"%sfirst line.\\n%s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String arg1 \u003d \"this is the \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String arg2 \u003d \"this is the second line.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        String expectedOutput \u003d \"    this is the first line.\\n    this is the second line.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "        assertEquals(expectedOutput, StringUtils.indentf(input, arg1, arg2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiijiie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiijiie": 37
    }
  }
]
