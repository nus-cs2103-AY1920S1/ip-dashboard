[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    static List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    static String tab \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        boolean quit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        while (!quit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String input \u003d sc.next();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String rest;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String[] split;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                switch (input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        quit \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        System.out.println(tab);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        System.out.println(\"\\t Here are the tasks in your list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            System.out.println(\"\\t \" + (i + 1) + \". \" + lst.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        System.out.println(tab + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        int doneNum \u003d Integer.parseInt(next) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        lst.get(doneNum).markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\" Nice! I\u0027ve marked this task as done:\\n\\t   \" + lst.get(doneNum));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        lst.add(new Todo(desc));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\" Got it. I\u0027ve added this task:\\n\\t   \" + lst.get(lst.size() - 1) + \"\\n\\tNow you have \" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                                lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        } else if (!rest.contains(\"/by\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! Deadline input should include \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        split \u003d rest.split(\"/by \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        lst.add(new Deadline(split[0], split[1]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\" Got it. I\u0027ve added this task:\\n\\t   \" + lst.get(lst.size() - 1) + \"\\n\\tNow you have \" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                                lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        } else if (!rest.contains(\"/at\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! Deadline input should include \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        split \u003d rest.split(\"/at \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        lst.add(new Event(split[0], split[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\" Got it. I\u0027ve added this task:\\n\\t   \" + lst.get(lst.size() - 1) + \"\\n\\tNow you have \" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                                lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        rest \u003d sc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                            throw new DukeException(\" â˜¹ OOPS!!! The description of an delete cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        int deleteNum \u003d Integer.parseInt(sc.next()) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        Task toDelete \u003d lst.get(deleteNum);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        print(\" Noted. I\u0027ve removed this task: \\n\\t   \" + toDelete + \"\\n\\t Now you have \" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                                (lst.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        lst.remove(deleteNum);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                        throw new DukeException(\" â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                print (e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    static void print(String txt) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        System.out.println(tab);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        System.out.println(\"\\t\" + txt);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        System.out.println(tab + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 96,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "weigenie": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "weigenie": 21
    }
  }
]
