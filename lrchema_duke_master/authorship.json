[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        main {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                java {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        srcDirs\u003d [\"src/main/java\"]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                resources {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        srcDirs\u003d [\"src/main/resources\"]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 49,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### Task List"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Maintains a list of todos, deadlines and events and allows create, read, delete and search functions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### Trivia Questions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Maintains a list of trivia questions. The list can be modified and the questions can be asked and answered."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `todo \u003ctask\u003e` - Adds a todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Adds a task of type todo to the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`todo paint picture`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "  [T][✘] paint picture"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `deadline \u003ctask\u003e /by \u003cdatetime\u003e` - Adds a deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Adds a task of type deadline to the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`deadline return book /by 2/12/2019 1800`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "  [D][✘] return book (by: 2/12/2019 1800)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `event \u003ctask\u003e /at \u003cdatetime\u003e` - Adds an event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Adds a task of type deadline to the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`event project meeting /at 6/13/2019 1400 to 6/8/2019 1600`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "  [E][✘] project meeting (at: 6/8/2019 1800 to 6/8/2019 1600)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `list` - Shows task list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Shows task list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "1.[T][✘] eat lunch with Sam"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "2.[T][✘] borrow book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "3.[T][✘] paint picture"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "4.[D][✘] return book (by: 2/12/2019 1800)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "5.[E][✘] project meeting (at: 6/8/2019 1800 to 6/8/2019 1600)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `done \u003clist number\u003e` - Marks task as done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Marks the specified task as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] paint picture"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `delete \u003clist number\u003e` - Deletes task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Removes the specified task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] paint picture"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `find \u003csearch term\u003e` - finds all matching tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Searches list for all tasks containing the search term"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lrchema"
        },
        "content": "2.[T][✘] borrow book"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lrchema"
        },
        "content": "4.[D][✘] return book (by: 2/12/2019 1800)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `trivia` - asks a trivia question"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Displays a trivia question and waits for user to enter the correct answer or `give up`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`trivia`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lrchema"
        },
        "content": "what is the meaning of life?"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `trivia new \u003cquestion\u003e / \u003canswer\u003e` - adds new trivia question"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Adds new trivia question and answer to questions list"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`trivia new what is a skeleton\u0027s favourite pizza? / pepper-bone-i`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lrchema"
        },
        "content": "cool! i\u0027ve added this question to the list:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Q: what is a skeleton\u0027s favourite pizza?"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    A: pepper-bone-i"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `trivia list` - lists all trivia questions"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Adds new trivia question and answer to questions list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`trivia list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lrchema"
        },
        "content": "here are all the questions you\u0027ve stored:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lrchema"
        },
        "content": "1.  Q: what is a skeleton\u0027s favourite pizza?"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    A: pepper-bone-i"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lrchema"
        },
        "content": "2.  Q: how does nasa throw a party?"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    A: they planet"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lrchema"
        },
        "content": "3.  Q: what is a skeleton\u0027s favourite pizza?"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    A: pepper-bone-i"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `trivia delete \u003clist number\u003e` - deletes trivia question"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Deletes the specified question"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`trivia delete 3`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Noted. I\u0027ve removed this question:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Q: what is a skeleton\u0027s favourite pizza?"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    A: pepper-bone-i"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lrchema"
        },
        "content": "### `bye` - ends program"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lrchema"
        },
        "content": "disables send button and text box, shows a close button. Also saves tasks and questions to file to be loaded on next start up."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lrchema"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lrchema"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "lrchema": 178,
      "-": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "lrchema": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/ChatScreenController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.fileStorage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.logic.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class ChatScreenController extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TextField input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Button send;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public VBox chats;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Button close;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Storage s \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    QuestionList qList \u003d new QuestionList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Image dukeIm \u003d new Image(getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Image userIm \u003d new Image(getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ChatScreenController() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "       "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Duke duke;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void setMain(Duke main) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.duke \u003d main;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void initialise(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        chats.setPadding(new Insets(10, 50, 50, 50));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        chats.setVisible(true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        chats.getChildren().addAll(DialogLineController.getDukeDialog(Ui.welcome(), dukeIm));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        scrollPane.setContent(chats);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        scrollPane.vvalueProperty().bind(chats.heightProperty());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        s.readFile(list);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        s.readTriviaFile(qList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void handleClose() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void handleSend(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        //System.out.println(\"clicked\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String inputString \u003d input.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if(inputString.equals(\"bye\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            input.setDisable(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            send.setDisable(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            s.writeFile(list);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            s.writeTriviaFile(qList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            close.setVisible(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            close.setDisable(false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String reply \u003d duke.ask(inputString, list, qList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        chats.getChildren().addAll(DialogLineController.getUserDialog(inputString, userIm),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                DialogLineController.getDukeDialog(reply, dukeIm));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        //System.out.println(chats.getChildren().size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        input.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 78
    }
  },
  {
    "path": "src/main/java/DialogLineController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class DialogLineController extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Label dialog \u003d new Label();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ImageView displayPicture \u003d new ImageView();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public DialogLineController(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    private DialogLineController(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(ChatScreenController.class.getResource(\"DialogLine.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.setMinHeight(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dialog.setVisible(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        displayPicture.setVisible(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        //System.out.println(dialog.getText() + displayPicture.getImage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static DialogLineController getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        var dl \u003d new DialogLineController(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.dialog.setFont(new Font(\"Consolas\", 10));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.setMinHeight(dl.dialog.getMinHeight());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.displayPicture.setFitHeight(dl.getHeight());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static DialogLineController getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        var dl \u003d new DialogLineController(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.setMinHeight(dl.dialog.getMinHeight());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.displayPicture.setFitHeight(dl.getHeight());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        dl.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 72
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.fileStorage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * main class, calls functions and other classes as needed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Stage primaryStage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.primaryStage.setTitle(\"Duke To-do List\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        showChatScreen();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void showChatScreen() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader(ChatScreenController.class.getResource(\"ChatScreen.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            loader.setLocation(getClass().getResource(\"ChatScreen.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            AnchorPane mainWindow \u003d (AnchorPane) loader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            Scene scene \u003d new Scene(mainWindow);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            loader.\u003cChatScreenController\u003egetController().setMain(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            loader.\u003cChatScreenController\u003egetController().initialise();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            primaryStage.show();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String ask(String inputString, TaskList list, QuestionList qList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        res \u003d p.parse(inputString, list, formatter, res, qList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 51,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 10
    }
  },
  {
    "path": "src/main/java/duke/fileStorage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.fileStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.TriviaQuestion;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * Storage class deals with file input/output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    File file, triviaFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Scanner sFile, sTrivFile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    FileWriter fw;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * file path is hardcoded"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        file \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        triviaFile \u003d new File(\"trivia.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * reads in tasks from the file if it exists and populates the task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list to be populated"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void readFile(TaskList list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            sFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        while (sFile.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String ln \u003d sFile.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String[] lnSplit \u003d ln.split(\",\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (lnSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Todo(lnSplit[2], Integer.parseInt(lnSplit[1])));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (lnSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Event(lnSplit[2], Integer.parseInt(lnSplit[1]), LocalDateTime.parse(lnSplit[3], formatter),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(lnSplit[4], formatter)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (lnSplit[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Deadline(lnSplit[2], Integer.parseInt(lnSplit[1]),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(lnSplit[3], formatter)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void readTriviaFile(QuestionList qList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (!triviaFile.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            sTrivFile \u003d new Scanner(triviaFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        while (sTrivFile.hasNextLine()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String ln \u003d sTrivFile.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String[] lnSplit \u003d ln.split(\",\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            qList.questions.add(new TriviaQuestion(lnSplit[0], lnSplit[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * at the end of the program logic, "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * replaces the content of the file (if it exists)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * with the final task list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list the task list to be written to file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e1.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            for (Task t : list.list) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                fw.write(t.toFile() + \"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void writeTriviaFile(QuestionList qList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            triviaFile.createNewFile();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw \u003d new FileWriter(triviaFile);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e1.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            for (TriviaQuestion t : qList.questions) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                fw.write(t.toFile() + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 114
    }
  },
  {
    "path": "src/main/java/duke/logic/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * throws exception and prints out the message input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 10
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskWithOrder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.TriviaQuestion;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * parses and excecutes the command user enters"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param command   entered command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list      task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param formatter datetime formatter"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return false if user wishes to terminate program, true otherwise"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @throws DukeException due to checking validity of command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String parse(String command, TaskList list, DateTimeFormatter formatter, String message,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            QuestionList qList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (qList.isAsking) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.equals(\"give up\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.getAnswer(qList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.checkTriviaAnswer(qList, command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String verificationResult \u003d Verify.checkCommandValidity(command, list, formatter, qList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (!verificationResult.equals(\"ok\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d verificationResult;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                return message;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.exit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                return message;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.list(list);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.get(Integer.parseInt(command.split(\" \")[1])).setAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.done(list, Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                ArrayList\u003cTaskWithOrder\u003e matchingTasks \u003d list.search(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.found(matchingTasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                Task t \u003d list.remove(Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.delete(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Todo(command.substring(5), 0));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.taskAdded(list);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                String[] cmdSplit \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Event(cmdSplit[0], 0, LocalDateTime.parse(cmdSplit[1].split(\" to \")[0], formatter),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(cmdSplit[1].split(\" to \")[1], formatter)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.taskAdded(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Deadline(command.substring(9).split(\" /by \")[0], 0,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(command.substring(9).split(\" /by \")[1], formatter)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.taskAdded(list);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.equals(\"trivia\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                qList.isAsking \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.askQuestion(qList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"trivia new\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                String[] cmdSplit \u003d command.substring(10).split(\" / \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                qList.questions.add(new TriviaQuestion(cmdSplit[0], cmdSplit[1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.questionAdded(qList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.equals(\"trivia list\")){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.showQuestions(qList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.startsWith(\"trivia delete\")){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                TriviaQuestion t \u003d qList.questions.remove(Integer.parseInt(command.substring(14))-1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d ui.questionDelete(t);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 89
    }
  },
  {
    "path": "src/main/java/duke/logic/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskWithOrder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.TriviaQuestion;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * prints all the messages to console"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns duke logo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static String welcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\" "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\" "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Hello, I\u0027m Duke. \" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns task added confirmation"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list to get the added task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String taskAdded(TaskList list) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + list.get(list.list.size()) + \"\\nNow you have \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                + list.list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns goodbye message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns task set as done confirmation"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param item task index in list to be set as done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String done(TaskList list, int item) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + list.get(item);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns out full task list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String list(TaskList list) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if(list.list.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return \"oh bother! there aren\u0027t any tasks in the list!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return list + \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns delete task confirmation"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param t the task that was deleted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String delete(Task t) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + t;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns list of tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param matchingTasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String found(ArrayList\u003cTaskWithOrder\u003e matchingTasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return \"oh, fiddlesticks! there are no tasks matching your search!\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String res \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            for (TaskWithOrder t : matchingTasks){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                res+\u003d t + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String askQuestion(QuestionList qList){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return qList.getCurrentQuestion().question;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String checkTriviaAnswer(QuestionList qList, String answer){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (qList.getCurrentQuestion().isCorrect(answer)){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            qList.advance();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            qList.isAsking \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return \"Oh, that\u0027s wonderful! You\u0027ve gotten it right!\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return \"I\u0027m sorry, that\u0027s not quite right. Please try again, dear.\\n(or say \u0027give up\u0027 to see the answer)\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\tpublic String getAnswer(QuestionList qList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d qList.getCurrentQuestion().answer;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        qList.advance();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        qList.isAsking \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\tpublic String questionAdded(QuestionList qList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\t\treturn \"cool! i\u0027ve added this question to the list: \\n\" + qList.questions.get(qList.questions.size() -1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String showQuestions(QuestionList qList){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"here are all the questions you\u0027ve stored:\\n\" + qList; "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\tpublic String questionDelete(TriviaQuestion t) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"Noted. I\u0027ve removed this question:\\n\" + t;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 125
    }
  },
  {
    "path": "src/main/java/duke/logic/Verify.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * Checks all the possible errors that can occur during entry of command and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * throws DukeException with message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Verify {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Verify() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param str the input string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return returns if the string is a number"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static boolean isNum(String str) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assert str !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            int i \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (NumberFormatException | NullPointerException nfe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param command   the string command entered by user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list      the task list to compare with for checking validity"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param formatter date formatter to catch wrong date format exceptions"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @throws DukeException in the case of invalid input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static String checkCommandValidity(String command, TaskList list, DateTimeFormatter formatter, QuestionList qList){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assert command !\u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! please enter a number after done\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (!isNum(command.split(\" \")[1])) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! you need to enter a number, not anything else\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if ((Integer.parseInt(command.split(\" \")[1])) \u003e\u003d list.list.size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh! that task doesn\u0027t exist! please enter a task within the list!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! please enter a number after delete\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (!isNum(command.split(\" \")[1])) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! you need to enter a number, not anything else\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if ((Integer.parseInt(command.split(\" \")[1]) - 1) \u003e\u003d list.list.size()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh! that task doesn\u0027t exist! please enter a task within the list!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oopsie! did you forget to add a description for your todo?\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oops! did you forget to add a description to your deadline?\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(9).split(\" /by \").length \u003c 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh no! the by date of a deadline cannot be empty!\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(9).split(\" /by \")[1], formatter);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh dear, your date is invalid! please check if you entered it right!\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! did you forget to add a description to your event?\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(6).split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"golly! the from/to dates of an event cannot be empty!\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(6).split(\" /at \")[1].split(\" to \").length \u003c 2) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"gosh! i can\u0027t find your from and to dates! did you enter both?\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(6).split(\" /at \")[1].split(\" to \")[0], formatter);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(6).split(\" /at \")[1].split(\" to \")[1], formatter);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh dear, your date is invalid! please check if you entered it right!\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"darn it! you forgot to enter a search term!\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"trivia new\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 10) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oopsie! you forgot to write the question and its answer!\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(10).split(\" / \").length \u003c 2) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh dear, please enter the question and answer separated by \u0027 / \u0027\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"trivia delete\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.substring(13).length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! please enter a number after trivia delete\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (!isNum(command.substring(14))) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"whoops! you need to enter a number, not anything else\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if ((Integer.parseInt(command.substring(14)) - 1) \u003e\u003d qList.questions.size()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                message \u003d \"oh! that question doesn\u0027t exist! please enter a question within the list!\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"trivia\") || command.equals(\"trivia list\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            message \u003d \"blast! i don\u0027t understand that!\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                return message;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        message \u003d \"ok\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 217
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * a deadline is a type of class with a by datetime"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Deadline(String content, int status, LocalDateTime by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"D,\" + super.toFile() + \",\" + by.format(formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 24
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * event is a type of task with from and to datetimes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    LocalDateTime at, to;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Event(String content, int status, LocalDateTime at, LocalDateTime to) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.to \u003d to;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \" to \" + to.format(formatter) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"E,\" + super.toFile() + \",\" + at.format(formatter) + \",\" + to.format(formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 26
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * task class to manage the functions of tasks that are common across all types"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    boolean done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * task constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param content the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param status  whether the task is done or not"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task(String content, int status) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        done \u003d status \u003d\u003d 1 ? true : false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"[\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d \"\\u2713\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d \"\\u2718\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        res +\u003d \"] \" + content;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        int d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            d \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            d \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return d + \",\" + content;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * equality comparison of task (used for testing)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (o \u003d\u003d null || !(o instanceof Task)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Task t \u003d (Task) o;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return content.equals(t.content) \u0026\u0026 done \u003d\u003d t.done;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * list of tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * add the task to the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * delete the task from the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param i index of the task to be deleted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return returns the task that was deleted"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task remove(int i) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return list.remove(i-1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * fetches the task from the list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param i index of the task mentioned"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return the task with the index i"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return list.get(i-1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param keyword the search term"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return a task list of all matching tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ArrayList\u003cTaskWithOrder\u003e search(String keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        ArrayList\u003cTaskWithOrder\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String queryStr \u003d \".*\" + keyword + \".*\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (list.get(i).content.matches(queryStr)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                res.add(new TaskWithOrder(i, list.get(i)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints the task list with numberings"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d (i+1) + \".\" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 69
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskWithOrder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class TaskWithOrder {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    int order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Task t;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TaskWithOrder(int order, Task t){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.t \u003d t;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return (order+1) + \".\" + t;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 13
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Todo(String content, int status) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns string in console printing format"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns string in file printing format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"T,\" + super.toFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 21
    }
  },
  {
    "path": "src/main/java/duke/trivia/QuestionList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.trivia;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class QuestionList{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ArrayList\u003cTriviaQuestion\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public int current \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public boolean isAsking \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TriviaQuestion getCurrentQuestion(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if(questions.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return new TriviaQuestion(\"\", \"\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return questions.get(current);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void advance(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        current++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if(current \u003e\u003d questions.size()){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            current \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (questions.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            current \u003d -1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        for (int i \u003d 0; i \u003c questions.size(); i++){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d (i+1)+\". \" + questions.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 31
    }
  },
  {
    "path": "src/main/java/duke/trivia/TriviaQuestion.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "package duke.trivia;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class TriviaQuestion {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String question, answer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TriviaQuestion(String question, String answer){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public boolean isCorrect(String otherAnswer){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return answer.equals(otherAnswer);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"\\tQ: \" + question + \"\\n\\tA: \"+answer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return question+\",\"+answer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 18
    }
  },
  {
    "path": "src/main/resources/ChatScreen.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ChatScreenController\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"334.0\" prefWidth\u003d\"576.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        \u003ccontent\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"333.0\" prefWidth\u003d\"557.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                  \u003cVBox fx:id\u003d\"chats\" prefHeight\u003d\"333.0\" prefWidth\u003d\"574.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "               \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cTextField fx:id\u003d\"input\" layoutX\u003d\"14.0\" layoutY\u003d\"359.0\" onAction\u003d\"#handleSend\" prefHeight\u003d\"15.0\" prefWidth\u003d\"481.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cButton fx:id\u003d\"send\" layoutX\u003d\"502.0\" layoutY\u003d\"359.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSend\" prefHeight\u003d\"27.0\" prefWidth\u003d\"84.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cButton fx:id\u003d\"close\" disable\u003d\"true\" layoutX\u003d\"502.0\" layoutY\u003d\"359.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleClose\" prefHeight\u003d\"27.0\" prefWidth\u003d\"84.0\" text\u003d\"Close\" visible\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lrchema": 23
    }
  },
  {
    "path": "src/main/resources/DialogLine.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003cfx:root maxWidth\u003d\"500.0\" minHeight\u003d\"75.0\" minWidth\u003d\"500.0\" prefHeight\u003d\"75.0\" prefWidth\u003d\"500.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"112.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" prefHeight\u003d\"231.0\" prefWidth\u003d\"375.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lrchema": 16
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.logic.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.logic.Verify;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import duke.trivia.QuestionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class DukeTest{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    QuestionList qlist \u003d new QuestionList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testAddGet(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        taskList.add(new Todo(\"eat salad\", 0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertEquals(taskList.get(0), new Todo(\"eat salad\", 0));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testRemove(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Task t \u003d taskList.remove(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertEquals(t, new Todo(\"eat salad\", 0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testVerify(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Verify.checkCommandValidity(\"blah\", taskList, formatter, qlist));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 33
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Hello, I\u0027m"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] join sports club"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 8 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "lrchema": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline return book /by 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 6/13/2019 1400 to 6/8/2019 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 6/8/2019 1400 to 6/8/2019 1600"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 27"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline return book /by 25/8/2019 1100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 3/9/2019 1400 to 3/9/2019 1600"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline do homework /by 8/9/2019 1800"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lrchema": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lrchema": 34
    }
  }
]
