[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 2,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "E | false | orbital | 1205301600000"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "E | false | yo how are yoy im fin thank you | 4124671200000"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    // private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksFromFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            System.out.println(\"FILE NOT FOUND\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        new Duke(\"/Users/liuzechu/Desktop/CS2103/project_duke/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ui.getUserInput(parser);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static void exitDuke() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String toSave \u003d tasks.convertTasksToString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            storage.writeToFile(toSave);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            System.out.println(\"FILE NOT SAVED PROPERLY\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static TaskList getTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 50,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 12
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void parse(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String addTaskMessage \u003d \"     Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        TaskList taskList \u003d Duke.getTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String firstWord \u003d userInput.split(\"\\\\s\")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                String farewellMessage \u003d LINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        + LINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                System.out.print(farewellMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                Duke.exitDuke();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                System.out.print(LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     \" + Integer.toString(i + 1) + \".\" + currentTask.getTypeIcon() + currentTask.getStatusIcon() + \" \" + currentTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                System.out.print(LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                ui.getUserInput(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    int index \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task taskDone \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    taskDone.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"       \" + taskDone.getTypeIcon() + taskDone.getStatusIcon() + \" \" + taskDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The task you want to mark as done doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String messageTodo \u003d userInput.split(\"todo \")[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (messageTodo.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task newTaskTodo \u003d new Task(messageTodo, TaskType.TODO);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    tasks.add(newTaskTodo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(addTaskMessage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"       [T][✗] \" + newTaskTodo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String[] deadlineMessageAndTime \u003d userInput.split(\"deadline \")[1].split(\" /by \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String messageDeadline \u003d deadlineMessageAndTime[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (messageDeadline.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        throw new EmptyDescriptionException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (!userInput.split(\"deadline \")[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        throw new DukeException(\"A deadline requires the \u0027/by\u0027 keyword.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task newTaskDeadline \u003d new Task(messageDeadline, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Calendar deadlineCalendar \u003d convertStringToCalendar(deadlineMessageAndTime[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    newTaskDeadline.setTime(deadlineCalendar);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    tasks.add(newTaskDeadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(addTaskMessage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"       [D][✗] \" + newTaskDeadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! \"  + e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String[] eventMessageAndTime \u003d userInput.split(\"event \")[1].split(\" /at \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String messageEvent \u003d eventMessageAndTime[0];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (messageEvent.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        throw new EmptyDescriptionException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (!userInput.split(\"event \")[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        throw new DukeException(\"An event requires the \u0027/at\u0027 keyword.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task newTaskEvent \u003d new Task(messageEvent, TaskType.EVENT);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Calendar eventCalendar \u003d convertStringToCalendar(eventMessageAndTime[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    newTaskEvent.setTime(eventCalendar);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    tasks.add(newTaskEvent);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(addTaskMessage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"       [E][✗] \" + newTaskEvent);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! \" + e);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    int index \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task taskRemoved \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"       \" + taskRemoved.getTypeIcon() + taskRemoved.getStatusIcon() + \" \" + taskRemoved);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The task you want to delete doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! \" + e);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    System.out.print(LINE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    ui.getUserInput(this);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static Calendar convertStringToCalendar(String dateString) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String[] dateAndTime \u003d dateString.split(\"\\\\s\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String date \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String time \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        int hour \u003d Integer.parseInt(time) / 100;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        int minute \u003d Integer.parseInt(time) % 100;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String[] dateComponents \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        int day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        int month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        int year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Calendar calendar \u003d new Calendar.Builder().setDate(year, month - 1, day)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                .setTimeOfDay(hour, minute, 0).build();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 184
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasksFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Scanner scanner \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            String keyword \u003d scanner.next();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String[] todoLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    boolean isDoneTodo \u003d Boolean.parseBoolean(todoLine[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String todoDescription \u003d todoLine[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task todoTask \u003d new Task(todoDescription, TaskType.TODO);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (isDoneTodo) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.add(todoTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String[] deadlineLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    boolean isDoneDeadline \u003d Boolean.parseBoolean(deadlineLine[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String deadlineDescription \u003d deadlineLine[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String deadlineTime \u003d deadlineLine[3];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task deadlineTask \u003d new Task(deadlineDescription, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Calendar deadlineCalendar \u003d new Calendar.Builder().setInstant(Long.parseLong(deadlineTime)).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    deadlineTask.setTime(deadlineCalendar);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (isDoneDeadline) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.add(deadlineTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String[] eventLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    boolean isDoneEvent \u003d Boolean.parseBoolean(eventLine[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String eventDescription \u003d eventLine[2];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    String eventTime \u003d eventLine[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Task eventTask \u003d new Task(eventDescription, TaskType.EVENT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    Calendar eventCalendar \u003d new Calendar.Builder().setInstant(Long.parseLong(eventTime)).build();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    eventTask.setTime(eventCalendar);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    if (isDoneEvent) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.add(eventTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 76
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    protected Calendar time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void setTime(Calendar time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return time.getTimeInMillis() + \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result \u003d \"T\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result \u003d \"D\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                result \u003d \"E\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return \"[\" + result + \"]\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"E, dd MMM yyyy HH:mm:ss z\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            timeString \u003d formatter.format(time.getTime());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                return description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                return description + \" (by: \" + timeString + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                return description + \" (at: \" + timeString + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                return description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 76
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public String convertTasksToString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            TaskType type \u003d task.getType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"T | \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\" | \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"D | \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\" | \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\" | \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.getTime());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"E | \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\" | \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\" | \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(task.getTime());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    result.append(\"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 58
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 3
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String greeting \u003d LINE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "                + LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    public void getUserInput(Parser parser) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "        parser.parse(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 23
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiuZechu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LiuZechu": 34
    }
  }
]
