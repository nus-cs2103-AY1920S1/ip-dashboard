[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "mainClassName \u003d \u0027Launcher\u0027"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 31,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a deadline to be stored in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy kkmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Deadline object tagged with name, whether it is completed, and task deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param by Deadline by when task is due."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            this.by \u003d format.parse(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns name of deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Name of deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.getName();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns \"y\" or \"n\" based on completion of deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return String \"y\" or \"n\"."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.isDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns deadline of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Deadline of task in String format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return format.format(by);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Marks deadline as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Overrides the original toString method."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns description of deadline as `[D][isDone] name (by: date)`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Formatted description of deadline."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), format.format(by));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 74
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a Duke object for the execution of the Duke program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Duke object tagged with ui, storage and list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param filePath path of file to be used as storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.showError(\"filepath\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            ui.showError(\"load\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String run(String command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String message \u003d ui.execute(command, tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                storage.store();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                ui.showError(\"store\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return ui.exit();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        //new Duke(\"/Users/jingrong/duke/duke.txt\").run();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 180,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates an event to be stored in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy kkmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates an Event object tagged with name, whether it is completed, and event time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param at Date of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            this.at \u003d format.parse(at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns \"y\" or \"n\" based on completion of event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return String \"y\" or \"n\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.isDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns date of event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Date of event in String format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return format.format(at);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Marks event as done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Overrides the original toString method."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns description of event as `[E][isDone] name (at: date)`."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Formatted description of event."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), format.format(at));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 69
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Duke duke \u003d new Duke(\"/Users/jingrong/duke/duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            delay.setOnFinished( event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 62
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a parser used to understand user commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns user commands parsed as a String array."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param command Command from user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return String array of split commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String[] parse(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        commands \u003d command.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 23
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a Storage object to load and save tasks from and to file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private FileReader reader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Storage object tagged with path of file, file reader, buffered reader, and list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param filePath path of file for loading and saving of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @throws FileNotFoundException If file is not found at specified location."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Storage(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.reader \u003d new FileReader(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns ArrayList of tasks loaded from file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @throws IOException If tasks failed to be retrieved."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        while (! (line \u003d\u003d null)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            String[] words \u003d line.split(\" , \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Deadline(words[2], words[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task \u003d new Event(words[2], words[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (words[1].equals(\"y\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Stores tasks in file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @throws IOException If tasks failed to be stored."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void store() throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        FileWriter writer \u003d new FileWriter(this.filePath, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        for (Task item : tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (item instanceof Todo) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"T , %s , %s\", item.isDone(), item.getName()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (item instanceof Deadline) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"D , %s , %s , %s\", item.isDone(), item.getName(), ((Deadline) item)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        .getBy()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                bufferedWriter.write(String.format(\"D , %s , %s , %s\", item.isDone(), item.getName(), ((Event) item)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        .getAt()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 85
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a task to be stored in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Task object tagged with name and whether it is completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param name Name of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns \"y\" or \"n\" based on completion of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return String \"y\" or \"n\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return \"y\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            return \"n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns name of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Name of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Overrides the original toString method."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns description of task as `[isDone] name`."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Formatted description of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[%s] %s\", isDone(), name);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a list for storing tasks in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a TaskList object tagged with an ArrayList of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param tasks ArrayList of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates an empty TaskList with no tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Adds task to list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Task is added to back of the current list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param task Task to be added into the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Deletes the task at the corresponding index in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param index Index of task to be deleted from list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Marks task with corresponding index as completed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param index Index of tasks to be marked completed in list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        tasks.get(index).setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Retrieves tasks available in list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return tasks ArrayList of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 61
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a todo to be stored in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Todo object tagged with name and whether it is completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param name Name of todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns name of todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Name of todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.getName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns \"y\" or \"n\" based on completion of todo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return String \"y\" or \"n\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return super.isDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Marks todo as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Overrides the original toString method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns description of todo as `[T][isDone] name`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Formatted description of todo."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 52
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " * Encapsulates a Ui to deal with user interactions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private StringBuilder string;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private TaskList undoneTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private int meowCount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    private int purrCount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Creates a Ui object tagged with scanner, whether the program is exited, and parser."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        undoneTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        meowCount \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        purrCount \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Displays a welcome message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return \"Meow! I\u0027m Duke :3\\nWhat can I do for you nya?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Executes the given user commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param tasks Tasks to mark as completed, add to, delete, or view based on user commands."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String execute(String command, TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        string \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (!command.equals(\"undo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            undoneTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                Task addTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    addTask \u003d new Todo(task.getName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    addTask \u003d new Event(task.getName(), ((Event) task).getAt());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    addTask \u003d new Deadline(task.getName(), ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                if (task.isDone().equals(\"y\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    addTask.setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                undoneTasks.add(addTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            string.append(\"Here are the tasks in your list nya:\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(String.format(\"     %d.%s\\n\", i + 1, tasks.getTasks().get(i).toString()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"meow\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            meowCount +\u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (meowCount \u003e\u003d 3) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"Nya!!! Give me a useful command!! \u003e:3\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                meowCount \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (int i \u003d 0; i \u003c meowCount; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"Meow~~~ \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"pet\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            purrCount +\u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            if (purrCount \u003d\u003d 3) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"Nya!!! Stop petting or I will scratch you *hiss* \u003e:3\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else if (purrCount \u003e 3) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"HISS!!! *scratch* *angry cat noises*\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                purrCount \u003d 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (int i \u003d 0; i \u003c purrCount; i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"Purr~~~ \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            string.append(\"Meow? Please say something!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            string.append(\"Meow! Noted~ Your previous command has been undone. Here are the tasks in your list nya:\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            while(!tasks.getTasks().isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                tasks.delete(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            for (Task task : undoneTasks.getTasks()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(String.format(\"     %d.%s\\n\", i + 1, tasks.getTasks().get(i).toString()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            String[] commands \u003d parser.parse(command);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            String com \u003d commands[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            switch (com) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                index \u003d Integer.valueOf(commands[1]) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                if (tasks.getTasks().isEmpty()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"Nya? There is nothing to remove nya *confused cat noises*\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else if (index \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(String.format(\"Nya? There are no tasks at (%d) nya\", index + 1));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"Meow! Noted~ I\u0027ve removed this task nya:\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    Task deletedTask \u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"       \" + deletedTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    tasks.delete(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    boolean isMatching \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (deletedTask.equals(task)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            isMatching \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    assert isMatching : \"the task at this index should have been deleted nya\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(String.format(\"Now you have %d tasks in the list nya~\\n\", tasks.getTasks().size()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                index \u003d Integer.valueOf(commands[1]) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                Task t \u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                tasks.done(index);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                String isDone \u003d t.isDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                assert isDone.equals(\"y\") : \"the task should be marked done nya\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"Nice nya! I\u0027ve marked this task as done nya:\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"       \" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    if (task.getName().contains(commands[1])) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        results.add(task);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                string.append(\"Here are the matching tasks in your list nya:\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(String.format(\"     %d.%s\\n\", i + 1, results.get(i).toString()));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                String taskName \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                for (int j \u003d 1; j \u003c commands.length; j++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    if (j !\u003d commands.length - 1) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        taskName +\u003d commands[j] + \" \";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        taskName +\u003d commands[j];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                if (commands[0].equals(\"todo\") || commands[0].equals(\"deadline\") || commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            string.append(\"OOPS!!! The description of an event cannot be empty nya.\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            string.append(String.format(\"OOPS!!! The description of a %s cannot be empty nya.\\n\","
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                                    commands[0]));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (commands[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else if (commands[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            String[] details \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Deadline(details[0], details[1]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            String[] details \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            task \u003d new Event(details[0], details[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        int taskSize \u003d tasks.getTasks().size();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        string.append(\"Meow! Got it~ I\u0027ve added this task nya:\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        string.append(\"       \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        if (tasks.getTasks().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            string.append(\"Now you have 1 task in the list nya~\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                            string.append(String.format(\"Now you have %d tasks in the list nya~\\n\", tasks.getTasks()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                                    .size()));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        int newTaskSize \u003d tasks.getTasks().size();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                        assert newTaskSize \u003d\u003d taskSize + 1 : \"the list should have increased by 1 task nya\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                    string.append(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means nya :,3\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return string.toString();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Displays error messages."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @param error Name of error."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        if (error.equals(\"load\")) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"OOPS!!! The list of tasks cannot be loaded.\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else if (error.equals(\"filepath\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"OOPS!!! There is something wrong with the filepath.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        } else if (error.equals(\"store\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            System.out.println(\"OOPS!!! There is something wrong with the file.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Returns if program is to be exited."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * @return Boolean depending on whether program is to be exited."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     * Shows exit message for stopping program."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        return \"Bye bye! Hope to see you again soon nya! :3 :3 :3\\n\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 246
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cBorderPane prefHeight\u003d\"105.0\" prefWidth\u003d\"105.0\" style\u003d\"-fx-background-color: #EBE0FF#EBE0FF;\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "               \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "               \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 34
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.Cursor?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.effect.Blend?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cImageView fitHeight\u003d\"124.0\" fitWidth\u003d\"399.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cImage url\u003d\"@../images/Banner.jpg\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccursor\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/cursor\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccursor\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/cursor\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" blendMode\u003d\"SRC_ATOP\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #EBE0FF#EBE0FF;\" text\u003d\"Meow\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccursor\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/cursor\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cBlend mode\u003d\"SRC_ATOP\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/effect\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"118.0\" prefHeight\u003d\"439.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #E0FFFF#E0FFFF;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"438.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #E0FFFF#E0FFFF;\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003ccursor\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "            \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "         \u003c/cursor\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003ccursor\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "      \u003cCursor fx:constant\u003d\"HAND\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "   \u003c/cursor\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 53
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[D][n] return book (by: 01/01/2019 1500)\", new Deadline(\"return book\",\"01/01/2019 1500\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 9
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void stringSplit_string_stringArray() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[todo, return, book]\", Arrays.toString(new Parser().parse(\"todo return book\")));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "        assertEquals(\"[T][n] return book\", new Todo(\"return book\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rongrongrr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rongrongrr": 9
    }
  }
]
