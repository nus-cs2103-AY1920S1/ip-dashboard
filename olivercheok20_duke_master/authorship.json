[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Deadline(String name, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", this.getMark(), this.getName(), this.getDeadline());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        System.out.println(formatMessage(\"Hello, I\u0027m Duke\\nWhat can I do for you?\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                String list \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    list +\u003d String.format("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            \"%d.\" + tasks.get(i) + \"\\n\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            i + 1,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            tasks.get(i).getMark());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                System.out.println(formatMessage(list));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            } else if (command.length() \u003e 3 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                tasks.get(taskNo - 1).setDone(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                message +\u003d \"  \" + tasks.get(taskNo - 1) + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            } else if (command.length() \u003e 5 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                int taskNo \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                String message \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                message +\u003d \"  \" + tasks.get(taskNo - 1) + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                message +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size() - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                tasks.remove(taskNo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    String[] commandWithType \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task newTask \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    if (commandWithType[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        if (commandWithType.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            throw new Error(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        newTask \u003d new Todo(commandWithType[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    } else if (commandWithType[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        if (commandWithType.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            throw new Error(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        String[] deadlineInfo \u003d commandWithType[1].split(\" /by \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        newTask \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    } else if (commandWithType[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        if (commandWithType.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            throw new Error(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        String[] eventInfo \u003d commandWithType[1].split(\" /at \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        newTask \u003d new Event(eventInfo[0], eventInfo[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        tasks.add(newTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    String message \u003d String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", newTask, tasks.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } catch (Error e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println(formatMessage(e.getMessage()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        System.out.println(formatMessage(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    private static String formatMessage(String message) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String formatted \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String[] lines \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            formatted +\u003d \"     \" + line + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        formatted +\u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 81,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Event(String name, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return String.format(\"[D][%s] %s (at: %s)\", this.getMark(), this.getName(), this.getTime());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 21
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String getMark() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            return \"✗\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return String.format(\"[%s] %s\", this.getMark(), this.getName());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 38
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.getMark(), this.getName());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 10
    }
  }
]
