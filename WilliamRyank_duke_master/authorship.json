[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected static Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        printHello();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        while (!( command \u003d sc.next()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleDoneCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleTodoCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleDeadlineCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleEventCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    handleDeleteCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        printBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void printAddTask(Task newTask) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleTodoCommand() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            Task newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            list.add(newTodo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            printAddTask(newTodo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: todo [task description]\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleListCommand() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String statement \u003d sc.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            if (!statement.isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                System.out.println(\"     \" + number + \".\" + list.get(i));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: list\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleDeadlineCommand() throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String[] statement \u003d sc.nextLine().split(\"/by\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String taskDescription \u003d statement[0].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String taskBy \u003d statement[1].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            if (taskDescription.isBlank() || taskBy.isBlank()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            Task newDeadline \u003d new Deadline(taskDescription, taskBy);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            list.add(newDeadline);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            printAddTask(newDeadline);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Task description/Task by can not be empty\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: deadline [task description] /by [task deadline]\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleEventCommand() throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String[] statement \u003d sc.nextLine().split(\"/at\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String taskDescription \u003d statement[0].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            String taskAt \u003d statement[1].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            if (taskDescription.isBlank() || taskAt.isBlank()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            Task newEvent \u003d new Event(taskDescription, taskAt);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            list.add(newEvent);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            printAddTask(newEvent);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Task description/Task at can not be empty\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: event [task description] /at [task at]\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleDoneCommand() throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sc.nextLine().trim()) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            list.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"       \" + list.get(taskNumber));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number you specified is not in the list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: done [task number]\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public static void handleDeleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sc.nextLine().trim()) - 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            Task deletedTask \u003d list.get(taskNumber);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            list.remove(taskNumber);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"       \" + deletedTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            System.out.println(\"    _____________________________________\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! The task number you specified is not in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "            throw new DukeException(\"OOPS!!! Your input format is wrong. Use: delete [task number]\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 162,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WilliamRyank"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WilliamRyank": 22
    }
  }
]
