[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public Deadline(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String[] parsedName \u003d taskName.split(\" /\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String name \u003d parsedName[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String[] info \u003d parsedName[1].split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        for (int i \u003d 1; i \u003c info.length; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            time +\u003d (\" \" + info[i]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        time \u003d time.trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[D][\\u2714] %s (by: %s)\", name, time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[D][\\u2718] %s (by: %s)\", name, time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    // for formatting purposes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String prependSpace \u003d \"     \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    // default statements by duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String hi \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String farewell \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String listIntro \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        System.out.print(formatOutput(hi));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        // get first user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            String[] parsedInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            String command \u003d parsedInput[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            // get task details, if any"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            String taskName \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            for (int i \u003d 1; i \u003c parsedInput.length; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                taskName +\u003d (\" \" + parsedInput[i]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    // print all tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    String listedTask \u003d IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            .mapToObj(i -\u003e String.format(\"%d. %s\\n\", (i + 1), tasks.get(i)))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            .reduce(\"\", (prev, curr) -\u003e prev + curr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    System.out.print(formatOutput(listIntro + \"\\n\" + listedTask));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(parsedInput[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    Task currentTask \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    if (currentTask.isDone()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                        throw new MultipleChecksException(taskNum + 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    currentTask.done();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    // update user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    System.out.print(formatOutput(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\\n\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            tasks.get(taskNum))));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(parsedInput[1]) - 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    Task deletedTask \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    tasks.remove(taskNum);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    // update user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    String response \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                                                    deletedTask, tasks.size());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    System.out.print(formatOutput(response));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    // if new tasks needs to be added"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                        throw new EmptyDescriptionException(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    switch(command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            tasks.add(new Todo(taskName));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            if (!taskName.contains(\" /\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                                throw new InvalidTimeException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            tasks.add(new Deadline(taskName));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            if (!taskName.contains(\" /\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                                throw new InvalidTimeException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            tasks.add(new Event(taskName));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    String response \u003d String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                            tasks.get(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    System.out.print(formatOutput(response));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            } catch(MultipleChecksException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                System.err.print(formatOutput(e.getMessage()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                System.err.print(formatOutput(e.getMessage()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                System.err.print(formatOutput(e.getMessage()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            } catch (InvalidTimeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                System.err.print(formatOutput(e.getMessage()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                // get next user input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        // bid farewell"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        System.out.println(formatOutput(farewell));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private static String formatOutput(String str) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String accum \u003d line;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String[] allLines \u003d str.split(\"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        accum +\u003d Arrays.stream(allLines)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "                .reduce(\"\", (prev, curr) -\u003e prev + prependSpace + curr + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        accum +\u003d line;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return accum;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 115,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public EmptyDescriptionException(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        if (task.equals(\"event\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            type \u003d \"an event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        } else if (task.equals(\"todo\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            type \u003d \"a todo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            // assumes that there are only 3 possibilities"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            type \u003d \"a deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return String.format(\"\\u2639  OOPS!!! The description of %s cannot be empty.\", type);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public Event(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String[] parsedName \u003d taskName.split(\" /\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String name \u003d parsedName[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String[] info \u003d parsedName[1].split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        for (int i \u003d 1; i \u003c info.length; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            time +\u003d (\" \" + info[i]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        time \u003d time.trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[E][\\u2714] %s (at: %s)\", name, time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[E][\\u2718] %s (at: %s)\", name, time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 24
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "class InvalidCommandException extends UnsupportedOperationException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return String.format(\"\\u2639  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 10
    }
  },
  {
    "path": "src/main/java/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "class InvalidTimeException extends UnsupportedOperationException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public InvalidTimeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return String.format(\"\\u2639  OOPS!!! Please include a time.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 10
    }
  },
  {
    "path": "src/main/java/MultipleChecksException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "class MultipleChecksException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public MultipleChecksException(int taskNum) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return String.format(\"\\u2639  OOPS!!! You have completed task %d earlier!\", taskNum);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    protected boolean done \u003d false; // by default it\u0027s false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[T][\\u2714] %s\", taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "            return String.format(\"[T][\\u2718] %s\", taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 14
    }
  }
]
