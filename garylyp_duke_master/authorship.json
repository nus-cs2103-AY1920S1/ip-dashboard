[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    mainClassName \u003d \"main.Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 25,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "E | 1 | happy | sad"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "D | 0 | d3 | 22/09/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "D | 0 | karate proposal | 27/08/2019 0132"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "E | 0 | karate welcome tea | mpsh2"
      }
    ],
    "authorContributionMap": {
      "garylyp": 4
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * Represents a single command that can only execute a single action."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract void execute();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "garylyp": 10
    }
  },
  {
    "path": "src/main/java/command/CommandCentre.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class CommandCentre {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     A collection to store and map command names to their"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     respective Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private HashMap\u003cString, Command\u003e commands;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Manages all commands in the app."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public CommandCentre() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Command with its command name into the collection of commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param commandName The name of the command to be registered."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param command The Command object this commandName will map to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void register(String commandName, Command command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commands.put(commandName, command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Executes the command given by the command name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param commandName The name of the command to be executed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return boolean Whether the command is valid or not."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean execute(String commandName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Command command \u003d commands.get(commandName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            commands.get(commandName).execute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 53
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public EmptyDescriptionException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(\"Empty Description\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(\"Invalid Command\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.CommandCentre;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String ROOT \u003d \"D:\\\\Gary\\\\Uni\\\\NUS\\\\1920SEM1\\\\CS2103T\\\\Practices\\\\duke\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String STORAGE_PATH \u003d \"\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final boolean RESET_TASK_LIST \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final CommandCentre commandCentre;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private boolean isExiting;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Initializes TaskList, Storage, Ui, Parser objects. Initializes all"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     commands. Clears the existing TaskList in Storage if RESET_TASK_LIST"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     is true."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        storage \u003d new Storage(ROOT + STORAGE_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre \u003d new CommandCentre();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        isExiting \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        initializeCommands();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (RESET_TASK_LIST) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            storage.clearData();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Main entry point for the Duke Chatbot."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void run()  {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ui.printHelloMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        while (parser.hasNext()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String action \u003d parser.getNextAction();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.printDivider();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            boolean isSuccessful \u003d commandCentre.execute(action);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (!isSuccessful) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                parser.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.printDivider();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (isExiting) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Initialize all commands with their command names and store"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * them to command centre."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void initializeCommands() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"bye\", new Command() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printByeMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                isExiting \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"help\", new Command() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            protected void execute() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printHelpMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"list\", new Command() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printEmptyTaskListMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskList(taskList.getTasks(), Ui.LIST_ACTION_TITLE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"done\", new Command() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Integer idx \u003d parser.getTaskIdx();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (idx !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.markAsDone(idx);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printMarkedAsDoneMessage(taskList.get(idx));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"delete\", new Command() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Integer idx \u003d parser.getTaskIdx();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (idx !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    Task task \u003d taskList.deleteTask(idx);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskDeletedMessage(task, taskList.size());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"todo\", new Command() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String taskName \u003d parser.parseTodoDetail();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (taskName !\u003d null) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    Task newTask \u003d taskList.addNewTodoTask(taskName, false);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskAddedMessage(newTask, taskList.size());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"deadline\", new Command() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (taskInfo !\u003d null) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    Task newTask \u003d taskList.addNewDeadlineTask(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskAddedMessage(newTask, taskList.size());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"event\", new Command() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (taskInfo !\u003d null) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    Task newTask \u003d taskList.addNewEventTask(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskAddedMessage(newTask, taskList.size());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"find\", new Command() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String keyword \u003d parser.parseFindKeyword();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (keyword \u003d\u003d null) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                List\u003cTask\u003e findResult \u003d taskList.generateListByKeyword(keyword);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskList(findResult, Ui.FIND_ACTION_TITLE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 177
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     A Task that has a deadline in the format DD/MM/YYYY HHmm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     as its additional info."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Deadline(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(by: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 33
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     A Task that has a additional info component (that is usually"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     a venue)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     The additional info of an Event task. It is the content that is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     passed in after the \"/at\" keyword when interacting with the UI"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     with \"event\" action."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Event(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(at: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 39
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static int NOT_DONE \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static int DONE \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private int status;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Represents a single Task object in TaskList. Newly created Tasks are"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     set to NOT_DONE by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param name The name of the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns a single character representing the icon for the task type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The task icon for the type of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String getTypeSymbol();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns additional information that is passed into the task object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The additional information of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public abstract String getAdditionalInfo();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Returns the additional info in a manner used for printing directly"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     to the UI."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The additional information of the task in formatted style."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String displayAdditionalInfo();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d DONE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setNotDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public int getStatus() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String getStatusSymbol() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (status \u003d\u003d DONE) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s%s %s %s\", getTypeSymbol(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                                           getStatusSymbol(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                                           name,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                                           displayAdditionalInfo());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 81
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     A singleton that helps to manage the list of task and provides"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     various operations on tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Returns a new TaskList object that holds a reference to the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     working list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return an instance of a TaskList object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static TaskList newInstance() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Todo Task to TaskList with the given task name and"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * done status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName The task name of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone The done status of the newly added task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Todo task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewTodoTask(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Event Task to TaskList with the given task name, additional"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * info and done status."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName The task name of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param additionalInfo The additional info of the Event task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone The done status of the newly added task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Event task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewEventTask(String taskName, String additionalInfo, boolean isDone) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Event(taskName, additionalInfo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Deadline Task to TaskList with the given task name, additional"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * info and done status."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName The task name of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param additionalInfo The additional info of the Deadline task in \"DD/MM/YYYY HHmm\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *                       format."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone The done status of the newly added task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Deadline task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewDeadlineTask(String taskName, String additionalInfo, boolean isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Deadline(taskName, additionalInfo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deletes a task from task list by index."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task deleteTask(int idx) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task task \u003d tasks.remove(idx);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Marks a task from task list as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void markAsDone(int idx) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.get(idx).setDone();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Marks a task from task list as not done."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    void markAsNotDone(int idx) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.get(idx).setNotDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Finds all tasks whose task name or additional info contains the keyword."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param keyword The word or phrase to be searched for."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The list of tasks that are associated with the keyword."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public List\u003cTask\u003e generateListByKeyword(String keyword) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        List\u003cTask\u003e findResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (tasks.get(i).getName().contains(keyword)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    || tasks.get(i).getAdditionalInfo().contains(keyword)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                findResult.add(tasks.get(i));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return findResult;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.equals(((TaskList)obj).getTasks());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 165
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     A standard Task with a name and no additional info."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 28
    }
  },
  {
    "path": "src/main/java/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     Helps to scan user input and process them into information."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setScanner(Scanner sc) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Clears the current line the scanner is on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void nextLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Checks whether there is more content for the scanner to read."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return Whether there is next or not."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean hasNext() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return sc.hasNext();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads and returns the next action in the user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The next action string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getNextAction() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return sc.next();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Reads and breaks down the content after the \"event\" action keyword."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Invalid input argument types or format will be highlighted to the"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return \u003cp\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     If successful, an array of String of length 2 consisting of the Event\u0027s"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     name and additional info."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Else, a null object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String[] parseEventDetail() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d taskName.split(\"\\\\s*/at\\\\s*\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty() || taskInfo[0].trim().isEmpty() || taskInfo[1].equals(\"\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskInfo;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"event\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! There must be exactly one argument before and\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"     one argument after the keyword %s.\\n\", \"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Reads and breaks down the content after the \"deadline\" action keyword."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Invalid input argument types or format will be highlighted to the user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return \u003cp\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     If successful, an array of String of length 2 consisting of the Deadline"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Task\u0027s name and deadline, a String in the format \"DD/MM/YYYY HHmm\"."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Else, a null object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String[] parseDeadlineDetail() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d taskName.split(\"\\\\s*/by\\\\s*\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sdf.setLenient(false);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            cal.setTime(sdf.parse(taskInfo[1]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty() || taskInfo[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskInfo;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"deadline\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! There must be exactly one argument before and\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"     one argument after the keyword %s.\\n\", \"/by\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     ☹ OOPS!!! Date must be in the format \\\"dd/MM/yyyy HHmm\\\"\\n + \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"     and must be valid.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Reads and breaks down the content after the \"todo\" action keyword."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Invalid input argument types or format will be highlighted to the"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return \u003cp\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     If successful, a String representing the Task\u0027s name."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Else, a null object."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String parseTodoDetail() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskName;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"todo\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Reads the next integer from user input where the integer must be"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     a valid index for the tasks in TaskList."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     If successful, an Integer representing the task index."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Else, a null object."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Integer getTaskIdx() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int idx \u003d Integer.parseInt(sc.next()) - 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.get(idx);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return idx;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! You have no task at the moment.\\n\", 1, taskList.size());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        taskList.size());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    1,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.size());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String parseFindKeyword() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String keyword \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return keyword;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     ☹ OOPS!!! The keyword for \\\"find\\\" cannot be empty.\\n\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 207
    }
  },
  {
    "path": "src/main/java/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     Manages the I/O for accessing and updating of a stored task list in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": " *     the file directory."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Loads data into the TaskList if the storage file already exists. Else"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     creates a new file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param absolutePathName The full path name of the file to specify its"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *                         stored location."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Storage(String absolutePathName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        file \u003d new File(absolutePathName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            loadData();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                file \u003d new File(file.getAbsolutePath());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deletes the storage file from its directory."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void clearData() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Parse the storage file and stores all the tasks listed within it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     into TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    void loadData()  {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d sc.nextLine().split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            switch (taskInfo[0]) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.addNewTodoTask(taskInfo[2],"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                            taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.addNewDeadlineTask(taskInfo[2],"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                            taskInfo[3],"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                            taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.addNewEventTask(taskInfo[2],"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                            taskInfo[3],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                            taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Rewrites the whole storage file based on the current TaskList"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     contents."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void updateData()  {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(\"T\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getStatus());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getName());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(\"D\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getStatus());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getName());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getAdditionalInfo());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(\"E\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getStatus());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getName());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(task.getAdditionalInfo());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (i \u003c taskList.size()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 147
    }
  },
  {
    "path": "src/main/java/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String LIST_ACTION_TITLE \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String FIND_ACTION_TITLE \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "              \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String DIVIDER \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a hello message when program first initializes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printHelloMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     What can I do for you?\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a list of actions that can be used."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printHelpMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     List of commands:\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     bye     : Exits from the program\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     list    : List all existing tasks\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     help    : Prints the list of commands\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     done n  : Marks the n-th task on the list as done\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     delete n: Deletes the n-th task on the list\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     todo taskName :\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               Adds a new Todo task with the given name.\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     event taskName /at additionalInfo :\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               Adds a new Event task with the given additional\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               info.\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     deadline taskName /by DD/MM/YYYY HHmm :\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               Adds a new Deadline task with the deadline in the\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               given format.\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     search keyword :\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               Returns a list of task with names containing the\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"               keyword.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message upon exit of the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a divider line for pretty printing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message to indicate that is no existing task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printEmptyTaskListMessage() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"    You have no task at the moment.\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints all the tasks in the given task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskList The list of tasks to be printed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param title The preamble to be printed before listing the tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskList(List\u003cTask\u003e taskList, String title) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(title);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"    %d.\", i + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"%s\\n\", taskList.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message that the given task is marked as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task The task that is marked as done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printMarkedAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Prints a message that the given task has been deleted and then"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     prints the total number of tasks remaining."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task The task that is deleted."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskListSize The total number of tasks remaining in the task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskDeletedMessage(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", taskListSize);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     Prints a message that the given task has been added and then"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *     prints the total number of tasks currently."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task The task that has been added."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskListSize The total number of tasks currently in the task list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskAddedMessage(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", taskListSize);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 129
    }
  },
  {
    "path": "src/test/java/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void newInstance_sameTaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(taskList, TaskList.newInstance());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void addNewTodoTask_doneTodo_doneTodoTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTodo \u003d TaskList.newInstance().addNewTodoTask(\"Todo1\", true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(Task.DONE, newTodo.getStatus());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void addNewTodoEvent_undoneEvent_undoneEventTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTodo \u003d TaskList.newInstance().addNewEventTask(\"Event1\", \"Event1Info\", false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(Task.NOT_DONE, newTodo.getStatus());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void clear_emptyList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo1\", false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo2\", false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo3\", false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), taskList.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 39
    }
  },
  {
    "path": "src/test/java/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutKeywordAt_null() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"a string that does not contain the keyword\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutDescription_null() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"     /at additionalInfo\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutAdditionalInfo_null() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"event1 /at \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withKeywordButWithoutDescAndInfo_null() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"     /at  \"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withAllNecessaryInfo_correctInfo() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d \"event1\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String additionalInfo \u003d \"nus\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String input \u003d taskName + \" /at \" + additionalInfo;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(input));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] expectedTaskInfo \u003d new String[]{taskName, additionalInfo};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            assertEquals(expectedTaskInfo[i], taskInfo[i]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutKeywordBy_null() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"a string that does not contain the keyword\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutDescription_null() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"     /by 25/08/2019 2156\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutAdditionalInfo_null() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"deadline1 /by \"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withKeywordButWithoutDescAndInfo_null() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"     /by  \"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withInvalidDateFormat_null() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"deadline2 /by 22nd June\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withNonexistentDate_null() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(\"deadline2 /by 99/99/2019 5400\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withAllNecessaryInfo_correctInfo() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d \"event1\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String additionalInfo \u003d \"25/08/2019 2156\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String input \u003d taskName + \" /by \" + additionalInfo;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setScanner(new Scanner(input));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] expectedTaskInfo \u003d new String[]{taskName, additionalInfo};"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            assertEquals(expectedTaskInfo[i], taskInfo[i]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 110
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\t Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\t What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     ☹ OOPS!!! Date must be in the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✗] dododo "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✓] dododo "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✓] dododo "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 70
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "﻿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     ☹ OOPS!!! Date must be in the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✗] dododo "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✓] dododo "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✓] dododo "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 70
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo lalala"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event happy /at sad"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline today /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo dododo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event 456 /at 789"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline d3 /by 22/09/2019 1800"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "garylyp": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM Check for differences in the two text files"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "FC ACTUAL.txt EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "garylyp": 21
    }
  }
]
