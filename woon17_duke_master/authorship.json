[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027myduke.Duke\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "woon17": 40
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "T | 1 | task 1 "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "E | 0 | task 2 | 01/02/1009 0930 "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "D | 1 | task 3 | 10/03/3999 0900 "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "T | 0 | task 4 "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "T | 1 | others "
      }
    ],
    "authorContributionMap": {
      "woon17": 5
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "woon17": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * AddCommand extends Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private String[] oneLine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String[] timeDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public AddCommand(String[] oneLine) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.oneLine \u003d oneLine;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * boolean isValidTime."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static boolean isValidTime(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "            DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "            LocalDateTime localDate1 \u003d LocalDateTime.parse(str, formatter1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String timeDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String firstWord \u003d oneLine[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "            tasks.getTaskList().add(new Todo(oneLine[1].trim()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "            this.timeDate \u003d oneLine[1].trim().split(\" /by \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (this.timeDate.length \u003d\u003d 2 \u0026\u0026 isValidTime(this.timeDate[1].trim())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "                description \u003d this.timeDate[0].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "                timeDate \u003d this.timeDate[1].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "                tasks.getTaskList().add(new Deadline(description, timeDate));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new NoTimeAndDateException(\"specific date/time for deadline is wrong\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "            this.timeDate \u003d oneLine[1].trim().split(\" /at \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (this.timeDate.length \u003d\u003d 2 \u0026\u0026 isValidTime(this.timeDate[1].trim())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "                description \u003d this.timeDate[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "                timeDate \u003d this.timeDate[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "                tasks.getTaskList().add(new Event(description, timeDate));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new NoTimeAndDateException(\"specific date/time for event is wrong\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(Ui.frontSpace + \" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(Ui.frontSpace + \"   \" + tasks.getTaskList().get(tasks.size() - 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(Ui.frontSpace + \" Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woon17"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" duke.txt not exist\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 68
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * abstract class Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Deadline extends Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Deadline extends Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.pattern \u003d LocalDateTime.parse(by.trim(), dateTimeFormatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Deadline extends Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Deadline(String description, String by, String isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.pattern \u003d LocalDateTime.parse(by.trim(), dateTimeFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getFormatToFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return String.format(\"D | %d | %s | %s \\n\", (isDone ? 1 : 0), description, by.trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 38
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * DeleteCommand extends Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private String[] oneLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    String deleteMessage1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    String deleteMessage2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public DeleteCommand(String[] oneLine) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.oneLine \u003d oneLine;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int tasksSize \u003d tasks.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "        deleteMessage1 \u003d \" Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        deleteMessage2 \u003d \" Now you have \" + (tasksSize - 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int i \u003d Integer.parseInt(oneLine[1].trim());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (i \u003c\u003d tasksSize \u0026\u0026 i \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + deleteMessage1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "            Task deleteTask \u003d tasks.getTaskList().get(i - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "            tasks.getTaskList().remove(i - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \"   \" + deleteTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new TaskNotExistException(\"task does not exist\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" duke.txt has problem\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 35
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * DoneCommand extends Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private String[] oneLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public DoneCommand(String[] oneLine) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.oneLine \u003d oneLine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int i \u003d Integer.parseInt(oneLine[1].trim());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int tasksSize \u003d tasks.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (i \u003c\u003d tasksSize \u0026\u0026 i \u003e 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "            Task current \u003d tasks.getTaskList().get(i - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "            current.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \"   \" + current);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new TaskNotExistException(\"task does not exist\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" duke.txt has problem\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Duke class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private static final String TXTFILELOCATION \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * run()."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "        Duke dukeObj \u003d new Duke(TXTFILELOCATION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "        dukeObj.run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"     ☹ OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Event extends Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Event extends Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.pattern \u003d LocalDateTime.parse(at.trim(), dateTimeFormatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Event extends Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Event(String description, String at, String isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.pattern \u003d LocalDateTime.parse(at.trim(), dateTimeFormatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getFormatToFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return String.format(\"E | %d | %s | %s \\n\", (isDone ? 1 : 0), description, at.trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 37
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * ExitCommand extends Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "        message \u003d \" Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(Ui.frontSpace + message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 20
    }
  },
  {
    "path": "src/main/java/ExtraDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * ExtraDescriptionException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class ExtraDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public ExtraDescriptionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private String[] oneLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private List\u003cTask\u003e myList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public FindCommand(String[] oneLine) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.oneLine \u003d oneLine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String partTaskName \u003d oneLine[1].trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (t.description.contains(partTaskName)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "                myList.add(t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (myList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "            for (Task tk : myList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "                System.out.println(Ui.frontSpace + \" \" + i + \". \" + tk);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "            i \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new TaskNotExistException(\"task does not exist\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 32
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * InvalidCommandException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "src/main/java/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * InvalidNumberException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class InvalidNumberException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public InvalidNumberException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * ListCommand extends Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String title \u003d \" Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "        int tasksSize \u003d tasks.size();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (tasksSize \u003d\u003d 0) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(Ui.frontSpace + \" You have no tasks in your list.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksSize; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "                if ((i + 1) \u003c 10) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    System.out.println(Ui.frontSpace + \" \" + (i + 1) + \". \" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    System.out.println(Ui.frontSpace + \" \" + (i + 1) + \".\" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 21
    }
  },
  {
    "path": "src/main/java/NoTimeAndDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * NoTimeAndDateException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class NoTimeAndDateException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public NoTimeAndDateException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Parser class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String[] oneLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * isNumeric."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * findFeature()."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static FindCommand findFeature() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].isBlank())) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + oneLine[0].trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 !oneLine[1].isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return new FindCommand(oneLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidNumberException(\"the description should be a number\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * doneFeature()."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static DoneCommand doneFeature() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].isBlank())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + oneLine[0].trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 !oneLine[1].isBlank()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "                \u0026\u0026 oneLine[1].trim().split(\" \").length \u003d\u003d 1 \u0026\u0026 isNumeric(oneLine[1].trim())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return new DoneCommand(oneLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].trim().split(\" \").length !\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for done\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidNumberException(\"the description should be a number\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * deleteFeature()."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static DeleteCommand deleteFeature() throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 1 || (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].isBlank())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + oneLine[0].trim() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length !\u003d 1 \u0026\u0026 !oneLine[1].isBlank()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "                \u0026\u0026 oneLine[1].trim().split(\" \").length \u003d\u003d 1 \u0026\u0026 isNumeric(oneLine[1].trim())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return new DeleteCommand(oneLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (oneLine.length \u003d\u003d 2 \u0026\u0026 oneLine[1].trim().split(\" \").length !\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new ExtraDescriptionException(\"There is extra description for delete\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidNumberException(\"the description should be a number\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * childFeature()."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static AddCommand childFeature() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String firstWord \u003d oneLine[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (oneLine.length \u003d\u003d 2 \u0026\u0026 !oneLine[1].isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return new AddCommand(oneLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"The description of a \" + firstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Parser."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "woon17"
        },
        "content": "        Command outCommand \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String cmd \u003d input;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "woon17"
        },
        "content": "        oneLine \u003d cmd.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String firstWord \u003d oneLine[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (oneLine.length !\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new ExtraDescriptionException(\"There is extra description for bye\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (oneLine.length !\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new ExtraDescriptionException(\"There is extra description for list\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d findFeature();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d doneFeature();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d deleteFeature();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "woon17"
        },
        "content": "                || firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "woon17"
        },
        "content": "            outCommand \u003d childFeature();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return outCommand;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 109
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Storage class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static List\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String txtFileLocation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private File parentFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.txtFileLocation \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * putToList()."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void putToList(String str) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String[] oneLine \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String firstWord \u003d oneLine[0].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (oneLine[1].trim().equals(\"1\") || oneLine[1].trim().equals(\"0\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "                if (firstWord.equals(\"T\") \u0026\u0026 oneLine.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    myList.add(new Todo(oneLine[2], oneLine[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"D\") \u0026\u0026 oneLine.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    myList.add(new Deadline(oneLine[2], oneLine[3], oneLine[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else if (firstWord.equals(\"E\") \u0026\u0026 oneLine.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    myList.add(new Event(oneLine[2], oneLine[3], oneLine[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "                    throw new InvalidCommandException(\"[duke.txt]: I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "                throw new InvalidNumberException(\"[duke.txt]: the description should have 0 or 1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * load()."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "            parentFile \u003d new File(txtFileLocation);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "            Scanner sc \u003d new Scanner(parentFile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "                putToList(sc.nextLine());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(\"[duke.txt]: duke.txt not found\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return myList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * save(TaskList tasks)."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void save(TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woon17"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woon17"
        },
        "content": "            parentFile \u003d new File(txtFileLocation).getParentFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (!parentFile.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "woon17"
        },
        "content": "                parentFile.mkdir();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "woon17"
        },
        "content": "            PrintWriter pr \u003d new PrintWriter(txtFileLocation);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "woon17"
        },
        "content": "            for (Task obj : myList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "woon17"
        },
        "content": "                pr.write(obj.getFormatToFile());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "woon17"
        },
        "content": "            pr.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "woon17"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "woon17"
        },
        "content": "            System.out.println(\"duke.txt not found\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 84
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": " * abstract class Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected LocalDateTime pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    protected final DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.description \u003d perfectDescription(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Task(String description, String done)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Task(String description, String done) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.description \u003d perfectDescription(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (done.trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * perfectDescription."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String perfectDescription(String description) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String[] temp \u003d description.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "        for (String str : temp) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "            if (!str.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "                result +\u003d \" \" + str.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return result.trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public abstract String getFormatToFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return pattern.format(formatter2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 64
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": " * TaskList class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public TaskList(List\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        this.taskList \u003d myList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * deleteTask(int index)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"Task does not exist\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * getTask(int index)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "            throw new DukeException(\"Task does not exist\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 49
    }
  },
  {
    "path": "src/main/java/TaskNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * TaskNotExistException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class TaskNotExistException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public TaskNotExistException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 8
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Todo extends Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Todo(String description, String isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String getFormatToFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return String.format(\"T | %d | %s \\n\", (isDone ? 1 : 0), description.trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": " * Manages everything related to the UI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private static String oneLine \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public static String frontSpace \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * used to readComand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.print(oneLine);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * showError(String message)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(\" \" + frontSpace + message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * showWelcome()."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woon17"
        },
        "content": "        String greet \u003d \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woon17"
        },
        "content": "                + \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woon17"
        },
        "content": "        greet \u003d oneLine + greet + oneLine;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woon17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woon17"
        },
        "content": "     * showLoadingError()."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woon17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woon17"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woon17"
        },
        "content": "        System.out.println(frontSpace + \" duke.txt file has problem!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woon17"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 57
    }
  },
  {
    "path": "src/test/java/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private AddCommand cd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void commandTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "        cd \u003d new AddCommand(\"event task /at 12345\".split(\" \", 2));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "        assertEquals(false, AddCommand.isValidTime(\"12345\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void taskListTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "        Task task \u003d new Todo(\"task1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "        assertEquals(task, taskList.getTaskList().get(0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "        taskList.addTask(new Todo(\"task2\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "        assertEquals(2, taskList.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "    public void exitTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": "        Command c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "        assertEquals(true, c.isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woon17": 27
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "\"WEN SHUFA\""
      }
    ],
    "authorContributionMap": {
      "woon17": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "\"WEN SHUFA\""
      }
    ],
    "authorContributionMap": {
      "woon17": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "woon17": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woon17"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woon17"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woon17"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woon17"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woon17"
        },
        "content": "mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woon17"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woon17"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woon17"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woon17"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woon17"
        },
        "content": "rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woon17"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woon17"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woon17"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woon17"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woon17"
        },
        "content": "echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woon17"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woon17"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woon17"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woon17"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woon17"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woon17"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woon17"
        },
        "content": "diff ACTUAL.txt EXPECTED.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woon17"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woon17"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woon17"
        },
        "content": "echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woon17"
        },
        "content": "exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woon17"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woon17"
        },
        "content": "echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woon17"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woon17"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "woon17": 34
    }
  }
]
