[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "# Quack"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "A personal chatbot which helps users keep track of their todo tasks, events and deadlines in an interactive manner."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "![Screenshot of Quack](https://github.com/choongyx/duke/blob/master/docs/Ui.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "View the User Guide [here](https://choongyx.github.io/duke/)"
      }
    ],
    "authorContributionMap": {
      "choongyx": 4,
      "-": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 30,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "T | 1 | buy coffee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "D | 1 | assignment 1 | 18/09/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "D | 0 | post lecture quiz | 19/09/2019 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "E | 0 | project meeting | 18/09/2019 1000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "E | 0 | consultation session | 17/09/2019 1400"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "E | 0 | midterms | 4/10/2019 1200"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "T | 0 | shop for snacks "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "E | 0 | shop | 12/12/2019 1300"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "D | 0 | meeting | 20/02/2019 1300"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "# Quack - User Guide "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "A personal chatbot which helps users keep track of their todo tasks, events and deadlines in an interactive manner."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "1. Ensure that you have Java Version 11 installed on your computer."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "2. Download the latest `quack.jar` [here](https://github.com/choongyx/duke/releases)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Quack."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds as shown below."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "![Screenshot of Quack](https://github.com/choongyx/duke/blob/master/docs/Ui.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "5. Type a command in the command box and press `Enter` to execute it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   e.g. typing `todo buy coffee` and pressing Enter will add a new Todo task: buy coffee."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   `list` : lists all tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   `delete 1` : deletes first task of list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "   `bye` : exits the app"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "6. Refer to Features for the detailed list of features and commands.   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 1. Add Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "#### 1.1 Add Todo Tasks: `todo`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": " You can add a new Todo task to the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": " Format: `todo [DESCRIPTION]`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": " Example: `todo buy coffee`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "#### 1.2 Add Event Tasks: `event`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "You can add a new Event task to the list of tasks. Each event task has a start date and time associated with it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": " Format: `event [DESCRIPTION] /at [DATEANDTIME]`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": " \u003e Note: DATEANDTIME is to be specified in DD/MM/YYYY HHmm."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": " Example: `event project meeting /at 18/09/2019 1400`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "#### 1.3 Add Deadline Tasks: `dateline`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "You can add a new Deadline task to the list of tasks. Each deadline task has a deadline associated with it."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `dateline [DESCRIPTION] /by [DATEANDTIME]`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003e Note: DATEANDTIME is to be specified in DD/MM/YYYY HHmm."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Example: `dateline post lecture quiz /at 19/09/2019 2359`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": " "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 2. List tasks: `list`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "View list of all tasks, their types and statuses."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format:`list`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 3. Mark task as done: `done`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Mark a task as done. Status changes from 0 to 1."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `done [TASKNUMBER]`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Example: `done 1` (Marks the first task as done)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 4. Delete task: `delete`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Delete a task from the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `delete [TASKNUMBER]`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Example: `delete 2` (Deletes the second task in the list)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 5. Find task: `find`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Find a task among all the tasks by searching for a keyword."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `find [KEYWORD]`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Example: `find book` (Displays tasks with the keyword \u0027book\u0027)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 6. View statistics: `stats`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choongyx"
        },
        "content": "View the total number of tasks, number of each type of tasks, total number of task completed and the number of each type of task completed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `stats`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 7. Saving the data"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Data is saved in the hard disk `data/tasks.txt` automatically after any command that changes the data."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choongyx"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choongyx"
        },
        "content": "### 8. Bye: `bye`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Exit from the application."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choongyx"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "choongyx": 91,
      "-": 10
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for the exit command \"bye\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ByeCommand(String commandDesc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return true as the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 32
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is an abstract class for command inputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String commandDesc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Command(String commandDesc) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.commandDesc \u003d commandDesc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return true if the command is an exit command, false otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    abstract String execute(TaskList tasks, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 30
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for deadline tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Date deadlineInDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String deadlineInStringFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param deadlineInStringFormat Date that task is due."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @throws WrongDateFormatDukeException when date supplied is not in dd/MM/yyyy HHmm format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Deadline(String description, String deadlineInStringFormat) throws WrongDateFormatDukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.deadlineInDateFormat \u003d dateFormat.parse(deadlineInStringFormat);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.deadlineInStringFormat \u003d deadlineInStringFormat;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new WrongDateFormatDukeException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineInStringFormat + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"D | \" + super.getStatusIcon() + \" | \" + description + \" | \" + deadlineInStringFormat;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 52
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new deadline tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DeadlineCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if description is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Deadline newDeadline \u003d getDeadlineTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newDeadline.stringForAppend());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks.addDeadline(newDeadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return getOutput(tasks, newDeadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"deadline\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Parses the Deadline command and creates a new Deadline task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return new Deadline task to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Deadline getDeadlineTask() throws WrongDateFormatDukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String[] commandLine \u003d commandDesc.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return new Deadline(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Forms the output string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newDeadline new Deadline task to be added"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return output string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String getOutput(TaskList tasks, Deadline newDeadline) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d newDeadline + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Now you have \" + tasks.taskList.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 66
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with deletions of any tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DeleteCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        //Error if user inputs spaces"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (commandDesc.substring(7).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandDesc.substring(7).split(\" \")[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if task number is valid"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.taskList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.deleteFromFile(System.getProperty(\"user.dir\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        tasks.taskList.get(taskNumber - 1).stringForAppend());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String output \u003d getOutput(tasks, taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If user input for task number is empty"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If non-numeric input given for task number"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Forms the output string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param taskNumber task number of task to be deleted"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return output string"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String getOutput(TaskList tasks, int taskNumber) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d tasks.taskList.get(taskNumber - 1) + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Now you have \" + (tasks.taskList.size() - 1) + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 70
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a DialogBox for user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param text user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param img user image"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a DialogBox for Duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param text user input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param img user image"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 73
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command where tasks are marked as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    DoneCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (commandDesc.substring(5).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Error if user inputs spaces"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(commandDesc.substring(5).split(\" \")[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if task number is valid"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.taskList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.editsFile(System.getProperty(\"user.dir\"), tasks.taskList.get(taskNumber - 1).stringForAppend());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                return getOutput(tasks, taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If user input for task number is empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"empty\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //If non-numeric input given for task number"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidTaskNumberDukeException(\"invalid\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Forms the output string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param taskNumber task number of task to be marked as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return output string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String getOutput(TaskList tasks, int taskNumber) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d tasks.taskList.get(taskNumber - 1) + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 67
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is the main class for Project Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @throws IOException if there is an error loading tasks from hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String filePath \u003d \"/data/tasks.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        //Load tasks from hard disk if file exists"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param input the command input by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string response to the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 40,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for custom exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/java/EmptyDescDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class of exception where the description of the command is empty."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EmptyDescDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public EmptyDescDukeException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for event tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    Date atInDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String atInStringFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param description Event description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param eventDate Event date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Event(String description, String eventDate) throws WrongDateFormatDukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.atInDateFormat \u003d dateFormat.parse(eventDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            this.atInStringFormat \u003d eventDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new WrongDateFormatDukeException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return display string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + atInStringFormat + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be saved."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"E | \" + super.getStatusIcon() + \" | \" + description + \" | \" + atInStringFormat;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 51
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new event tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    EventCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws IOException, EmptyDescDukeException, WrongDateFormatDukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String[] commandLine \u003d commandDesc.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Event newEvent \u003d new Event(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newEvent.stringForAppend());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            tasks.addEvent(newEvent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return getOutput(tasks, newEvent);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"event\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Forms the output string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newEvent new event to be added"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return output string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String getOutput(TaskList tasks, Event newEvent) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d newEvent + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Now you have \" + tasks.taskList.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 56
    }
  },
  {
    "path": "src/main/java/FileNotFoundDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the file is not found."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class FileNotFoundDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public FileNotFoundDukeException(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(filePath + \" not found\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command to find tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    FindCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if description is empty"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!commandDesc.substring(5).equals((\"\"))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String output \u003d tasks.findTasks(commandDesc.substring(5));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new EmptyDescDukeException(\"find\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"find\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 44
    }
  },
  {
    "path": "src/main/java/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the command is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public InvalidCommandDukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 9
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumberDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for an exception where the task number is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class InvalidTaskNumberDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public InvalidTaskNumberDukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"OOPS!!! The task number is \" + error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for list command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ListCommand(String commandDesc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return tasks.displayTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 32
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            stage.setTitle(\"Quack\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Quack.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Initializes the GUI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Quack.\\nWhat can I do for you?\\n\", dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            userInput.setEditable(false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 59
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class which makes sense and differentiates the commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a Command corresponding to the type of command input by user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param command string input by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Command object corresponding to the command input by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @throws DukeException if command is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new ByeCommand(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new TodoCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else if (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"stats\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return new StatsCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new InvalidCommandDukeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 43
    }
  },
  {
    "path": "src/main/java/StatsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for stats command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    StatsCommand (String commandDesc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Which include total tasks, total done tasks, number of each type of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * and number of each type of tasks that are completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Number of tasks in total: \" + tasks.taskList.size() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of Deadline tasks: \" + tasks.getNumDeadline() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of Event tasks: \" + tasks.getNumEvent() + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of Todo tasks: \" + tasks.getNumTodo() + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of [Done] tasks: \" + (tasks.getNumDoneDeadline() + tasks.getNumDoneEvent()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                + tasks.getNumDoneTodo()) + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of [Done] Deadline tasks: \" + tasks.getNumDoneDeadline() + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of [Done] Event tasks: \" + tasks.getNumDoneEvent() + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Number of [Done] Todo tasks: \" + tasks.getNumDoneTodo() + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 44
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class to deal with writing and loading from hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.filePath \u003d System.getProperty(\"user.dir\") + filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns an ArrayList containing the tasks loaded from hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return ArrayList containing the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @throws DukeException if file not found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (dataFile.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            Scanner fileReader \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                fileReader \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new FileNotFoundDukeException(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Load the data from hard disk and create the taskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String readNewLine \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String[] arrayInput \u003d readNewLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                if (arrayInput[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Todo newTodo \u003d new Todo(arrayInput[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newTodo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } else if (arrayInput[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(arrayInput[2], arrayInput[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newDeadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    Event newEvent \u003d new Event(arrayInput[2], arrayInput[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.add(newEvent);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //If tasks is done, mark as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                if (arrayInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    taskList.get(taskList.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new FileNotFoundDukeException(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Appends string to file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param filePath String representing the filepath to append to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param textToAppend String to append to file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Deletes specific line from file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param currentDirectory current directory."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param line String to delete to file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void deleteFromFile(String currentDirectory, String line) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File inputFile \u003d new File(currentDirectory + \"/data/tasks.txt\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File tempFile \u003d new File(currentDirectory + \"/data/temp.txt\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!trimmedLine.equals(line)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(currentLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isDeleted \u003d inputFile.delete();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assert isDeleted : \"tempFile should be deleted\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isRenamed \u003d tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assert isRenamed : \"file should be renamed\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Edits specific line from file."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param currentDirectory current directory."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param line String to edit in file."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void editsFile(String currentDirectory, String line) throws IOException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File inputFile \u003d new File(currentDirectory + \"/data/tasks.txt\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File tempFile \u003d new File(currentDirectory + \"/data/temp.txt\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!trimmedLine.equals(line)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(currentLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String newLine \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                String[] splittedParts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                for (int j \u003d 0; j \u003c splittedParts.length; j++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    if (j !\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d \"|\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    if (j \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d \" 1 \";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        newLine +\u003d splittedParts[j];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                writer.write(newLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isDeleted \u003d inputFile.delete();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assert isDeleted : \"tempFile should be deleted\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        boolean isRenamed \u003d tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assert isRenamed : \"file should be renamed\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 153
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns status icon of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return 1 if task is done, else 0."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Changes boolean isDone to true if task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 50
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class which keeps track of the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Empty Constructor which creates a new file if file does not exist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public TaskList() throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File parent \u003d new File(currentDirectory + \"/data/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        File newFile \u003d new File(parent, \"/tasks.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        if (parent.mkdirs()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            boolean isCreated \u003d newFile.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            assert isCreated : \"tasks.txt file should be created\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Constructor which loads list of tasks from hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string which contains the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String containing list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String displayTaskList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numCommands \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i : taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            numCommands +\u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            output +\u003d (numCommands + \".\" + i + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Adds a Todo task to tasklist."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newTodo Todo task to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void addToDo(Todo newTodo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Adds a Deadline task to tasklist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newDeadline Dateline task to be added."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void addDeadline(Deadline newDeadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Adds a Event task to tasklist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newEvent Event task to be added."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void addEvent(Event newEvent) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Deletes a task from tasklist."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param taskNumber Number of task to be deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Finds a task from tasklist."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param taskName task to be found."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be output."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String findTasks(String taskName) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numCommands \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i : taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            numCommands +\u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i.description.toLowerCase().contains(taskName.toLowerCase())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                output +\u003d (numCommands + \".\" + i + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of Deadline tasks (both done or not) in Tasklist."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of Deadline tasks"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumDeadline () {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numDeadline \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Deadline) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numDeadline++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numDeadline;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of Event tasks (both done or not) in Tasklist."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of Event tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumEvent () {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numEvent \u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Event) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numEvent++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numEvent;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of Todo tasks (both done or not) in Tasklist."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of Todo tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumTodo () {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numTodo \u003d 0;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Todo) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numTodo++;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numTodo;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of done Deadline tasks in Tasklist."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of done Deadline tasks"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumDoneDeadline () {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numDoneDeadline \u003d 0;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Deadline \u0026\u0026 i.isDone) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numDoneDeadline++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numDoneDeadline;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of done Event tasks in Tasklist."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of done Event tasks"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumDoneEvent () {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numDoneEvent \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Event \u0026\u0026 i.isDone) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numDoneEvent++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numDoneEvent;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns number of done Todo tasks in Tasklist."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return number of done Todo tasks"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    int getNumDoneTodo () {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        int numDoneTodo \u003d 0;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (i instanceof Todo \u0026\u0026 i.isDone) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                numDoneTodo++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return numDoneTodo;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 195
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for todo tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for task display."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return Display string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns string for file writing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return String to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String stringForAppend() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"T | \" + super.getStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 31
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class for command dealing with additions of new todo tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    TodoCommand(String commandDesc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(commandDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a boolean to indicate whether the command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return false as command is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Returns a string response by Quack when the command is executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param storage Storage to save the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return string to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //Check if description is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (!commandDesc.substring(5).equals((\"\"))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                Todo newTodo \u003d new Todo(commandDesc.substring(5));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                storage.appendToFile(System.getProperty(\"user.dir\") + \"/data/tasks.txt\", newTodo.stringForAppend());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                tasks.addToDo(newTodo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                return getOutput(tasks, newTodo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                throw new EmptyDescDukeException(\"todo\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            throw new EmptyDescDukeException(\"todo\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * Forms the output string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param tasks TaskList containing the tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @param newTodo new Todo to be added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     * @return output string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    private String getOutput(TaskList tasks, Todo newTodo) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d (newTodo + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        output +\u003d \"Now you have \" + tasks.taskList.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 60
    }
  },
  {
    "path": "src/main/java/WrongDateFormatDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * This is a class of exception where the date supplied is not in the dd/MM/yyyy HHmm format."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": " * @author Choong Yong Xin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class WrongDateFormatDukeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public WrongDateFormatDukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(\"OOPS!!! The date is of the wrong format.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "choongyx": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: gold;\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: ECEFFF;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "choongyx": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Deadline test \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            test \u003d new Deadline(\"Return book\", \"12/12/2019 1200\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        } catch (WrongDateFormatDukeException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[D][\" + \"0\" + \"] Return book (by: 12/12/2019 1200)\", test.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"D | \" + \"0\" + \" | Return book | 12/12/2019 1200\", test.stringForAppend());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 17
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Event test \u003d new Event(\"Project meeting\", \"12/12/2019 1200\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[E][\" + \"0\" + \"] Project meeting (at: 12/12/2019 1200)\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"E | \" + \"0\" + \" | Project meeting | 12/12/2019 1200\", test.stringForAppend());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 12
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Todo test \u003d new Todo(\"Read book\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"[T][\" + \"0\" + \"] Read book\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        assertEquals(\"T | \" + \"0\" + \" | Read book\", test.stringForAppend());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 12
    }
  }
]
