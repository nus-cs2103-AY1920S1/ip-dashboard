[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "group \u0027jxd.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 10,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.by \u003d Task.parseDate(by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[D]\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            super.toString() +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \" (by: \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Task.stringifyDate(by) +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.setPath(path);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            tasks \u003d new TaskList(Storage.loadTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Entry point for program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"|  _ \\\\ _   _| | _____ \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"| | | | | | | |/ / _ \\\\\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"| |_| | |_| |   \u003c  __/\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        new Duke(\"tasks.dmp\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 31,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.at \u003d Task.parseDate(at);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[E]\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            super.toString() +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \" (at: \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Task.stringifyDate(at) +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Handles and parses text commands input by user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param in The input from user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param sc Scanner object from UI class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return false signals that user wants to quit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static boolean handleCommand(String in, Scanner sc)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        switch (in) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                System.out.println(\"Bye!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                TaskList.printTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    Task t \u003d TaskList.get(sc.nextInt());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    t.markDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        String.format("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                            \"Nice! I\u0027ve marked this task as done:\\n  %s\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                            t.toString()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                TaskList.removeTask(sc.nextInt());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    String details \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    if (details.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException(\"Todo name cannot be empty!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    TaskList.addTask(new ToDo(details));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    String[] details \u003d sc.nextLine().trim().split(\" /by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        TaskList.addTask(new Deadline(details[0], details[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                            \"Too few details for deadline!\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    String[] details \u003d sc.nextLine().trim().split(\" /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        TaskList.addTask(new Event(details[0], details[1]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException(\"Too few details for event!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                String s \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                System.out.println(\"Here are matching tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                TaskList.printTasks(TaskList.query(s));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                throw new DukeException(\"Unknown command \" + in);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 77
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static String path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    * Sets the path to load and save from."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    * @param path The path to load and save from."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void setPath(String path) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.path \u003d path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    * Save tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    * @param storage The list of tasks to store."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void saveTasks(ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FileOutputStream fs \u003d new FileOutputStream(path);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fs);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            oos.writeObject(storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            // Either FileNotFoundException or IOException which should not occur"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(\"Can\u0027t save! \" + e.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Loads tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The loaded list, it will be empty if there is a read failure."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FileInputStream fs \u003d new FileInputStream(path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fs);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ArrayList\u003cTask\u003e res \u003d (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            // Either FileNotFoundException or IOException which should not occur"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            DukeException de \u003d new DukeException(\"Can\u0027t load file!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            de.initCause(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            throw de;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 52
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the status icon for the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return String of either a tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Parses string date into Date object according to our format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param s Input string to be parsed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The parsed Date object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected static Date parseDate(String s) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            return parser.parse(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                \"Your date needs to be in dd/mm/yyyy hhmm format!\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return new Date();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Converts Date object into string of our format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param d The Date object in question."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The string representation in our format."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected static String stringifyDate(Date d) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"dd MMM yyyy, hh:mm aaa\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static ArrayList\u003cTask\u003e storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Creates empty task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Creates list with existing list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the 1-indexed i-th task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param i The i-th task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static Task get(int i) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return storage.get(i - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Prints nice text about how many tasks are in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static void printStorageSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"Now you have \" + storage.size() + \" tasks in your list.\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void printTasks(ArrayList\u003cTask\u003e a) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d a.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Task t \u003d a.get(i - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "          System.out.println(String.format(\"%d. %s\", i, t.toString()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Prints out all the tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void printTasks() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d storage.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Task t \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(String.format(\"%d. %s\", i, t.toString()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void addTask(Task t) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + t.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.saveTasks(storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        printStorageSize();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Removes the 1-indexed i-th task from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param the i-th task to remove."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void removeTask(int i) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Task t \u003d storage.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            String.format(\"Noted. I\u0027ve removed this task:\\n  %s\", t.toString())"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage.remove(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        // Storage.saveTasks(storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        // needed?"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        printStorageSize();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static ArrayList\u003cTask\u003e query(String s) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        for (Task t : storage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            if (t.getDesc().contains(s)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                res.add(t);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 92
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 11
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Shows error about why file cannot be read."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void showLoadingError(Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println(e.getCause());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Main event loop."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        boolean status \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String in;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        while (status) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                in \u003d sc.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                break; // input stream has ended."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                status \u003d Parser.handleCommand(in, sc);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 37
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void taskListGet_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Task t \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        TaskList tl \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        System.out.println(TaskList.get(1).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void missingFile_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Duke d \u003d new Duke(\"data/notexist/asd.dmp\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                \"java.io.FileNotFoundException: data/notexist/asd.tmp (No such file or directory)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                e.getMessage()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "asd"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "podocarp": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ -e \"./tasks.dmp\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    rm ./tasks.dmp"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "podocarp": 38
    }
  }
]
