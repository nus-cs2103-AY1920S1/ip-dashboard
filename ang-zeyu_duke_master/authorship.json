[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "import DukeTask.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public static String horizontalLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private enum Input {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        list,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        bye,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        done,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        delete,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        todo,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        deadline,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        String greetingMsg \u003d Duke.horizontalLine"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            + \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            + Duke.horizontalLine;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(greetingMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        String[] inputs;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        mainLoop:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                inputs \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                System.out.print(Duke.horizontalLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                if (inputs.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    Input firstWord;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            firstWord \u003d Input.valueOf(inputs[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            throw new DukeInvalidCommandException("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                \" \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    } catch (DukeInvalidCommandException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        displayDukeException(ex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    switch (firstWord) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case bye:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                handleBye(inputs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                break mainLoop;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case list:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                handleList(tasks, inputs);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case done:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                setTaskDone(tasks, inputs);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case delete:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                deleteTask(tasks, inputs);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case todo:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                String description \u003d DukeUtil.concatStrings(inputs, \" \", 1, inputs.length - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                validateTaskDescription(description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                addAndPrintTask(tasks, new TodoTask(description));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case deadline:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                int byIndex \u003d DukeUtil.getIndexOf(inputs, \"/by\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                if (byIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    String description \u003d DukeUtil.concatStrings(inputs, \" \", 1, byIndex - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    String timing \u003d DukeUtil.concatStrings(inputs, \" \", byIndex + 1, inputs.length - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    validateTaskDescription(description);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    validateTaskTiming(timing);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    addAndPrintTask(tasks, new DeadlineTask(description, timing));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                        \"Missing /by delimiter for deadline command\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                        \" \\u2639 OOPS!!! I dont know what is your deadline!\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                            + \" You should add a deadline with\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                            + \" \\\u0027deadline \u003cdescription\u003e /by \u003ctiming\u003e\\\u0027\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                        );"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        case event:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                int atIndex \u003d DukeUtil.getIndexOf(inputs, \"/at\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                if (atIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    String description \u003d DukeUtil.concatStrings(inputs, \" \", 1, atIndex - 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    String timing \u003d DukeUtil.concatStrings(inputs, \" \", atIndex + 1, inputs.length - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    validateTaskDescription(description);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    validateTaskTiming(timing);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    addAndPrintTask(tasks, new EventTask(description, timing));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                    throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                            \"Missing /at delimiter for event command\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                            \" \\u2639 OOPS!!! I dont know what is your event timing!\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                                + \" You should add a time with\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                                + \" \\\u0027event \u003cdescription\u003e /at \u003ctime\u003e\\\u0027\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                        );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            } catch (DukeInvalidArgumentException ex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                                displayDukeException(ex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                            //covered in try catch above with enums"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void handleBye(String[] inputs) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"Encountered extraneous arguments after bye command\","
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! There shouldn\u0027t be anything following \u0027bye\u0027,\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    + \" are you sure you wanted to exit?\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void handleList(ArrayList\u003cTask\u003e tasks, String[] inputs)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \"Encountered extraneous arguments after list command\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be anything following \u0027list\u0027,\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                        + \" did you meant to do something else?\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            );"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        printTaskArray(tasks);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void printTaskArray(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            System.out.printf(\" %d.%s\\n\", taskIndex, task.getStatusText());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            taskIndex++;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void setTaskDone(ArrayList\u003cTask\u003e tasks, String[] inputs) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            if (inputs.length \u003e 2) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \"Encountered extraneous arguments after done command\","
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be so many arguments!\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            Task task \u003d tasks.get(--taskIndex);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \"User specified task is already marked as done\","
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \" \\u2639 OOPS!!! The task you gave me was already marked as done!\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            printTaskDone(task);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"Could not parse argument supplied into a list index\","
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t a valid number,\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    + \" or you didn\u0027t give me one at all!\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException ex) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"User number supplied was out of list bounds\","
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t within your\\n\" + \" current list!\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            System.out.printf(\"   %s\\n\", task.getStatusText());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] inputs)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            if (inputs.length \u003e 2) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \"Encountered extraneous arguments after delete command\","
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    \" \\u2639 OOPS!!! There shouldn\u0027t be so many arguments!\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            Task task \u003d tasks.remove(--taskIndex);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            printTaskDeleted(task, tasks.size());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"Could not parse argument supplied into a list index\","
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t a valid number,\\n\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                    + \" or you didn\u0027t give me one at all!\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException ex) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"User number supplied was out of list bounds\","
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The task number you gave me wasn\u0027t within your\\n\" + \" current list!\""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void printTaskDeleted(Task task, int finalSize) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.printf(\"   %s\\n\", task.getStatusText());"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.printf(\" Now you have %d tasks in the list.\\n\", finalSize);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void validateTaskDescription(String description)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"User specified description of task is empty\","
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The description of a task cannot be empty.\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    //only performs basic empty timing validation for now since timings are to be treated"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    //as strings as stated"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void validateTaskTiming(String timing)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (timing.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            throw new DukeInvalidArgumentException("
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \"User specified timing of task is empty\","
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                \" \\u2639 OOPS!!! The timing cannot be empty.\""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                );"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void addAndPrintTask(ArrayList\u003cTask\u003e tasks, Task task)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(\"   \" + task.getStatusText());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.printf(\" Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    private static void displayDukeException(DukeExceptions ex) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(ex.getDisplayMsg());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        System.out.println(Duke.horizontalLine);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 312,
      "Jeffry Lum": 1,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    String displayMsg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    DukeExceptions(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    DukeExceptions(String message, String displayMsg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this.displayMsg \u003d displayMsg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public String getDisplayMsg() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return this.displayMsg;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 16
    }
  },
  {
    "path": "src/main/java/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class DukeInvalidArgumentException extends DukeExceptions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public DukeInvalidArgumentException(String displayMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(\"Invalid user arguments to command inputted\", displayMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public DukeInvalidArgumentException(String errorMsg, String displayMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(errorMsg, displayMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 9
    }
  },
  {
    "path": "src/main/java/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class DukeInvalidCommandException extends DukeExceptions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public DukeInvalidCommandException(String displayMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(\"Invalid user command inputted\", displayMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 5
    }
  },
  {
    "path": "src/main/java/DukeTask/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "package DukeTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public DeadlineTask(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return String.format(\"[D][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                this.description,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                this.timing);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 14
    }
  },
  {
    "path": "src/main/java/DukeTask/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "package DukeTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public EventTask(String description, String timing) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(description, timing);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                this.description,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                this.timing);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 14
    }
  },
  {
    "path": "src/main/java/DukeTask/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "package DukeTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    String description, timing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    Task(String description, String timing) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    //setDone so that if the user accidentally marks something to done, it can be undone"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    abstract public String getStatusText();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 31
    }
  },
  {
    "path": "src/main/java/DukeTask/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "package DukeTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public String getStatusText() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 11
    }
  },
  {
    "path": "src/main/java/DukeUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "public class DukeUtil {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public static String concatStrings(String[] strings, String delimiter, int from, int to) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        for (int i \u003d from; i \u003c to; i++) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            output.append(strings[i]);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            output.append(delimiter);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        if (to \u003e\u003d from) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            output.append(strings[to]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    public static int getIndexOf(String[] strings, String pattern) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        for (int i \u003d 0; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            if (strings[i].equals(pattern)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list list list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "a very invalid command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "bye bye"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "event /at 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "deadline /by sunday 2359"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "deadline submit report /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "event tutorial /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "event tutorial /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "deadline submit report /by Fri 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "todo just a todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "todo another todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "event cs2103 lecture /at Fri 4-6pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang Ze Yu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Ang Ze Yu": 34
    }
  }
]
