[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    mainClassName \u003d \"duke.task.Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 42,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Duke is a personal chatbot that allows you to manage your todo list, along with keeping track of deadlines and events."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Adding tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "You can add 3 types of tasks into Duke, namely:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- ToDo: For any tasks that needs to be done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- Deadline: For any tasks with a specific deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- Event: For any appointments with a given starting and ending time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Note: Duke prevents adding tasks that have the exact same description and times."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "#### Adding ToDo: `todo [DESCRIPTION]`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This adds a new ToDo into the database with the given description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `todo Prepare for project meeting`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `todo Submit user guide`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "#### Adding Deadline: `deadline [DESCRIPTION] /by [DEADLINE]`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This adds a new task with a deadline into the database with the given description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Note: The `[DEADLINE]` must be given in the format `DD/MM/YYYY HHMM`."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `deadline Prepare project summary /by 06/06/2019 0000`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `deadline Return book /by 20/08/2019 2200`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "#### Adding Event: `event [DESCRIPTION] /at [START] - [END]`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This adds a new appointment with a given description, starting and ending time into the database."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Note: The `[START]` AND `[END]` times must be given in the format `DD/MM/YYYY HHMM`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `event Project meeting /at 15/06/2019 1200 - 15/06/2019 1400`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `event Jay Chou concert /at 20/06/2019 1900 - 20/06/2019 2200`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Marking tasks as done: `done [ID]`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This marks the task with the given ID as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `done 2`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Deleting tasks: `delete [ID]`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This deletes the task with the given ID from the database."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `delete 2`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Finding tasks: `find [KEYWORD]`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This finds any task with the given keyword in the description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `find book`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "- `find project meeting`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This lists all the tasks that are currently present in the database."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "This exits the program and saves the current tasks list to the hard disk."
      }
    ],
    "authorContributionMap": {
      "dcshzj": 51,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getFileLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return super.getFileLine() + \" | \" + this.by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function compares between two Deadline tasks by their description and then deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param other The other Deadline task to compare to."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (!this.getType().equals(other.getType())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Deadline comp \u003d (Deadline) other;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (this.description.compareTo(comp.description) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.by.compareTo(comp.by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.description.compareTo(comp.description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 49
    }
  },
  {
    "path": "src/main/java/duke/task/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The constructor function for the DialogBox class, which handles the display of the dialog box component in GUI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param text The text to display for the message within the dialog box."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param img The image to show beside the message within the dialog box."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function generates the DialogBox object given the text string and the image to use."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param text The text message to display in the dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param img The image to use beside the text message in the dialog box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return DialogBox"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * Constructor function."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Ui.showLoadingError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The main function to execute the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Ui.printHello();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                this.handleInput(next);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                Ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The main function to execute the program in GUI mode."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param stage The stage to display content in."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // Scroll down to the end every time dialogContainer\u0027s height changes"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        //     handleUserInput();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        //     handleUserInput();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // });"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function retrieves the response from Duke based on the user\u0027s input."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The user\u0027s input from the chatbot."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String with the response text."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return handleInput(input);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return Ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The main entry point to the program."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function does basic handling of the user\u0027s input and pass on the arguments to Parser."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param next The next input by the user."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @throws DukeException When a program-specific exception has occurred."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String handleInput(String next) throws DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return Ui.printMessage(Parser.handleList(this.tasks));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Task task \u003d Parser.handleDone(this.tasks, next);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            this.storage.save(this.tasks);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.ui.printDone(task);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Task task \u003d Parser.handleDelete(this.tasks, next);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            this.storage.save(this.tasks);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.ui.printDelete(task, this.tasks.getTasks().size());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.ui.printFind(Parser.handleFind(this.tasks, next));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String str \u003d Ui.printBye();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Task task \u003d Parser.handleItem(tasks, next);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            this.storage.save(this.tasks);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                return Ui.printMessage(\"This task already exists, please try again with a different description!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.ui.printAdd(task, (this.tasks.getTasks().size()));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 210,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message); // Emoji for sad face ☹"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected Date from;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected Date to;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The constructor for the Event type task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param from The date and time that the event starts."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param to The date and time that the event ends."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Event(String description, Date from, Date to) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.from \u003d from;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.to \u003d to;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getFileLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return super.getFileLine() + \" | \" + this.from + \" - \" + this.to;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.from + \" - \" + this.to + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function compares between two Event tasks by their description, from date and then the to date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param other The other Event task to compare to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (!this.getType().equals(other.getType())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Event comp \u003d (Event) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (this.description.compareTo(comp.description) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (this.from.compareTo(comp.from) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                return this.to.compareTo(comp.to);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                return this.from.compareTo(comp.from);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return this.description.compareTo(comp.description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 30
    }
  },
  {
    "path": "src/main/java/duke/task/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.printHello(), dukeImage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function parses the date given by the user in the format \"dd/Mm/yyyy HHmm\"."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input given by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Date getDateFromUser(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return parseDate(input, \"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function parses the date given in the storage file in the format \"EEE MMM dd HH:mm:ss Z yyyy\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The date from the storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Date getDateFromFile(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return parseDate(input, \"EEE MMM dd HH:mm:ss Z yyyy\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function parses the date given in the input according to the pattern given."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input date to parse."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param pattern The pattern to use to parse the input date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Date parseDate(String input, String pattern) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            date \u003d new SimpleDateFormat(pattern).parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function parses a line in the storage file and returns a Task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The line in the storage file to parse."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @throws DukeException When the storage file is incorrectly formatted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Task getTaskFromLine(String input) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        char type \u003d input.charAt(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String[] parts \u003d input.split(\"\\\\Q | \\\\E\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Task output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output \u003d new Todo(parts[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output \u003d new Deadline(parts[2], getDateFromFile(parts[3]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] dates \u003d parts[3].split(\" - \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output \u003d new Event(parts[2], getDateFromFile(dates[0]), getDateFromFile(dates[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (parts[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output.setDone(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function handles the \"list\" command by the user and returns all tasks in a human-readable format."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The list of tasks in the form of a TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String handleList(TaskList tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        int size \u003d tasks.getTasks().size();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(\"There are no tasks in the database.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(\"Here are the list of tasks that you have:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(i + 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(tasks.get(i));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (sb.length() \u003e 0 \u0026\u0026 sb.charAt(sb.length() - 1) \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function handles the \"done\" command by the user and marks a particular task as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The list of tasks in the form of a TaskList."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input given by the user and should contain the task ID to mark as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Task handleDone(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String[] parts \u003d input.split(\" \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        int num \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Task task \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function handles the \"delete\" command by the user and deletes a particular task from the TaskList."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The list of tasks in the form of a TaskList."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input given by the user and should contain the task ID to delete."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Task handleDelete(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String[] parts \u003d input.split(\" \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        int num \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return tasks.remove(num - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function handles the \"find\" command by the user and searches for the given keyword in the TaskList."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The TaskList to find the tasks from."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input given by the user and should contain the search keyword."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String handleFind(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String[] parts \u003d input.split(\" \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (tasks.get(i).getDescription().contains(parts[1])) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                arr.add(tasks.get(i));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return handleList(new TaskList(arr));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function handles all other additions of new task objects."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The list of tasks in the form of a TaskList."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param input The input given by the user and should contain the other details needed for a particular Task."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @throws DukeException When the user\u0027s input is incorrectly formatted or have missing elements."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static Task handleItem(TaskList tasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        boolean toAdd \u003d true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                task \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] parts \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            task \u003d new Deadline(parts[0].substring(9), getDateFromUser(parts[1]));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] parts \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] fromTo \u003d parts[1].split(\" - \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            task \u003d new Event(parts[0].substring(6), getDateFromUser(fromTo[0]), getDateFromUser(fromTo[1]));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (task.getType().equals(tasks.get(i).getType()) \u0026\u0026 task.compareTo(tasks.get(i)) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                // If we encounter a duplicate, we do not add the task"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                toAdd \u003d false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // The task created should not be done yet"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        assert !task.isDone() : \"Tasks that are just created should not be marked as done\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (toAdd) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 203
    }
  },
  {
    "path": "src/main/java/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private File fileData;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private Scanner fileScanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The constructor method for the Storage class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param filePath The path to the file for storing the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            this.fileData \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (!this.fileData.getParentFile().exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                this.fileData.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (!this.fileData.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                this.fileData.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            this.fileScanner \u003d new Scanner(this.fileData);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function loads the data stored in the storage file and puts it into an ArrayList of Tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @throws DukeException When the line in the storage file is incorrectly formatted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        while (this.fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            tasks.add(Parser.getTaskFromLine(this.fileScanner.nextLine()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.fileScanner.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function saves the tasks into the storage file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param tasks The TaskList with all the tasks to store in the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.fileData, false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(task.getFileLine());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 82
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"U\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // Return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // Either a tick or a cross symbol"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function puts the content of the Task into a format suitable for storing into a file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getFileLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(this.getType());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(\" | \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(\"1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.append(\"0\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(\" | \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(this.description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.description.compareTo(other.description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 65
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    private int counter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.counter \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.counter \u003d tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Task remove(int id) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.tasks.remove(id);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.tasks.get(id);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * The constructor for this class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @throws DukeException If the description is missing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String printHello() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String printBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String printDone(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(output);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out the confirmation message after a successful deletion."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param task The Task deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param counter The number of tasks after deletion."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String printDelete(Task task, int counter) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task:\\n  \" + task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        output +\u003d \"\\nNow you have \" + counter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(output);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out the confirmation message after a successful addition."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param task The Task added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param counter The number of tasks after addition."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String printAdd(Task task, int counter) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n  \" + task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        output +\u003d \"\\nNow you have \" + counter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out the list of tasks that correspond to the search term."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param results The result of the search."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String printFind(String results) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sb.append(results);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (sb.charAt(sb.length() - 1) \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printMessage(sb.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out the given message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param message The message to print."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String printMessage(String message) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out the given error message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @param message The exception message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String printError(String message) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        System.err.println(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     * This function prints out an error message when an error occurred during the loading of the storage file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static String showLoadingError() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return printError(\"An error occurred with loading the input file, using an empty one instead.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 89
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.task.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void testGetDateFromFile() throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String date \u003d \"Mon Sep 02 16:00:00 SGT 2019\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Date expected \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\").parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        assertEquals(expected, Parser.getDateFromFile(date));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void testGetDateFromUser() throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String date \u003d \"01/09/2019 0000\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Date expected \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        assertEquals(expected, Parser.getDateFromUser(date));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 25
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void testAdd() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        tasklist.add(new Todo(\"Test\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        assertEquals(new Todo(\"Test\").getDescription(), tasklist.get(0).getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "deadline return book /by 06/06/2019 0000"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "event project meeting /at 06/08/2019 1400 - 06/08/2019 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "deadline return book /by 01/09/2019 0000"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "event project meeting /at 02/09/2019 1400 - 02/09/2019 1600"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "find book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "find somerandomword"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 15
    }
  },
  {
    "path": "text-ui-test/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [D][✘] return book (by: Thu Jun 06 00:00:00 SGT 2019)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [E][✘] project meeting (at: Tue Aug 06 14:00:00 SGT 2019 - Tue Aug 06 16:00:00 SGT 2019)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "2.[D][✘] return book (by: Thu Jun 06 00:00:00 SGT 2019)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "3.[E][✘] project meeting (at: Tue Aug 06 14:00:00 SGT 2019 - Tue Aug 06 16:00:00 SGT 2019)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [D][✘] return book (by: Sun Sep 01 00:00:00 SGT 2019)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [E][✘] project meeting (at: Mon Sep 02 14:00:00 SGT 2019 - Mon Sep 02 16:00:00 SGT 2019)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "  [E][✘] project meeting (at: Tue Aug 06 14:00:00 SGT 2019 - Tue Aug 06 16:00:00 SGT 2019)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "2.[D][✘] return book (by: Thu Jun 06 00:00:00 SGT 2019)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "3.[T][✓] join sports club"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "4.[T][✘] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "5.[D][✘] return book (by: Sun Sep 01 00:00:00 SGT 2019)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "6.[E][✘] project meeting (at: Mon Sep 02 14:00:00 SGT 2019 - Mon Sep 02 16:00:00 SGT 2019)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 42
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# delete remnant tasks from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ -e \"../data/tasks.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    rm ../data/tasks.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "java -classpath ../bin duke.task.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 40
    }
  }
]
