[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    compile fileTree(dir: \u0027lib\u0027, include: [\u0027*.jar\u0027])"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    mainClassName \u003d \"q.main.Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveBaseName \u003d \"q\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 40,
      "-": 18
    }
  },
  {
    "path": "data/archive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 1 | dance"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | fly"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 1 | run"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | walk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "D | 0 | hi | 20/09/2019 2223"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "D | 0 | dance | 20/09/2019 2223"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "D | 0 | iP | 19/09/2019 2223"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "D | 0 | take antibiotics | 16/09/2019 2000"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "E | 0 | We Will Dance | 18/09/2019 1700"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | dance"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 1 | fly"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "E | 0 | flying | 23/09/2019 1634"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | nfaoiwa"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "T | 0 | this will disappear"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Provides a description of all functions that can be used and how to use them. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "help - This command. You couldn\u0027t figure that out?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "list - Lists all your existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "find \u003cdescription\u003e - Finds a task which contains the description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "todo \u003cdescription\u003e - Creates a to-do item with a description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "event \u003cdescription\u003e /at \u003cdate and time\u003e - Creates an event with a description at a certain time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "deadline \u003cdescription\u003e /by \u003cdate and time\u003e - Creates a deadline with a description to be completed by a certain time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Examples of \u003cdate and time\u003e: tomorrow morning, next Mon night, two Tuesdays from now."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "delete \u003cindex\u003e - Deletes the task of that index."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "done \u003cindex\u003e - Completes the task of that index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "archive - Archives all tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "view - View all archived tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "bye - Exits the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### List "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Lists all existing tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Fine. I\u0027ll tell you the tasks in your list:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "1.[D][✓] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "2.[E][✘] team meeting (at: 20/09/2019 1930)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3.[T][✘] take the subway"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Searches the description of all tasks and gives a list of tasks containing the search term."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`find sub`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "I guess I\u0027ll give you the matching tasks..."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "1.[D][✓] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "2.[T][✘] take the subway"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Adds a Todo task. A Todo task has only a description."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`todo take the subway`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Added this:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "[T][✘] take the subway"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3 tasks left. Finish them quickly!"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Adds a Event task. A Event task has a description and the date of the Event. "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`event team meeting next Fri 730 p.m.`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Added this:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "[E][✘] team meeting (at: 20/09/2019 1930)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3 tasks left. Finish them quickly!"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Adds a Deadline task. A Event task has a description and the date of the Deadline. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`deadline submission for iP /by wed 2359`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Added this:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "[D][✘] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3 tasks left. Finish them quickly!"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Deletes a task based on a task number."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`delete 10`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Okay. Got rid of it."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "[D][✘] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "You have 9 tasks left."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Marks a task as done based on a task number."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Took you long enough. It\u0027s done:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "[D][✘] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### Archive"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Removes everything from your current task lists and archives it. "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`archive`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "What you\u0027ve archived is here:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "1.[D][✓] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "2.[E][✘] team meeting (at: 20/09/2019 1930)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3.[T][✘] take the subway"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Afterwards:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "list"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "This is strange, but you have no tasks in your list."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "### View"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Views your archived tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "`view`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "What you\u0027ve archived is here:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "1.[D][✓] submission for iP (by: 18/09/2019 2359)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "2.[E][✘] team meeting (at: 20/09/2019 1930)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "3.[T][✘] take the subway"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 184,
      "-": 12
    }
  },
  {
    "path": "src/main/java/q/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Abstract Command that handles adding."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class AddCommand extends q.command.Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/q/command/ArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles archiving."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ArchiveCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Archives all tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing Tasks that have been archived."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String result \u003d ui.showArchived(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.archive(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 25
    }
  },
  {
    "path": "src/main/java/q/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.QException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Abstract form of the command based on a user\u0027s input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String describing the execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws QException When an error in execution occurs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws QException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 26
    }
  },
  {
    "path": "src/main/java/q/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles adding of a deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a DeadlineCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param by          The due date of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DeadlineCommand(String description, Date by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Adds a Deadline of description and by to tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing the deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showAddTask(deadline, tasks.getSize());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 44
    }
  },
  {
    "path": "src/main/java/q/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.QException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles deletion."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a DeleteCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param taskNumber The index of the task to be deleted, starting from 0."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Deletes the Task of index taskNumber from tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing the deleted task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws QException When there is an error in the deletion."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws QException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task t \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showDeleteTask(t, tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 37
    }
  },
  {
    "path": "src/main/java/q/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles the marking of Tasks as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a DeleteCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param taskNumber The index of the task to be deleted, starting from 0."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Marks the Task at index taskNumber in tasks as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing the Task that was marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws NoSuchTaskError If the task does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task t \u003d tasks.doTask(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showDoneTask(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 39
    }
  },
  {
    "path": "src/main/java/q/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles the adding of an event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an EventCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param at          The date of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public EventCommand(String description, Date at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Adds an Event of description and at to tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showAddTask(event, tasks.getSize());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 44
    }
  },
  {
    "path": "src/main/java/q/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles exiting of the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Checks if this command is an exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Exits the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing bye."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showBye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 33
    }
  },
  {
    "path": "src/main/java/q/command/ExitCommandEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * An exception to be thrown when wanting to exit the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ExitCommandEvent extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 7
    }
  },
  {
    "path": "src/main/java/q/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles finding."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a FindCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param searchTerm The search term."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Finds a list of Tasks containing the searchTerm."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A TaskList of the Tasks containing the searchTerm."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList foundTasks \u003d tasks.find(searchTerm);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return ui.showNoFindTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showFindTaskList(foundTasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 38
    }
  },
  {
    "path": "src/main/java/q/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles help."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Provides a String of help descriptors."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String with help descriptors."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showHelp();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 23
    }
  },
  {
    "path": "src/main/java/q/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles showing the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Shows the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing the list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return ui.showNoTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 26
    }
  },
  {
    "path": "src/main/java/q/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles adding a Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a TodoCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the Todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Adds a Todo of description to tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String representing the Todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showAddTask(todo, tasks.getSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 39
    }
  },
  {
    "path": "src/main/java/q/command/ViewArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.FileLoadError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles viewing of the archive."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class ViewArchiveCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Shows the archive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks   The main TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param ui      The User Interface being used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param storage The Storage being used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing the archive."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws FileLoadError If the archive cannot be loaded."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws FileLoadError {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return ui.showArchived(storage.getArchive());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 24
    }
  },
  {
    "path": "src/main/java/q/error/FileLoadError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * When there is an error in loading the file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class FileLoadError extends QException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a FileLoadError."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public FileLoadError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"There was a problem loading the saved list of tasks.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/q/error/InsufficientArgumentError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * When insufficient arguments are provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class InsufficientArgumentError extends QException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an InsufficientArgumentErro()."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public InsufficientArgumentError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/q/error/MissingKeywordError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * When Keywords are missing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class MissingKeywordError extends QException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Represents keywords in commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public enum Keyword {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        NUMBER, BY, AT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         * Gets a String representing the keyword."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         * @param keyword The keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         * @return A String representing the keyword."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        public static String getKeywordString(Keyword keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case BY:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \" /by \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            case AT:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return \" /at \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a MissingKeywordError."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param keyword The missing Keyword."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public MissingKeywordError(Keyword keyword) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I need the \" + getKeywordString(keyword) + \" to work.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static String getKeywordString(Keyword keyword) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case NUMBER:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return \"number of a task\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case BY:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return \"keyword /by\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case AT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return \"keyword /at\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 52
    }
  },
  {
    "path": "src/main/java/q/error/NoSuchTaskError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * When there is no such task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class NoSuchTaskError extends QException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a NoSuchTaskError."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public NoSuchTaskError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"There is no such task.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/q/error/QException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * An abstract exception for all errors in Q."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class QException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static Random random \u003d new Random();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static final String[] errorStatements \u003d {\"Too bad. \", \"What? \", \"Sorry...? \", \"!!! \", \"Ugh. \", \"So... \","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"You messed up. \", \"You did something wrong. \", \"Nope. \", \"Something\u0027s wrong. \", \"No. \"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public QException(String s) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(errorStatements[random.nextInt(errorStatements.length)] + s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 17
    }
  },
  {
    "path": "src/main/java/q/error/UnknownCommandError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * When there is an unknown Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class UnknownCommandError extends QException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an UnknownCommandError."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public UnknownCommandError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(\"I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 13
    }
  },
  {
    "path": "src/main/java/q/main/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import com.joestelmach.natty.DateGroup;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import com.joestelmach.natty.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.FileLoadError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A parser that converts natural language to date and time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public DateTimeParser() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Parses a natural language string into a date and time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param s A natural language string that represents a date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A Date that was represented by s."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static Date parse(String s) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        List\u003cDateGroup\u003e groups \u003d parser.parse(s);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return groups.get(0).getDates().get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Formats a date as a string in the format dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param d A Date to be formatted as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string in the format dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static String format(Date d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Parses a string in the format dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param s A string in the format dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A Date."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws FileLoadError If the string is not in the right format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static Date parseFromFile(String s) throws FileLoadError {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date date \u003d formatter.parse(s);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new FileLoadError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 57
    }
  },
  {
    "path": "src/main/java/q/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 12
    }
  },
  {
    "path": "src/main/java/q/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.user.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A GUI for Q using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Q defaultQ \u003d new Q(\"data/tasks.txt\", \"data/archive.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Starts the GUI."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param stage The stage for the GUI."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            stage.setTitle(\"Q\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            stage.getIcons().add(new Image(getClass().getResourceAsStream(\"/images/icon.png\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setBindedQ(defaultQ);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 41
    }
  },
  {
    "path": "src/main/java/q/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ArchiveCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ViewArchiveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.QException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.InsufficientArgumentError;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.MissingKeywordError;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.UnknownCommandError;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A parser for converting inputs to Commands."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Parses an input and converts it into a command object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param input A user inputted command String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A command representing the input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws QException When there is error in input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static Command parse(String input) throws QException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String[] currentInputArray \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        switch (currentInputArray[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"archive\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ArchiveCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ViewArchiveCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DoneCommand(checkNumberInput(currentInputArray));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DeleteCommand(checkNumberInput(currentInputArray));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            checkNumberOfArguments(currentInputArray);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new TodoCommand(input.substring(5));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            checkNumberOfArguments(currentInputArray);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] deadlineArr \u003d checkDateInput(input, MissingKeywordError.Keyword.BY, 8);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date deadlineDate \u003d DateTimeParser.parse(deadlineArr[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new DeadlineCommand(deadlineArr[0].substring(8 + 1), deadlineDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            checkNumberOfArguments(currentInputArray);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] eventArr \u003d checkDateInput(input, MissingKeywordError.Keyword.AT, 5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Date eventDate \u003d DateTimeParser.parse(eventArr[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new EventCommand(eventArr[0].substring(5 + 1), eventDate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            checkNumberOfArguments(currentInputArray);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return new FindCommand(currentInputArray[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new UnknownCommandError();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Takes in an input String array and gets the number input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param arr An input String array."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The number input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws MissingKeywordError When there is no number keyword."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static int checkNumberInput(String[] arr) throws MissingKeywordError {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (!arr[1].matches(\"-?\\\\d+\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new MissingKeywordError(MissingKeywordError.Keyword.NUMBER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Helper function for checking number of arguments."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param arr Input array."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws InsufficientArgumentError If insufficient arguments are provided."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static void checkNumberOfArguments(String[] arr) throws InsufficientArgumentError {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Helper function for checking date input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param input         The String input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param keyword       The keyword of the date."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param commandLength The length of the command e.g. 8 for deadline, 5 for event."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String array with description and date."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws MissingKeywordError       If a keyword is missing."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws InsufficientArgumentError If there are missing arguments."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static String[] checkDateInput(String input, MissingKeywordError.Keyword keyword, int commandLength)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throws MissingKeywordError, InsufficientArgumentError {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assert MissingKeywordError.Keyword.getKeywordString(keyword) !\u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (!input.contains(MissingKeywordError.Keyword.getKeywordString(keyword))) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new MissingKeywordError(MissingKeywordError.Keyword.BY);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        String[] arr \u003d input.split(MissingKeywordError.Keyword.getKeywordString(keyword));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (arr.length \u003c 2 || arr[0].length() \u003c commandLength + 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new InsufficientArgumentError();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 122
    }
  },
  {
    "path": "src/main/java/q/main/Q.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ExitCommandEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.QException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.FileLoadError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * The main command center that manages the logic."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Q {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param savePath    Path to save the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param archivePath Path to the task archive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Q(String savePath, String archivePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        storage \u003d new Storage(savePath, archivePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (FileLoadError e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a response based on an input String command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param input A user-inputted command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string of the response to the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws ExitCommandEvent Thrown when there is an exit command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String getResponse(String input) throws ExitCommandEvent {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                throw new ExitCommandEvent();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (QException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            return ui.showError(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 52
    }
  },
  {
    "path": "src/main/java/q/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.FileLoadError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Manages archiving, saving and loading."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String savePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String archivePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param savePath    Path to save the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param archivePath Path to the task archive."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Storage(String savePath, String archivePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.savePath \u003d savePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.archivePath \u003d archivePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Retrieves a list of Tasks from a filepath."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param path String representing the path to get files."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A List of Tasks from the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws FileLoadError When file cannot be loaded."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private ArrayList\u003cTask\u003e fromFile(String path) throws FileLoadError {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String data;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String[] input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            while ((data \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                input \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Todo todo \u003d new Todo(input[2], input[1].equals(\"1\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Deadline deadline \u003d new Deadline(input[2], input[1].equals(\"1\"),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                            DateTimeParser.parseFromFile(input[3]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Event event \u003d new Event(input[2], input[1].equals(\"1\"), DateTimeParser.parseFromFile(input[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    throw new FileLoadError();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new FileLoadError();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Saves a list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Path out \u003d Paths.get(savePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (Files.notExists(out)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                if (!Files.exists(out.getParent())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Files.createDirectories(out.getParent());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                Files.createFile(out);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Files.write(out, tasks.toSaveStringList(), Charset.defaultCharset());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Archives a list of tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks List of tasks to be archived."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void archive(TaskList tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Path out \u003d Paths.get(archivePath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (Files.notExists(out)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                if (!Files.exists(out.getParent())) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    Files.createDirectories(out.getParent());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                Files.createFile(out);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Files.write(out, tasks.toSaveStringList(), Charset.defaultCharset(), StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        save(tasks);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Loads a list of Tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The loaded list of Tasks."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws FileLoadError When the list cannot be loaded."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileLoadError {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return fromFile(savePath);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Retrieves list of Tasks from the archive."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The loaded list of Tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws FileLoadError When the list cannot be loaded."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList getArchive() throws FileLoadError {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return new TaskList(fromFile(archivePath));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 147
    }
  },
  {
    "path": "src/main/java/q/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Represents a list of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a TaskList from a provided list of Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks List of Tasks that the TaskList should hold."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Checks if the TaskList is empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return If the TaskList is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets the size of the TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The size of the TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a List of Strings representing the Tasks in a readable UI format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A List of Strings representing the Tasks in a readable UI format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    ArrayList\u003cString\u003e toUiStringList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(i++);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            result.add(sb.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a List of Strings representing the Tasks in a format for saving."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A List of Strings representing the Tasks in a format for saving."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    ArrayList\u003cString\u003e toSaveStringList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            strings.add(t.toSave());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param taskNumber The index of the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The task that was marked."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws NoSuchTaskError When the task does not exist."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task doTask(int taskNumber) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task doneTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        doneTask.setDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assert (doneTask.isDone());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param taskNumber The index of the task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The task that was deleted"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @throws NoSuchTaskError When the task does not exist."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task deleteTask(int taskNumber) throws NoSuchTaskError {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            throw new NoSuchTaskError();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task deleted \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return deleted;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Adds a new Task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return The task that was added."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assert (tasks.size() \u003e 0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Finds a task containing the search term."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param searchTerm The search term."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A TaskList with the relevant found tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TaskList find(String searchTerm) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            if (t.getDescription().contains(searchTerm)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                foundTasks.add(t);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return new TaskList(foundTasks);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Empties the TaskList."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 146
    }
  },
  {
    "path": "src/main/java/q/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.QException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles User Interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Returns a formatted string for printing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string formatted for printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String print(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return s + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Returns an error string formatted for printing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param d The DukeException that represents the error."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string formatted for printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showError(QException d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(d.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String saying bye."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String saying bye."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"Finally. Good riddance.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing help."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing help."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"Good. You really needed this:\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"help - This command. You couldn\u0027t figure that out?\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"list - Lists all your existing tasks.\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"find \u003cdescription\u003e - Finds a task which contains the description.\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"todo \u003cdescription\u003e - Creates a to-do item with a description.\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"event \u003cdescription\u003e /at \u003cdate and time\u003e -\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                + \" Creates an event with a description at a certain time.\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"deadline \u003cdescription\u003e /by \u003cdate and time\u003e -\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                + \" Creates a deadline with a description to be completed by a certain time.\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"Examples of \u003cdate and time\u003e: tomorrow morning, next Mon night, two Tuesdays from now.\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"delete \u003cindex\u003e - Deletes the task of that index.\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"done \u003cindex\u003e - Completes the task of that index.\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"archive - Archives all tasks.\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"view - View all archived tasks.\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"bye - Exits the program.\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing that there are no tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing that there are no tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showNoTasks() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"This is strange, but you have no tasks in your list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing that no tasks are found."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing that no tasks are found."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showNoFindTasks() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"I don\u0027t see any tasks with that keyword. It\u0027s not my fault.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing the list of Tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks A list of Tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing the list of Tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"Fine. I\u0027ll tell you the tasks in your list:\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (String s : tasks.toUiStringList()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(print(s));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing that a task is done."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param task The task that has been marked as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing that a task is done."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showDoneTask(Task task) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"Took you long enough. It\u0027s done:\") + print(task.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing that a Task is deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param task The task that was deleted."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param size The size of the remaining Task list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing that a Task is deleted."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showDeleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"Okay. Got rid of it.\") + print(task.toString())"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                + print(\"You have \" + size + \" tasks left.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing that a Task is added."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param task The task that was added."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param size The size of the remaining Task list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing that a Task is added."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return print(\"Added this:\") + print(task.toString())"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                + print(size + \" tasks left. Finish them quickly!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing the found tasks."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks The found tasks."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing the found tasks."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showFindTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"I guess I\u0027ll give you the matching tasks...\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (String s : tasks.toUiStringList()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(print(s));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a String showing the archived tasks."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param tasks The archived tasks."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A String showing the archived tasks."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String showArchived(TaskList tasks) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        sb.append(print(\"What you\u0027ve archived is here:\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        for (String s : tasks.toUiStringList()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            sb.append(print(s));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 171
    }
  },
  {
    "path": "src/main/java/q/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * An Deadline Task. Has a description and a date and time of the deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an undone deadline with a description and date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param by          The date and time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a deadline with a description, date, and a doneness."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param isDone      The doneness of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param by          The date and time of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Deadline(String description, boolean isDone, Date by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the task to a string, including the doneness of the deadline, its description, and the date and time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string representing the deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.format(by) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the deadline to an encoded string for saving."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string encoding the deadline for saving."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + DateTimeParser.format(by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 55
    }
  },
  {
    "path": "src/main/java/q/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * An Event Task. Has a description and a date and time of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an undone event with a description and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param at          The date and time of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a event with a description, date, and a doneness."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param isDone      The doneness of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param at          The date and time of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Event(String description, boolean isDone, Date at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the task to a string, including the doneness of the event, its description, and the date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string representing the event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateTimeParser.format(at) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the event to an encoded string for saving."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string encoding the event for saving."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + DateTimeParser.format(at);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 54
    }
  },
  {
    "path": "src/main/java/q/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * An abstract class that represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an undone Task with a description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a Task with a description and a note of if it is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param isDone      Whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a status icon representing the doneness of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A tick or cross symbol representing the doneness of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Checks if the task is done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A boolean representing if the task is done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the task to a string, including the doneness of the task and its description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string representing the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the task to an encoded string for saving."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string encoding the task for saving."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public abstract String toSave();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 76
    }
  },
  {
    "path": "src/main/java/q/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A Todo Task. Has a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs an undone todo with a description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Constructs a todo with a description and a doneness."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param description The description of the todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param isDone      The doneness of the todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the task to a string, including the doneness of the todo and its description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string representing the todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Converts the todo to an encoded string for saving."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A string encoding the todo for saving."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return \"T | \" + (super.isDone ? 1 : 0) + \" | \" + super.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 45
    }
  },
  {
    "path": "src/main/java/q/user/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ExitCommandEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.main.Q;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.animation.PathTransition;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.effect.ColorAdjust;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.shape.CubicCurveTo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.shape.MoveTo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.shape.Path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private StackPane header;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Text headerText;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private static final String[] qStatements \u003d {\"I\u0027m here to help you, or whatever...\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"You can ask for \u0027help\u0027, you know...\", \"Hurry up.\", \"...\", \"Do your work!\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"Stop slacking around.\", \"Why do you have any undone tasks at all?\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"I\u0027m honestly here only for the fish.\", \"I... like the fish you provide.\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"Why do I bother...\", \"You are so slow.\", \"Work, work, work.\", \"Tasks, tasks.\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \"What are you doing...\"};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Q bindedQ;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Random random;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Starts the MainWindow."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        random \u003d new Random();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Binds a Q to the MainWindow."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @param q The Q to be binded."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public void setBindedQ(Q q) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        bindedQ \u003d q;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Q\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * the dialog container. Clears the user input after processing. Adds an animated fish to the screen."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            String response \u003d bindedQ.getResponse(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    new Group(UserBox.getUserDialog(input)),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    new Group(QBox.getQDialog(response))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            animatedFish();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            headerText.setText(getRandomQStatement());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (ExitCommandEvent e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    new Group(UserBox.getUserDialog(\"bye\")),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    new Group(QBox.getQDialog(\"Good riddance.\"))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            new TimedExit();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Gets a random statement for Q to say."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * @return A random statement for Q to say."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private String getRandomQStatement() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return qStatements[random.nextInt(qStatements.length)];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Creates an animated fish on the screen."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private void animatedFish() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        final ImageView fish \u003d new ImageView();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        fish.setImage(new Image(this.getClass().getResourceAsStream(\"/images/fish.png\")));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        fish.setFitHeight(25 + random.nextInt(8));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        fish.setPreserveRatio(true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        ColorAdjust colorAdjust \u003d new ColorAdjust();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        colorAdjust.setHue(0.3 * (0.5 - random.nextDouble()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        fish.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        header.getChildren().add(fish);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Path path \u003d new Path();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        path.getElements().add(new MoveTo(-40, -20 - random.nextDouble() * 100));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        path.getElements().add(new CubicCurveTo(300 + random.nextDouble() * 900,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                0, random.nextDouble() * 800, 120, 50 + random.nextDouble() * 600, 160));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        PathTransition pathTransition \u003d new PathTransition();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setDuration(Duration.millis(random.nextDouble() * 2000 + 1500));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setPath(path);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setNode(fish);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setOrientation(PathTransition.OrientationType.ORTHOGONAL_TO_TANGENT);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setCycleCount(1 + random.nextInt(3));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.play();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        pathTransition.setOnFinished(x -\u003e header.getChildren().remove(fish));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 134
    }
  },
  {
    "path": "src/main/java/q/user/QBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A custom control for Q\u0027s words."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class QBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private QBox(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/QBox.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static QBox getQDialog(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return new QBox(text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 33
    }
  },
  {
    "path": "src/main/java/q/user/TimedExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * Handles the exiting of the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class TimedExit {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    TimerTask exitApp \u003d new TimerTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        public void run() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     * Exits the program in 3 seconds."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public TimedExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        timer.schedule(exitApp, new Date(System.currentTimeMillis() + 3 * 1000));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 27
    }
  },
  {
    "path": "src/main/java/q/user/UserBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " * A custom control for the user\u0027s input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "public class UserBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    private UserBox(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserBox.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    public static UserBox getUserDialog(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        return new UserBox(text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 33
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"990\" prefWidth\u003d\"990.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 15
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"650.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.201\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fx:controller\u003d\"q.user.MainWindow\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cURL value\u003d\"@styles.css\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cStackPane fx:id\u003d\"header\" alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"200\" prefWidth\u003d\"1000\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cVBox styleClass\u003d\"header\" prefHeight\u003d\"200\" prefWidth\u003d\"1000\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cVBox prefHeight\u003d\"120\" prefWidth\u003d\"1000\" alignment\u003d\"BOTTOM_RIGHT\" spacing\u003d\"10\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003cHBox prefHeight\u003d\"50\" prefWidth\u003d\"1000\" alignment\u003d\"BOTTOM_RIGHT\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    \u003cText fx:id\u003d\"headerText\" styleClass\u003d\"header-text\" text\u003d\"I\u0027m Q. Yes...?\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    \u003cRegion prefHeight\u003d\"50\" prefWidth\u003d\"50\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cHBox prefHeight\u003d\"50\" prefWidth\u003d\"1000\" alignment\u003d\"CENTER\" spacing\u003d\"10\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                           prefWidth\u003d\"850.0\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                           styleClass\u003d\"input\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" AnchorPane.topAnchor\u003d\"50.0\" AnchorPane.rightAnchor\u003d\"20.0\" maxHeight\u003d\"50.0\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        maxWidth\u003d\"63.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        prefWidth\u003d\"63\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        styleClass\u003d\"sendButton\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                        \u003cFont name\u003d\"Aileron\" size\u003d\"12.0\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                \u003c/Button\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cHBox prefHeight\u003d\"150\" prefWidth\u003d\"150\" maxHeight\u003d\"150\" alignment\u003d\"TOP_LEFT\" mouseTransparent\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cRegion prefWidth\u003d\"50\" prefHeight\u003d\"50\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cButton prefWidth\u003d\"76\" prefHeight\u003d\"125\" styleClass\u003d\"Q\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" AnchorPane.bottomAnchor\u003d\"1.0\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"450.0\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "                prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\" styleClass\u003d\"scroll-bar\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003ccontent\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"450.0\" prefWidth\u003d\"980.0\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003c/content\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 57
    }
  },
  {
    "path": "src/main/resources/view/QBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.Group?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"700\" prefWidth\u003d\"700.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cURL value\u003d\"@styles.css\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"q\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cInsets top\u003d\"10\" left\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 20
    }
  },
  {
    "path": "src/main/resources/view/UserBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import javafx.scene.Group?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"980\" prefWidth\u003d\"980.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cURL value\u003d\"@styles.css\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"user\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            \u003cInsets top\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 20
    }
  },
  {
    "path": "src/test/java/q/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.EventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.command.TodoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.InsufficientArgumentError;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.MissingKeywordError;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.UnknownCommandError;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void parse_correctCommand_success() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"done 2\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"delete 2\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"todo borrow book\") instanceof TodoCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"deadline return book /by 01/02/2019 0123\") instanceof DeadlineCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"event book party /at 3/9/2019 2103\") instanceof EventCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void parse_incorrectCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"todoo\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof UnknownCommandError);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"@@@@@@@@@@@\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof UnknownCommandError);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"todo\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof InsufficientArgumentError);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"deadline /by today or tomorrow\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof InsufficientArgumentError);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            Parser.parse(\"event all the time //at today\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof MissingKeywordError);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 65
    }
  },
  {
    "path": "src/test/java/q/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "package q.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.error.NoSuchTaskError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import q.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertSame;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void isEmpty() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(new TaskList().isEmpty());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertFalse(tasks.isEmpty());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(0, new TaskList().getSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(new Todo(\"test2\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(2, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void doTask_taskExists_success() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertFalse(tasks.addTask(foo).isDone());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.doTask(0).isDone());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.doTask(1).isDone());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void doTask_taskDoesNotExist_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(tasks.doTask(1).isDone());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void deleteTask_taskExists_success() throws Exception {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(foo, tasks.deleteTask(0));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertEquals(bar, tasks.deleteTask(0));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertTrue(tasks.isEmpty());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void deleteTask_taskDoesNotExist_exceptionThrown() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(foo);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.deleteTask(1));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        tasks.addTask(bar);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertEquals(foo, tasks.doTask(2));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "            assertTrue(e instanceof NoSuchTaskError);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yaaanch"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task foo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        Task bar \u003d new Todo(\"test2\", true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertSame(foo, tasks.addTask(foo));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "        assertSame(bar, tasks.addTask(bar));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yaaanch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yaaanch": 107
    }
  }
]
