[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 24,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc, LocalDateTime by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Deadline(String desc, LocalDateTime by, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getDateBy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDateBy(LocalDateTime by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateBy() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    DateTimeFormatter f;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    LocalDateTime startDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    LocalDateTime endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String indent \u003d \"     \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String dataPath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String[] inputs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String[] inputFormatted;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    int output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    int i;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private String[] startEndDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Duke newDuke \u003d new Duke();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        newDuke.run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        f \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        list \u003d Task.loadTasks(dataPath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Output.printIntro();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.line();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                output \u003d processInput(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.line();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } while (output !\u003d 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private int processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        // Exit program"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        switch (inputs[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.byeMsg();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.printList(list);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (inputs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                if (inputs[1].matches(\"(0|[1-9]\\\\d*)\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    i \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    if (i \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        switch (inputs[0]) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            task.setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            Output.doneMsg();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            Output.printTask(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            task \u003d list.remove(i - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            Output.delMsg();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            Output.printTask(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            Output.printListSize(list);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        Task.saveTasks(list, dataPath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    } else throw new DukeException(\"\\u2754 OOPS!!! There is no task at index \" + i + \".\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                } else throw new DukeException(\"\\u2754 OOPS!!! The index of \" + inputs[0] + \" operation must be a positive integer.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            } else throw new DukeException(\"\\u2754 OOPS!!! The index of \" + inputs[0] + \" operation cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                switch (inputs[0]) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Todo(inputs[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    if (inputs[1].contains(\" /by \")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        inputFormatted \u003d inputs[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            dateTime \u003d LocalDateTime.parse(inputFormatted[1], f);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            throw new DukeException(\"/u2754 OOPS!!! The date inputted is not in \u0027DD/MM/YYYY HHmm\u0027 format\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d new Deadline(inputFormatted[0], dateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        throw new DukeException(\"\\u2754 OOPS!!! The due date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    if (inputs[1].contains(\" /at \")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        inputFormatted \u003d inputs[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        startEndDate \u003d inputFormatted[1].split(\" \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        if (startEndDate.length \u003c 4) throw new DukeException(\"/u2754 OOPS!!! The date inputted is not in \u0027DD/MM/YYYY HHmm\u0027 format\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            startDate \u003d LocalDateTime.parse(startEndDate[0] + \" \" + startEndDate[1], f);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            endDate \u003d LocalDateTime.parse(startEndDate[2] + \" \" + startEndDate[3], f);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                            throw new DukeException(\"/u2754 OOPS!!! The date inputted is not in \u0027DD/MM/YYYY HHmm\u0027 format\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        task \u003d new Event(inputFormatted[0], startDate, endDate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        throw new DukeException(\"\\u2754 OOPS!!! The duration of a event cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            } else throw new DukeException(\"\\u2754 OOPS!!! The description of a \" + inputs[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.addMsg();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.printTask(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.printListSize(list);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Task.saveTasks(list, dataPath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"\\u2754 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 129,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DukeException() {};"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime startDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc, LocalDateTime startDate, LocalDateTime endDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Event(String desc, LocalDateTime startDate, LocalDateTime endDate, boolean done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getStartDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setStartDate(LocalDateTime startDate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getEndDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setEndDate(LocalDateTime endDate) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getStartDate() + \" to \" + this.getEndDate() + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 44
    }
  },
  {
    "path": "src/main/java/Output.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Output {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String indent \u003d \"     \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String hiMsg \u003d indent + \"Hello! I\u0027m Duke\" + \"\\n\" + indent + \"What can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String byeMsg \u003d indent + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String addMsg \u003d indent + \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String doneMsg \u003d indent + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String delMsg \u003d indent + \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static String emptyListMsg \u003d indent + \"You have no task in the list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void line() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void hiMsg() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(hiMsg);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void byeMsg() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(byeMsg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void addMsg() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(addMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void doneMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(doneMsg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void delMsg() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(delMsg);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void emptyListMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(emptyListMsg);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void printIntro() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        line();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        hiMsg();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        line();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static \u003cT\u003e void printList(List\u003cT\u003e list) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!list.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            System.out.println(indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            for (T t: list) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                System.out.println(indent + (list.indexOf(t) + 1) + \". \" + t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            emptyListMsg();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static \u003cT\u003e void printListSize(List\u003cT\u003e list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!list.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            System.out.println(indent + \"Now you have \" + list.size() + \" task\" + (list.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            emptyListMsg();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void printTask(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"  \" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void loadingDataMsg() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Loading data from file...\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void noRecordsFoundMsg() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"No Records Found.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void savingDataMsg() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Saving data...\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void nothingToSaveMsg() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Nothing to save.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void errorSavingMsg() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Error saving to file.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void dataSavedMsg() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + \"Data saved successfully.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void loadingSuccessMsg(int size) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + size + \" tasks loaded.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 91
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    static String gap \u003d \"  \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc, boolean done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static void saveTasks(List\u003cTask\u003e tasks, String pathName){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String type, isDone, desc, time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!tasks.isEmpty())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.savingDataMsg();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        else"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.nothingToSaveMsg();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(pathName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                type \u003d t instanceof Todo ? \"T\" : t instanceof Deadline ? \"D\" : \"E\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                isDone \u003d t.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                desc \u003d t.getDesc();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                time \u003d t instanceof Todo ? \"\" :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        t instanceof Deadline ? String.valueOf(((Deadline) t).getDateBy()) :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                                ((Event) t).getStartDate() + gap + ((Event) t).getEndDate();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                fw.write(type + gap + isDone + gap + desc + (time.equals(\"\") ? \"\" : gap) + time + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.dataSavedMsg();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.errorSavingMsg();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static List\u003cTask\u003e loadTasks(String pathName) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String[] inputs;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        File taskFile \u003d new File(pathName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Output.loadingDataMsg();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        inputs \u003d new String[5];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Scanner sc \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (!sc.hasNext()) Output.noRecordsFoundMsg();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                inputs \u003d sc.nextLine().split(gap);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                isDone \u003d inputs[1].equals(\"1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                switch (inputs[0]) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Todo(inputs[2], isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Deadline(inputs[2], LocalDateTime.parse(inputs[3]), isDone);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Event(inputs[2], LocalDateTime.parse(inputs[3]), LocalDateTime.parse(inputs[4]), isDone);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Output.noRecordsFoundMsg();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Output.loadingSuccessMsg(tasks.size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDesc(String desc) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDoneStatus() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone() ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[\" + this.getDoneStatus() + \"] \" + getDesc();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 112
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Todo(String desc, boolean done) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 13
    }
  }
]
