[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "// take user input in ./gradlew run"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 32,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "E - 1 - concert - 2019-09-21 21:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "T - 0 - borrow book"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Duke - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Adding tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Duke allows the addition of different kind of tasks, namely todo, event and deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Deleting tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Tasks can be deleted from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Updating tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Details of the task can also be updated in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Listing tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Duke can display a list of all tasks, along with the relevant types and dates."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Marking tasks as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Tasks can be marked as done in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### Finding tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Tasks can be filtered by certain keywords."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `todo \u003cdescription\u003e` - Adds a todo task with the relevant description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`todo borrow book`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Got it: I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Now you have 1 task in the list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `event \u003cdescription\u003e /at yyyy-MM-dd HH:mm` - Adds an event with the relevant description and date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`event read book /at 2019-12-31 23:59`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Got it: I\u0027ve added this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "[E][X] borrow book (at: 2019-12-31 23:59)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Now you have 2 task(s) in the list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `deadline \u003cdescription\u003e /by yyyy-MM-dd HH:mm` - Adds a deadline with the relevant description and date."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`deadline return book /by 2019-12-31 23:59`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Got it: I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "[D][X] borrow book (by: 2019-12-31 23:59)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Now you have 3 task(s) in the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `find \u003ckeyword\u003e` - Finds any task with contains the relevant keyword in its description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`find borrow`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "1. [T][X] borrow book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `update \u003ctask_number\u003e` - Uppdates task at the provided number in the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003e\u003e `update 1`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Okay. Updating this task:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Please use one of these options to update:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "1. name \u003cnew_name\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "2. date \u003cnew_date\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "3. both \u003cnew_name\u003e \u003cnew_date\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003e\u003e `name HAHAHAHA`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Okay. Here\u0027s the updated task:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "[T][X] HAHAHAHA"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `delete \u003ctask_number\u003e` - Deletes task at the provided number in the task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "1. [T][X] borrow book"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Now you have 2 task(s) in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `done \u003ctask_number\u003e` - Marks task at the provided number in the list as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Nice!. I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "1. [T][v] borrow book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `list` - Lists all tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "1. [T][X] borrow book"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "2. [E][X] read book (at: \u003cdate\u003e)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "3. [D][X] return book (by: \u003cdate\u003e)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "### `bye` - Exits the program."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 121,
      "-": 11
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to handle the different commands input. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // class variables"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private TaskList tl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // run a conversation handler for updating task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private boolean isUpdatingTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private int taskBeingUpdated;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Class constructor to define a CommandHandler instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param ui UI to generate output."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param parser Parser to parse commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param storage Storage to store stuff."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList to maintain tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public CommandHandler(UI ui, Parser parser, Storage storage, TaskList tl) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tl \u003d tl;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.isUpdatingTask \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.taskBeingUpdated \u003d -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Execute a user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param input Input to be executed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String showing the output."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Possible eception which can be thrown during runtime."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String execute(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (this.parser.parseCommand(input).equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (this.isUpdatingTask) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return this.handleUpdate(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String returnString \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        switch (this.parser.parseCommand(input)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"list\") : \"First word in input should be `list`.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskList(this.tl);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"done\") : \"First word in input should be `done`.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            task \u003d this.tl.taskDone(this.parser.parseInteger(input));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskMarkedDone(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"delete\") : \"First word in input should be `delete`.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            task \u003d this.tl.removeTask(this.parser.parseInteger(input));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskDeletion(task, this.tl);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"todo\") : \"First word in input should be `todo`.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            task \u003d this.parser.parseTodo(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            tl.addTask(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskAddition(task, this.tl);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"event\") : \"First word in input should be `event`.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            task \u003d this.parser.parseEvent(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            tl.addTask(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskAddition(task, tl);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"deadline\") : \"First word in input should be `deadline`.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            task \u003d this.parser.parseDeadline(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            tl.addTask(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskAddition(task, tl);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"find\") : \"First word in input should be `find`.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            TaskList newTl \u003d tl.findTasks(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskList(newTl);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            assert input.split(\" \")[0].equalsIgnoreCase(\"update\") : \"First word in input should be `update`.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            int taskIndex \u003d this.parser.parseInteger(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.showTaskBeingUpdated(this.tl.getTasks().get(taskIndex - 1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.isUpdatingTask \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.taskBeingUpdated \u003d taskIndex - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnString \u003d this.ui.printError(new DukeException(\"Unknown command. :(\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.storage.writeTasksToFile(this.tl);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return returnString;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to handle the updating of a task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param input Input string storing update details."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String handleUpdate(String input) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String attribute \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String value \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            if (attribute.equalsIgnoreCase(\"name\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                task \u003d this.tl.updateName(this.taskBeingUpdated, value);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } else if (attribute.equalsIgnoreCase(\"date\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Date date \u003d this.parser.parseDate(value);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                task \u003d this.tl.updateDate(this.taskBeingUpdated, date);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } else if (attribute.equalsIgnoreCase(\"both\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                String name \u003d value.split(\"(/at|/by)\")[0];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Date date \u003d this.parser.parseDate(value.split(\"(/at|/by)\")[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                task \u003d this.tl.updateBoth(this.taskBeingUpdated, name, date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                throw new DukeException(\"You can only update date or name. :(\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please enter in the given format. :(\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.isUpdatingTask \u003d false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.taskBeingUpdated \u003d -1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.ui.showTaskIsUpdated(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to check if command_handler is updating task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public boolean isUpdatingTask() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.isUpdatingTask;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 136
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent a deadline. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Class constructor for Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of the deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date Date of the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Deadline(String name, Date date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? Unicode.TICK : Unicode.CROSS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", doneStr, this.name, format.format(this.date));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 36
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        displayPicture.setClip(new Circle(50.0, 50.0, 50.0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Return a DialogBox for user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Return a DialogBox for Duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 68
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to represent Duke. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // class variables"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private TaskList tl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private CommandHandler commandHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Class constructor for the Duke class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.ui \u003d new UI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.tl \u003d new TaskList(storage.readTasksFromFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.commandHandler \u003d new CommandHandler(this.ui, this.parser, this.storage, this.tl);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            this.ui.printError(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Method to generate the welcome string for Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Welcome string to be returned."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String getWelcomeString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.ui.printWelcome() + \"\\n\" + this.ui.showTaskList(this.tl);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return this.commandHandler.execute(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return this.ui.printError(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 42,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to define a Duke Exception. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param message Message of the exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent an event. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Event(String name, Date date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? Unicode.TICK : Unicode.CROSS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", doneStr, this.name, format.format(this.date));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 36
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * Controller for MainWindow. Provides the layout for other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // load images representing for user and image"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"images/Terminator.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Set the duke and initial string for mainWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeString(), dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 57
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to parse the input given by the user. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // static SimpleDateFormat needed to create tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    static final SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse the string to determine the command type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param input Command string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing the type of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String parseCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return input.split(\" \", 2)[0].toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse a to-do task from a string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A To-Do task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case to-do is incomplete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ToDo parseTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String description \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return new ToDo(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please enter a to-do description.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse a deadline task from a string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A Deadline task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case deadline is incomplete."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Deadline parseDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String taskStr \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String desc \u003d taskStr.split(\" /by \")[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Date date \u003d parseDate(taskStr.split(\" /by \")[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return new Deadline(desc, date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide both deadline description and date.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse an event task from a string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param taskStr String representing the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return An Event task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case event is incomplete."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Event parseEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String taskStr \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            String desc \u003d taskStr.split(\" /at \")[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Date date \u003d parseDate(taskStr.split(\" /at \")[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return new Event(desc, date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide both event description and date.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse an integer from the string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param Date String representing the date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Parsed date."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot parse date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date parseDate(String str) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return format.parse(str);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Cannot parse date. :(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Parse an integer from the string."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param indexStr String representing the index."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Integer representing the index."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case command is incomplete."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public int parseInteger(String indexStr) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (indexStr.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Please provide an index.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return Integer.parseInt(indexStr.split(\" \")[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 94
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to manage storage of tasks from/to file. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // path of storage file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // date formatting is a constant"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    static final SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param path Path to the storage file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to read tasks from the storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return A list of read tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot read tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ArrayList\u003cTask\u003e readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            List\u003cString\u003e taskStrings \u003d Files.readAllLines(this.path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            for (String task : taskStrings) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                tasks.add(readTask(task));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Was not able to read the file. :(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function to write tasks to the storage file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList representing the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot write tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void writeTasksToFile(TaskList tl) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            Path path \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path, Charset.forName(\"UTF-8\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            for (Task task : tl.getTasks()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                writer.write(writeTask(task) + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            throw new DukeException(\"Was not able to write to the file. :(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Static method to read task from a string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task String representing the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return The parsed task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @throws DukeException Exception in case cannot read task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static Task readTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String[] taskParams \u003d task.split(\" - \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Task returnTask \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        switch (taskParams[0]) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            ToDo todo \u003d new ToDo(taskParams[2]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                todo.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            returnTask \u003d todo;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Event event \u003d new Event(taskParams[2], format.parse(taskParams[3]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    event.markDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                returnTask \u003d event;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                throw new DukeException(\"Incorrect date format given. :(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                Deadline dl \u003d new Deadline(taskParams[2], format.parse(taskParams[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                if (Integer.parseInt(taskParams[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                    dl.markDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                returnTask \u003d dl;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                throw new DukeException(\"Incorrect date format given. :(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return returnTask;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Static method to generate a string representing the task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task The Task to convert to String."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static String writeTask(Task task) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String taskStr \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d task.isTaskDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        switch (task.getType()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"T - %s - %s\", doneStr, task.getName());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"E - %s - %s - %s\", doneStr, task.getName(), format.format(task.getDate()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            taskStr \u003d String.format(\"D - %s - %s - %s\", doneStr, task.getName(), format.format(task.getDate()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return taskStr;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 133
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to represent a task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Check if task is marked done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Boolean representing task done status."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Method to represent the task type."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return TaskType of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Abstract method representing the task date."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Date of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public abstract Date getDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function for updating date of a task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date New date for the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void setDate(Date date) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function for updating name of a task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date New name for the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Function for updating name and date of a task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name New name for the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date New date for the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void setBoth(String name, Date date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 80
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to represent a list of tasks. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // ArrayList to maintain list of tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Add a task to task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Update name of a task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to be updated."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name New name for the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Updated task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task updateName(int index, String name) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index).setName(name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Update date of a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to be updated."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date New date for the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Updated task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task updateDate(int index, Date date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index).setDate(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Update name and date of a task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to be updated."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name New name for the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param date New date for the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Updated task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task updateBoth(int index, String name, Date date) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index).setName(name);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index).setDate(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * List all tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representing all tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        int[] counter \u003d new int[]{1};"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        tasks.forEach(task -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            sb.append(String.format(\"     %d. %s\\n\", counter[0], task.toString()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            counter[0] +\u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Return a new TaskList filtered with the searched task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param findStr String to be searched for in the tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return TaskList where only the filtered tasks are included."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public TaskList findTasks(String findStr) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        ArrayList\u003cTask\u003e newTasks \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            .filter(task -\u003e task.getName().contains(findStr))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return new TaskList(newTasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Mark a task as done in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to mark done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Task marked as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task taskDone(int index) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.tasks.get(index - 1).markDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Remove a task from the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param index Index of task to remove."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Removed task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the list of tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 114
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** An enumeration to define the different task types. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 4
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Task to represent a To-do. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param name Description of to-do."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Get the date of event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Null because a to-do has no date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * String method to override the toString() in java.lang.Object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return String representation of the object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String doneStr \u003d this.done ? Unicode.TICK : Unicode.CROSS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return String.format(\"[T][%s] %s\", doneStr, this.name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 32
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/** Class to handle UI for the application. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "class UI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    // scanner to take user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static final String WELCOME_STR \u003d \"Hello! I\u0027m Duke :)\\n     What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static final String END_STR \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Constructor for the object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Print welcome string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String printWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(WELCOME_STR);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Print exit string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String printExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(END_STR);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Take input from user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String takeInput() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        if (this.sc.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Method to display task addition."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskAddition(Task task, TaskList tl) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(\"       \" + task + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     Now you have %d tasks in the list.\", tl.getTasks().size()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display a deletion of task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList deleted from."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskDeletion(Task task, TaskList tl) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", task.toString()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     Now you have %d tasks in the list.\", tl.getTasks().size()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display marking task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task marked done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskMarkedDone(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\", task.toString()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * List the tasks in a TaskList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param tl TaskList to list tasks from."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted list of tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskList(TaskList tl) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(tl.listTasks());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display task which is being updated."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task being updated."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskBeingUpdated(Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Okay! Updating this task:\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\\n\", task.toString()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", \"Please use one of these options to update:\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", \"1. name \u003cnew_name\u003e\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", \"2. date \u003cnew_date\u003e\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\\n\", \"3. both \u003cnew_name\u003e \u003cnew_date\u003e\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display task which just got updated."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param task Task updated."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted string."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String showTaskIsUpdated(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Okay! Here\u0027s the updated task:\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(String.format(\"     %s\", task.toString()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(sb.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Display an error."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param e Error to be displayed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return formatted error."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public String printError(DukeException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return prettyPrint(String.format(\"%s OOPS!!! %s\", Unicode.SAD_FACE, e.getMessage()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * Pretty print a string."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @param str String to be printed."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    private static String prettyPrint(String str) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(\"    --------------------------------------------\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(\"     \" + str + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        sb.append(\"    --------------------------------------------\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 138
    }
  },
  {
    "path": "src/main/java/Unicode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " * Class to represent the different unicode characters."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class Unicode {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static String SAD_FACE \u003d new String(Character.toChars(0x2639));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static String CROSS \u003d new String(Character.toChars(0x2715));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public static String TICK \u003d new String(Character.toChars(0x2713));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 8
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.Group?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003cfx:root spacing\u003d\"5\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cGroup\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "         \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003c/Group\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseCommandTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String todoInput \u003d \"todo bake eggs\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String deadlineInput \u003d \"deadline return book /by 2019-08-31 18:00\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String eventInput \u003d \"event concert /at 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(todoInput), \"todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(deadlineInput), \"deadline\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseCommand(eventInput), \"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseIntegerTest() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseInteger(\"done 1\"), 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(parser.parseInteger(\"delete 2\"), 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void parseEventTest() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String input \u003d \"event concert /at 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(String.format(\"[E][%s] concert (at: 2019-08-31 21:00)\", Unicode.CROSS),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                parser.parseEvent(input).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 31
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void readTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        String taskStr \u003d \"E - 0 - concert - 2019-08-31 21:00\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(Storage.readTask(taskStr).toString(),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "                String.format(\"[E][%s] concert (at: 2019-08-31 21:00)\", Unicode.CROSS));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    public void writeTaskTest() throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        Event event \u003d new Event(\"concert\", Storage.format.parse(\"2019-08-31 21:00\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "        assertEquals(Storage.writeTask(event), \"E - 0 - concert - 2019-08-31 21:00\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "event concert /at Mon 2PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "deadline return book /by Sun 2PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chaitanyabaranwal"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chaitanyabaranwal": 34
    }
  }
]
