[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "version \u00270.3.4\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 21,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " *  CS2103 iP Deliverable, Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " *  @author Ahmed Bahajjaj"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Constructor creates ui, storage, and taskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param filePath Path for duke data file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList \u003d storage.loadTasks(ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Runs the duke To-do Application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                String input \u003d ui.read();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                isExit \u003d (command instanceof ExitCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                ui.out(\"The details of an Event/Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            } catch (UnsupportedOperationException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                ui.out(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                ui.out(\"Please only complete/delete tasks on the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                ui.out(\"Please format date/time as \u0027dd-MM-yyyy HHmm\u0027.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        storage.writeTasks(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents an AddCommand, execution creates a new TodoTask."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.add(new TodoTask(input.trim()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(taskList.get(taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 29
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents an AddCommand, execution creates a new DeadlineTask."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String[] details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public AddDeadlineCommand(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        details \u003d Parser.getDetails(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.add(new Deadline(details[0].trim(), Parser.getAsDate(details[1])));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(taskList.get(taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 31
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents an AddCommand, execution creates a new EventTask."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String[] details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public AddEventCommand(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        details \u003d Parser.getDetails(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.add(new EventTask(details[0].trim(), Parser.getAsDate(details[1])));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(taskList.get(taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Abstract representation for Commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a delete command, execution removes desired task from list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws NumberFormatException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        int value \u003d Parser.getIndex(input, taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(taskList.get(value - 1).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.remove(value - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents an exit command, execution prints goodbye message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws NumberFormatException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        TaskList searchList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            if (taskList.get(i).toString().contains(input)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                searchList.add(taskList.get(i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        if (searchList.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.out(\"No items match your search.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.out(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.list(searchList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a list command, execution lists all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.list(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 18
    }
  },
  {
    "path": "src/main/java/duke/command/MarkCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a \u0027mark as done\u0027 command, execution marks the task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class MarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public MarkCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws NumberFormatException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        int value \u003d Parser.getIndex(input, taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.get(value - 1).setDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.out(taskList.get(value - 1).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 27
    }
  },
  {
    "path": "src/main/java/duke/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Interface used by duke to parse information."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Parses input text into respective command representation."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param input User input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return Appropriate command representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws UnsupportedOperationException If command not understood."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If Event/Deadline details left blank."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static Command parse(String input) throws UnsupportedOperationException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        input \u003d input.replace(command, \"\").trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new MarkCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new AddEventCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new AddDeadlineCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Returns the index of the list to be managed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param input User command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param size Size of task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return User value specified"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws NumberFormatException If number out of range or invalid input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static int getIndex(String input, int size) throws NumberFormatException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        int value \u003d Integer.parseInt(input.substring(input.length() - 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        if (value \u003c 0 || value \u003e size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Processes Input Event/Deadline to Description \u0026 Details."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param input Task String (without command)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return Array. Index 0 \u003d Description. Index 1  \u003d Details"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Command missing details"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static String[] getDetails(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] desc \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] temp \u003d desc[1].split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        desc[1] \u003d desc[1].replace(temp[0], \"\").trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Returns java date object from input string."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param details String representation of date."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return Date object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws ParseException If string representation not in proper format."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public static Date getAsDate(String details) throws ParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return format.parse(details);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Creates Task from stored task data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param code Stored task data."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return Appropriate Task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @throws ParseException Error in stored date data."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    static Task init(String[] code) throws ParseException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        boolean done \u003d \"1\".equals(code[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        switch (code[0]) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new TodoTask(code[2], done);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new Deadline(code[2], Parser.getAsDate(code[3]), done);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return new EventTask(code[2], Parser.getAsDate(code[3]), done);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 107
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Interface used by duke to interact with files."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Loads all data from file into task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param ui User-Interface for display/messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @return TaskList for Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public TaskList loadTasks(Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                String[] code \u003d scanner.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                taskList.add(Parser.init(code));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.list(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.out(\"You do not have any outstanding tasks.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            ui.out(\"There was an error with the data file.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Writes all data from task list to file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param taskList from Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void writeTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            if (taskList.isEmpty() \u0026\u0026 file.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Files.delete(Paths.get(filePath));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            } else if (!taskList.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                StringBuilder allTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                    allTasks.append(taskList.get(i).store()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                if (!file.exists()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                fileWriter.write(allTasks.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            System.out.println(\"Something went wrong: \" + ex.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 73
    }
  },
  {
    "path": "src/main/java/duke/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * User Interface for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Constructor creates new scanner to read System-in."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        out(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void out(String output) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        System.out.println(\"\\t\" + output);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        out(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * Prints out list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void list(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            out(\"List is empty!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                out((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a Deadline Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private Date details;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Deadline(String description, Date details) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Deadline(String description, Date details, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + details + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"D|\" + getStatus() + \"|\" + description + \"|\" + details;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 30
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents an Event Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private Date details;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public EventTask(String description, Date details) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public EventTask(String description, Date details, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + details + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"E|\" + getStatus() + \"|\" + description + \"|\" + details;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a general task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    Task(String description, boolean done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    int getStatus() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return (this.isDone ? 1 : 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return getStatus() + \"|\" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 40
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Object interface for duke to manage task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 34
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * Represents a To-do Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public TodoTask(String description, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return \"T|\" + getStatus() + \"|\" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 25
    }
  },
  {
    "path": "src/test/java/duke/io/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    void getIndex() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(2, Parser.getIndex(\"number 2\", 4));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    void getDetails() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(\"tonight\", Parser.getDetails(\"sleep /by tonight\")[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 19
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    void getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(0, new Task(\"\").getStatus());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "deadline find food /by 11-09-2019 1454"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 34
    }
  }
]
