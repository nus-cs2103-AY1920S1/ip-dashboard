[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "T -- âœ˜ -- fgfg"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ui \u003d new Ui(storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            taskList \u003d new TaskList(storage.textRead());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IllegalDukeArgumentException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            ui.showError(\"Loading Error!\\nPlease check the file.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void greeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Duke duke \u003d new Duke(\"Users/xutunan/duke/duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        duke.greeting();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        duke.ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        while (!Ui.getIsExit()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 38,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String[] splitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Parser(String[] splitCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void parse(Storage storage) throws IllegalDukeFormatException, IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        switch (Command.valueOf(splitCommand[0])) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case list:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case bye:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandDone(storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case todo:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandTodo(storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case deadline:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandDeadline(storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case event:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandEvent(storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case delete:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            commandDelete(storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String tasks \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        TaskList.print();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandBye() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String Exit \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(Exit);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Ui.setIsExit(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandDone(Storage storage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().get(index - 1).setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String done \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(done + \"  \" + TaskList.getList().get(index - 1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            for (Task t : TaskList.getList()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                storage.textWrite(t.toString(), false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Selected index not exists\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandTodo(Storage storage) throws IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String descriptionT \u003d splitCommand[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task todo \u003d new Todo(descriptionT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(todo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(todo.toString(), true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + todo + \"\\nNow you have \" + TaskList.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeArgumentException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandDeadline(Storage storage) throws IllegalDukeFormatException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] fullCommand \u003d splitCommand[1].split(\" /by \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String deadlineTime \u003d fullCommand[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task deadline \u003d new Deadline(fullCommand[0], deadlineTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(deadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(deadline.toString(), true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + deadline + \"\\nNow you have \" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    TaskList.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeFormatException(\"deadline\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"OOPS!!! Wrong time format!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandEvent(Storage storage) throws IllegalDukeFormatException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] fullCommand \u003d splitCommand[1].split(\" /at \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String eventTime \u003d fullCommand[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task event \u003d new Event(fullCommand[0], eventTime);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(event);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(event.toString(), true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + event + \"\\nNow you have \" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    TaskList.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"OOPS!!! Wrong time format!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeFormatException(\"event\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void commandDelete(Storage storage) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int indexD \u003d Integer.parseInt(splitCommand[1]) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task removedTask \u003d TaskList.getList().remove(indexD);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            for (Task t : TaskList.getList()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                storage.textWrite(t.toString(), false);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + removedTask + \"\\nNow you have \" + TaskList.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(\"Selected index not exists\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "enum Command {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    list,bye,done,todo,deadline,event,delete;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 137
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    //private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private LinkedList\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public LinkedList\u003cTask\u003e textRead() throws IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            FileReader reader \u003d new FileReader(\"/Users/xutunan/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String[] fullCommand \u003d line.split(\" -- \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandType \u003d fullCommand[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandStatus \u003d fullCommand[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandContent \u003d fullCommand[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                switch(commandType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"T\" :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task todo \u003d new Todo(commandContent);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        todo.setDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"D\" :"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task deadline \u003d new Deadline(commandContent, fullCommand[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        deadline.setDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"E\" :"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task event \u003d new Event(commandContent, fullCommand[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        event.setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeArgumentException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void textWrite(String task, boolean isAppend) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        File file \u003d new File(\"/Users/xutunan/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"/Users/xutunan/duke/data/duke.txt\", isAppend);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.write(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 80
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Ui(Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                \"What can I do for you?\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String fullCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                Parser parser \u003d new Parser(splitCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                parser.parse(storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                if(isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalDukeFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalDukeArgumentException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(\"_________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void setIsExit(boolean isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Ui.isExit \u003d isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static boolean getIsExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 63
    }
  },
  {
    "path": "src/main/java/duke/excaptions/IllegalDukeArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.excaptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class IllegalDukeArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public IllegalDukeArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 7
    }
  },
  {
    "path": "src/main/java/duke/excaptions/IllegalDukeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.excaptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class IllegalDukeFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public IllegalDukeFormatException(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(\"â˜¹ OOPS!!! The format of a \" + command + \" command is wrong.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 7
    }
  },
  {
    "path": "src/main/java/duke/list/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class TaskList extends LinkedList\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        TaskList.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static LinkedList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void print() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"D -- \" + super.toString() + \" -- \" + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"E -- \" + super.toString() + \" -- \" + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return  this.getStatusIcon() + \" -- \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"T -- \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 11
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void deadlineTest() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"D -- \\u2718 -- eat -- 01/09/2019 12:00\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Deadline(\"eat\", \"01/09/2019 12:00\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void dukeTest() throws ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        DeadlineTest.deadlineTest();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        EventTest.eventTest();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        TodoTest.todoTest();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 14
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void eventTest() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"E -- \\u2718 -- eat -- 01/09/2019 12:00\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Event(\"eat\", \"01/09/2019 12:00\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 13
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"T -- \\u2718 -- eat\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 13
    }
  }
]
