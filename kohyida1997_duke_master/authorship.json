[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "T|1|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "D|0|return book|6/6/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "E|1|project meeting|6/8/2019 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "T|1|join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "D|1|submit homework|26/8/2019 1200"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 5
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static String[] MONTHS \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date(String dateString){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String[] tokens \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.day \u003d Integer.parseInt(tokens[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.month \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.year \u003d Integer.parseInt(tokens[2]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getDateString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if(day % 10 \u003d\u003d 2 \u0026\u0026 day !\u003d 12){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"nd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else if(day % 10 \u003d\u003d 3 \u0026\u0026 day !\u003d 13){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"rd\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else if(day % 10 \u003d\u003d 1 \u0026\u0026 day !\u003d 11){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"st\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d day + \"th\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        toReturn \u003d toReturn + \" of \" + MONTHS[month-1] + \" \" + year;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 38
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    Timing timing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Deadline(String description, String date, String timing, int done){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing getTiming(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Deadline(String description, String date, String timing){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + \", \" + timing.toString() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    //constants for UI messages"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String greet \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String goodbye \u003d \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String niceAdded \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String gotIt \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String deleted \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    //List of all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    //helper function to print total number of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static void printNumTasks(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static void printLogo(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static void writeToDisk(String filePath) throws IOException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String lineToWrite \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        for(int k \u003d 0; k \u003c listOfTasks.size(); k++){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task curr \u003d listOfTasks.get(k);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            int doneFlag \u003d curr.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            if(curr instanceof Todo){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                lineToWrite \u003d \"T\" + \"|\" + doneFlag + \"|\" + curr.getDescription();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } else if(curr instanceof Deadline){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                Deadline currDeadline \u003d (Deadline) curr;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                lineToWrite \u003d \"D\" + \"|\" + doneFlag + \"|\" + currDeadline.getDescription() + \"|\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        + currDeadline.getDate().getDateString() + \" \" + currDeadline.getTiming().getTimeString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                Event currEvent \u003d (Event) curr;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                lineToWrite \u003d \"E\" + \"|\" + doneFlag + \"|\" + currEvent.getDescription() + \"|\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        + currEvent.getDate().getDateString() + \" \" + currEvent.getTiming().getTimeString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fw.write(lineToWrite + System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Writing new changes to disk...\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(\"Writing done!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        BufferedReader fileinput \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Boolean fileIsChanged \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //Read data from duke.txt to store into ArrayList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String fileData \u003d fileinput.readLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        while(fileData !\u003d null){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String[] fileTokens \u003d fileData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String taskType \u003d fileTokens[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            int doneFlag \u003d Integer.parseInt(fileTokens[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String taskDesc \u003d fileTokens[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String taskDate;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String taskTime;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String[] dateTimeTokens;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                listOfTasks.add(new Todo(taskDesc, doneFlag));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                dateTimeTokens \u003d fileTokens[3].split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                taskDate \u003d dateTimeTokens[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                taskTime \u003d dateTimeTokens[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                listOfTasks.add(new Deadline(taskDesc, taskDate, taskTime, doneFlag));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                dateTimeTokens \u003d fileTokens[3].split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                taskDate \u003d dateTimeTokens[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                taskTime \u003d dateTimeTokens[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                listOfTasks.add(new Event(taskDesc, taskDate, taskTime, doneFlag));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            fileData \u003d fileinput.readLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        fileinput.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        BufferedReader input \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String command \u003d input.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //main program logic"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        while(!command.equals(\"bye\")){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String toAdd \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                switch (tokens[0]) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //\"list\" logic"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    int size \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    System.out.println(\"Here are your tasks in your list:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        Task curr \u003d listOfTasks.get(i);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(i + 1 + \".\" + curr.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //\"done\" logic"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Please specify task to complete\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        int toComplete \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(toComplete \u003e\u003d listOfTasks.size() || toComplete \u003c 0){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"OOPS! Task \" + (toComplete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        Task curr \u003d listOfTasks.get(toComplete);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        listOfTasks.get(toComplete).completeTask();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(niceAdded);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(curr.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        fileIsChanged \u003d true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } catch (DukeException de){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //\"delete\" logic"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Please specify task to delete\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        int toDelete \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(toDelete \u003e\u003d listOfTasks.size() || toDelete \u003c 0){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS! Task \" + (toDelete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            Task curr \u003d listOfTasks.get(toDelete);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(deleted);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(curr.toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            listOfTasks.remove(toDelete);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            Task.totalTasks--;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            printNumTasks();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            fileIsChanged \u003d true;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } catch (DukeException de){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //toodo logic"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        for (int j \u003d 1; j \u003c tokens.length; j++) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            toAdd \u003d toAdd + tokens[j] + \" \";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        newTask \u003d new Todo(toAdd.trim());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(gotIt);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        fileIsChanged \u003d true;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        printNumTasks();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } catch (DukeException de) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //\"deadline\" logic"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        boolean dateFlag \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        String dateString \u003d \"\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //Check if both date and time are specified"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(command.split(\"/by\")[1].trim().split(\" \").length !\u003d 2){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Date and Timing not specified correctly!\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        for (int m \u003d 1; m \u003c tokens.length; m++) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if (tokens[m].equals(\"/by\")) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                dateFlag \u003d true;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                if (dateFlag \u003d\u003d false) toAdd \u003d toAdd + tokens[m] + \" \";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    if (m \u003d\u003d tokens.length - 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                        timeString \u003d tokens[m];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                        dateString \u003d tokens[m];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        newTask \u003d new Deadline(toAdd.trim(), dateString.trim(), timeString.trim());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(gotIt);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        fileIsChanged \u003d true;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        printNumTasks();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } catch (DukeException de){"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //\"event\" logic"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(tokens.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        String dateString \u003d \"\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        boolean timeFlag \u003d false;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //Check if both date and time are specified"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        if(command.split(\"/by\")[1].trim().split(\" \").length !\u003d 2){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Date and Timing not specified correctly!\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        for (int z \u003d 1; z \u003c tokens.length; z++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if (tokens[z].equals(\"/at\")) timeFlag \u003d true;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                if (timeFlag \u003d\u003d false) toAdd \u003d toAdd + tokens[z] + \" \";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                else{"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    if(z \u003d\u003d tokens.length - 1){"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                        timeString \u003d tokens[z];"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                        dateString \u003d tokens[z];"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        newTask \u003d new Event(toAdd.trim(), dateString.trim(), timeString.trim());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(gotIt);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        fileIsChanged \u003d true;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        printNumTasks();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    } catch (DukeException de){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    //unrecognized command"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } catch (DukeException de){"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //read next command"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            command \u003d input.readLine();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //exit program"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if(fileIsChanged) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            writeToDisk(f.getAbsolutePath());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 260,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    Timing timing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Event(String description,String date, String timing, int done){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing getTiming(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Event(String description, String date, String timing){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d new Timing(timing);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.toString() + \", \" + timing.toString() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 33
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task(String description, int done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if(done \u003d\u003d 1){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void completeTask(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 36
    }
  },
  {
    "path": "src/main/java/Timing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Timing {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private String timeString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private boolean meridiemFlag \u003d false; //to check whether AM or PM"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Timing(String timeString){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timeString \u003d timeString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        int timeInt \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.minute \u003d timeInt % 100;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.hour \u003d timeInt / 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if(this.hour \u003e\u003d 12){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            meridiemFlag \u003d true; //means it is PM not AM"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getTimeString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String toReturn \u003d (hour \u003d\u003d 0 || hour \u003d\u003d 12) ? \"12\" : hour%12 + \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        if(minute !\u003d 0){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            toReturn \u003d toReturn + \".\" + minute;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String meridiem \u003d meridiemFlag ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return toReturn + meridiem;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Todo(String description, int done){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 16
    }
  }
]
