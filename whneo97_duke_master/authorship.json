[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "javadoc {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    source +\u003d sourceSets.main.allJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    classpath +\u003d configurations.compile"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "run{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "whneo97": 32
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | return book | 15/12/2019 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | return book | 15/12/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | buy cake | 14/12/2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 1 | project meeting | 31/12/2019 2015-2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | project meeting | 12/08/2019 1400"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | hello world"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 1 | hello world | 12/12/2019 1400-2300"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | buy bread"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | buy milk"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | return book | 15/12/2019 2345"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | return book | 15/12/2019 2359"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 0 | return book | 15/12/2019 0000"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | buy cake | 14/12/2019"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "E | 1 | project meeting | 31/12/2019 2015-2359"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "D | 1 | project meeting | 12/08/2019 1400"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 1 | hello world"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "T | 0 | buy bread"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "duke-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /at 12/12/2912 0000"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/20/2019"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2345"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2359"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 0000"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2360"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019 2459"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/2019 2359"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/000 2359"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 00/12/-10 2/359"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline return book /by 15/12/2019"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline buy cake /by 14/12/2019"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event project meeting /at 31/12/2019 2015-2359"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline project meeting /by 12/08/2019 1400"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline /by 1400"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event /at 14/14/2918"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done -19"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done a"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "done 20"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete 109"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "delete -0as1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "whneo97": 38
    }
  },
  {
    "path": "duke-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "whneo97": 34
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":init"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":end"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":init"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":end"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "whneo97"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "whneo97"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 6e6ace130121eba10a3559454d8092300c7518d0"
      }
    ],
    "authorContributionMap": {
      "whneo97": 171
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        new Duke(\"/Users/whneo97/OneDrive/UNI/CS/Y2S1/CS2103/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "whneo97": 42
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String[] strArr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    DateAndTime dateAndTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public AddCommand(String command, String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Todo todo \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showAddedMessage(todo.addedMessage(tasks));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskString, dateAndTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showAddedMessage(deadline.addedMessage(tasks));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Event event \u003d new Event(taskString, dateAndTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ui.showAddedMessage(event.addedMessage(tasks));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 46
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.Validation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DeleteCommand(String taskString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int i \u003d Validation.getValidatedListIndex(tasks, taskString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showDeletedMessage(task.deletedMessage(tasks));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.Validation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DoneCommand(String taskString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int i \u003d Validation.getValidatedListIndex(tasks, taskString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        task.setIsDone(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showDoneMessage(task.doneMessage(task));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 12
    }
  },
  {
    "path": "src/main/java/duke/dateandtime/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    int day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    int month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    int year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Date(int day, int month, int year) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String getMonth(int month) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return month \u003d\u003d 1 ? \"January\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 2 ? \"February\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 3 ? \"March\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 4 ? \"April\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 5 ? \"May\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 6 ? \"June\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 7 ? \"July\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 8 ? \"August\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 9 ? \"September\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 10 ? \"October\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 11 ? \"November\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : month \u003d\u003d 12 ? \"December\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return String.format(\"%02d\", day)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"/\" + String.format(\"%02d\", month)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"/\" + String.format(\"%02d\", year);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 36
    }
  },
  {
    "path": "src/main/java/duke/dateandtime/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Time timeStart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Time timeEnd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date, Time timeEnd) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime(Date date, Time timeStart, Time timeEnd) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(date, timeEnd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (timeEnd \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (this.timeStart \u003d\u003d null){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date + \" \" + timeEnd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return \"\" + date + \" \" + timeStart + \"-\" + timeEnd;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 36
    }
  },
  {
    "path": "src/main/java/duke/dateandtime/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    int hour;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    int minute;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Time(int hour, int minute) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.minute \u003d minute;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return String.format(\"%02d\", hour) + String.format(\"%02d\", minute);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * DukeException constructor that takes in the display message for users."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Message that indicates to users details regarding the exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * DukeException constructor that takes in the display message and a Throwable cause for users."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param message Message that indicates to users details regarding the exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param cause Throwable cause that chains this exception to the exception (or other Throwable)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *              that gave rise to it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 22
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.DeadlineValidation;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.EventValidation;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.LoadValidation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.Validation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand.trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyCommand(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"todo\", taskString, null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String[] descriptionAndDateTime \u003d DeadlineValidation.getValidatedDescriptionAndDateTime(taskString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d descriptionAndDateTime[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String dateTimeString \u003d descriptionAndDateTime[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            DateAndTime dateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(dateTimeString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"deadline\", taskString, dateAndTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String[] descriptionAndDateTime \u003d EventValidation.getValidatedDescriptionAndDateTime(taskString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            taskString \u003d descriptionAndDateTime[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            String dateTimeString \u003d descriptionAndDateTime[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            DateAndTime dateAndTime \u003d EventValidation.getValidatedDateAndTime(dateTimeString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new AddCommand(\"event\", taskString, dateAndTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DoneCommand(taskString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Validation.ensureNonEmptyTaskString(command, taskString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DeleteCommand(taskString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "             Validation.ensureNonEmptyCommand(command);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "             throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static ArrayList\u003cTask\u003e parse(Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File file \u003d new File(storage.getFilePath());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String[] arr \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String type \u003d LoadValidation.getValidatedTaskType(arr[0].trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                LoadValidation.ensureValidTokens(type, arr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                boolean isDone \u003d LoadValidation.getValidatedDoneStatus(arr[1].trim()) \u003d\u003d 1 ? true : false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String taskString \u003d arr[2].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DateAndTime dateAndTime \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.ensureNonEmptyTaskString(type, taskString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    dateAndTime \u003d EventValidation.getValidatedDateAndTime(arr[3]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Event(taskString, dateAndTime, isDone));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    dateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(arr[3]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Deadline(taskString, dateAndTime, isDone));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    taskList.add(new Todo(taskString, isDone));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"We cannot find your file.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 102
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.w3c.dom.xpath.XPathResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Storage load() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (file.createNewFile()) { // creates new file if file does not exist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                this.taskList \u003d Parser.parse(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Error loading specified file.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void save(TaskList tasks){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                char type \u003d task.getType().toString().charAt(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                char isDone \u003d task.getIsDone() \u003d\u003d true ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String taskString \u003d task.getTaskString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                DateAndTime dateAndTime \u003d task.getDateAndTime();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                String out \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                if (task.getDateAndTime() !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    out \u003d type + \" | \" + isDone + \" | \" + taskString + \" | \" + dateAndTime + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    out \u003d type + \" | \" + isDone + \" | \" + taskString + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                fileWriter.append(out);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (Exception e) { System.out.println(e); }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * Constructor for an Deadline type class that takes in a task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * Deadline task that is created will automatically be added to the tasklist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * @param taskString Deadline description for Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * @throws DukeException Exception that is thrown in the case where the description is empty, or if the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     *     description does not contain the appropriate separator \" /by \" that separates description and date/time of"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     *     the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Deadline(String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.DEADLINE, taskString, dateAndTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Deadline(String taskString, DateAndTime dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString, dateAndTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return super.toString() + \" (by: \" + this.dateAndTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * Constructor for an Event type class that takes in a task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * Event task that is created will automatically be added to the tasklist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * @param taskString Event description for Event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     * @throws DukeException Exception that is thrown in the case where the description is empty, or if the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     *     description does not contain the appropriate separator \" /at \" that separates description and date/time of"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     *     the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Event(String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.EVENT, taskString, dateAndTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Event(String taskString, DateAndTime dateAndTime, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString, dateAndTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return super.toString() + \" (at: \" + dateAndTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    boolean isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Type type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    DateAndTime dateAndTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Constructor for Task that takes in the type of task intended to be created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Precondition: Task type is a valid type that has its own individual class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Type will be assigned to the class\u0027 type attribute."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Post-condition: Printing and adding the task to taskList is to be handled by individual classes of each type."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * (i.e. client that calls this constructor manually adds the task into the taskList)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param type Type of task (either todo, deadline or event)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    //"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Task(Type type, String taskString, DateAndTime dateAndTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Pre-condition: The Task that uses this method has been added to the taskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Prints the statement to the user that the particular task has been added into the taskList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String addedMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                \"Now you have \" + tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \" task in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String deletedMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + this + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            s +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String doneMessage(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String getTaskString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public DateAndTime getDateAndTime() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setTaskString(String taskString) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void setDateAndTime(DateAndTime dateAndTime) { this.dateAndTime \u003d dateAndTime; }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String doneString \u003d isDone \u003d\u003d true ? \"[+]\" : \"[ ]\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return \"[\" + type.toString().charAt(0) + \"]\" + doneString + \" \" + this.taskString;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 92
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskList \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void remove(Task task) { taskList.remove(task); }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Prints out all elements in the taskList as a list, numbered from 1 to n, where n is the size of the taskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String out \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            out +\u003d count + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return out.trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Constructor for a Todo type class that takes in a task description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Todo task that is created will automatically be added to the tasklist."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Task description for Todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException Exception that is thrown in the case where the description is empty."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Todo(String taskString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        super(Type.TODO, taskString, null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Todo(String taskString, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this(taskString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        System.out.println(logo + \"\\nHello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        System.out.println(\"Error loading specified file.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        System.out.println(\"OOPS!!! \" + message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showAddedMessage(String addedMessage) { System.out.println(addedMessage); }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showDeletedMessage(String deletedMessage) { System.out.println(deletedMessage); };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showDoneMessage(String doneMessage) { System.out.println(doneMessage); };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showTaskList(TaskList tasks) { System.out.println(tasks); }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 54
    }
  },
  {
    "path": "src/main/java/duke/validation/DeadlineValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineValidation extends Validation {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String[] getValidatedDescriptionAndDateTime(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!taskString.contains(\"/by \")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please separate deadline description and date/time by \\\" /by \\\". \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    \"Note that date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d taskString.split(\" /by \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"The description of an deadline cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        taskString \u003d arr[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new String[]{arr[0], arr[1]};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DateAndTime getValidatedDateAndTime(String s) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateTimeArr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateTimeArr.length \u003e 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is either in DD/MM/YYYY format or \" "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \"DD/MM/YYYY HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Date date \u003d getValidatedDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time time \u003d dateTimeArr.length \u003e 1 ? getValidatedTime(dateTimeArr[1]) : null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DateAndTime(date, time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return new DateAndTime(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 39
    }
  },
  {
    "path": "src/main/java/duke/validation/EventValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventValidation extends Validation {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String[] getValidatedDescriptionAndDateTime(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!taskString.contains(\"/at \")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please separate deadline description and date/time by \\\" /at \\\". \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    \"Note that date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d taskString.split(\" /at \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        taskString \u003d arr[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new String[]{arr[0], arr[1]};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static DateAndTime getValidatedDateAndTime(String s) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateTimeArr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateTimeArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY HHMM-HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Date date \u003d getValidatedDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] timeArr \u003d dateTimeArr[1].split(\"-\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (timeArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM-HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time timeStart \u003d getValidatedTime(timeArr[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        Time timeEnd \u003d getValidatedTime(timeArr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new DateAndTime(date, timeStart, timeEnd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 39
    }
  },
  {
    "path": "src/main/java/duke/validation/LoadValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class LoadValidation extends Validation {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static String getValidatedTaskType(String type) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!(type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\"))) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Type in Load File\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static int getValidatedDoneStatus(String doneStatus) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            int res \u003d Integer.parseInt(doneStatus);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (!(res \u003d\u003d 0 || res \u003d\u003d 1)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Invalid Done Status in Load File\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureValidTokens(String type, String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if ((type.equals(\"D\") || type.equals(\"E\")) \u0026\u0026 arr.length !\u003d 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Number of Tokens in Load File\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (type.equals(\"T\") \u0026\u0026 arr.length !\u003d 3){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Incorrect Number of Tokens in Load File\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 33
    }
  },
  {
    "path": "src/main/java/duke/validation/Validation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class Validation {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Method that ensures a command that is not meant to have additional strings following behind it does not have"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * additional strings following it (eg. list 7)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param taskString Description of a task, following a command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException Exception that is thrown if taskString taken in is non-empty"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureEmptyTaskString(String command, String taskString) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (!taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"There cannot be any additional characters after the \\\"\" + command + \"\\\" command\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \" (other than trailing spaces).\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureNonEmptyCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Command cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static void ensureNonEmptyTaskString(String task, String taskString) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (task.equals(\"delete\") || task.equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The index for a \" + task + \" command cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (task.charAt(0) \u003d\u003d \u0027a\u0027 || task.charAt(0) \u003d\u003d \u0027e\u0027 || task.charAt(0) \u003d\u003d \u0027i\u0027 ||"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    task.charAt(0) \u003d\u003d \u0027o\u0027 || task.charAt(0) \u003d\u003d \u0027u\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The description of an \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Date getValidatedDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (date.length() !\u003d 10) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] dateArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (dateArr.length !\u003d 3) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int month \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int year \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        boolean isLeapYear \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            day \u003d Integer.parseInt(dateArr[0]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            month \u003d Integer.parseInt(dateArr[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            year \u003d Integer.parseInt(dateArr[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003c 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar day must start from 1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (month \u003c 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar month must start from 1\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (year \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Calendar year must start from 0\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (month \u003e 12) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 12 months in a year.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure date format is in DD/MM/YYYY\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (year % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            isLeapYear \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (year % 100 \u003d\u003d 0 \u0026\u0026 year % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            isLeapYear \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if ((month \u003c\u003d 7 \u0026\u0026 month % 2 !\u003d 0) || (month \u003e 7 \u0026\u0026 month % 2 \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003e 31) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 31 days in \" + Date.getMonth(month));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (month !\u003d 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (day \u003e 30) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 30 days in \" + Date.getMonth(month));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (isLeapYear \u0026\u0026 day \u003e 29) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 29 days in \" + Date.getMonth(month) + \" \" + year);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else if (!isLeapYear \u0026\u0026 day \u003e 28) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"There cannot be more than 28 days in \" + Date.getMonth(month) + \" \" + year);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new Date(day, month, year);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static Time getValidatedTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (time.length() !\u003d 4) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int hour \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int minute \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            minute \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (hour \u003c 0 || minute \u003c 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please ensure time format is in HHMM format (24 hours).\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (hour \u003e 23) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please check that hours is not more than 23.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } else if (minute \u003e 59) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please check that minutes is not more than 59.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        return new Time(hour, minute);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Takes in a string and ensures that it is a valid positive integer that is within the range of the taskList"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * (numbered from 0 to n - 1 if there are items in the taskList, where n is the size of the taskList)."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * Post-condition: A client of this method may use it to access tasks in the taskList if the string representing"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * the index of the item in the taskList is valid, or otherwise user will be prompted to re-enter the command and"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * number."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @param s String that represents index of item in taskList."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @return An int that is to be used to access the item in the taskList. This ensures that any n that is returned"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *     will be able to access the taskList and that the program can continue running without encountering a general"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *     number format exception that will cause the program to terminate in the event that the index is invalid or"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *     out of bounds"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     * @throws DukeException Exception that is thrown if the numeric value of the string taken in does not correspond"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *     to a valid integer that can be used to access any task in the taskList. A valid number should start from 0"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     *     and not equal or exceed the size of the current taskList."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "whneo97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public static int getValidatedListIndex(TaskList tasks, String s) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        if (s.equals(\"\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            throw new DukeException(\"Please enter a valid numerical value after the intended command\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    + \" (separated by a space).\\n\" + \"The number cannot be empty for this command.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            n \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (n \u003c\u003d 0 || n \u003e tasks.size()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            return n - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the taskList\u0027s size\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \" after the intended command (separated by a space).\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"There is currently 1 task in the list.\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the taskList\u0027s size\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \" after the intended command (separated by a space).\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"There are currently \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        + \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 169
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 10
    }
  },
  {
    "path": "src/test/java/duke/dateandtime/DateAndTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateAndTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Date date \u003d new Date(1, 4, 2018);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Time time \u003d new Time(17, 42);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"01/04/2018 1742\", new DateAndTime(date, time).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 17
    }
  },
  {
    "path": "src/test/java/duke/dateandtime/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetMonth() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"February\", Date.getMonth(2));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"29/02/2019\", new Date(29, 2, 2019).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "src/test/java/duke/dateandtime/TimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package duke.dateandtime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"2359\", new Time(23, 59).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 14
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Deadline dummyDeadline \u003d new Deadline(\"dummyString\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(1, 3, 2014)));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Deadline dummyDeadline2 \u003d new Deadline(\"dummyString\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(2, 4, 2024), new Time(14, 4)), true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[D][ ] dummyString (by: 01/03/2014)\", dummyDeadline.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[D][+] dummyString (by: 02/04/2024 1404)\", dummyDeadline2.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 29
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Event dummyEvent \u003d new Event(\"dummyString\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(7, 5, 2031), new Time(12, 32), new Time(15, 13)));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Event dummyEvent2 \u003d new Event(\"dummyString\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "            new DateAndTime(new Date(3, 12, 2064),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                    new Time(12, 34), new Time(23, 54)), true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[E][ ] dummyString (at: 07/05/2031 1232-1513)\", dummyEvent.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[E][+] dummyString (at: 03/12/2064 1234-2354)\", dummyEvent2.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 30
    }
  },
  {
    "path": "src/test/java/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Task dummyTask \u003d new Todo(\"dummyTaskString\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    TaskList dummytasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummySize() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(0, dummytasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 19
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Task dummyTask \u003d new Todo(\"dummyTaskString\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    TaskList dummytasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyAddedMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\\n  [T][ ] dummyTaskString\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                \"Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.addedMessage(dummytasks));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyDeletedMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\\n[T][ ] dummyTaskString\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                \"Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.deletedMessage(dummytasks));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyDoneMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n  [T][ ] dummyTaskString\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(s, dummyTask.doneMessage(dummyTask));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetTaskString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", dummyTask.getTaskString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetIsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(false, dummyTask.getIsDone());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(Task.Type.TODO, dummyTask.getType());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetDateAndTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(null, dummyTask.getDateAndTime());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][ ] dummyTaskString\", dummyTask.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 59
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Todo dummyTodo \u003d new Todo(\"dummyString\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    Todo dummyTodo2 \u003d new Todo(\"dummyString2\", true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][ ] dummyString\", dummyTodo.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyToString2() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"[T][+] dummyString2\", dummyTodo2.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "src/test/java/validation/DeadlineValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.DeadlineValidation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class DeadlineValidationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDescriptionAndDateTimeString() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d DeadlineValidation.getValidatedDescriptionAndDateTime(\"dummyTaskString /by 01/03/2010\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", arr[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"01/03/2010\", arr[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        DateAndTime dummyDateAndTime \u003d DeadlineValidation.getValidatedDateAndTime(\"13/12/2019 0807\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"13/12/2019 0807\", dummyDateAndTime.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 23
    }
  },
  {
    "path": "src/test/java/validation/EventValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.EventValidation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class EventValidationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDescriptionAndDateTimeString() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        String[] arr \u003d EventValidation.getValidatedDescriptionAndDateTime(\"dummyTaskString /at \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                        \"03/01/2017 1400-1600\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"dummyTaskString\", arr[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"03/01/2017 1400-1600\", arr[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDateAndTime() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        DateAndTime dummyDateAndTime \u003d EventValidation.getValidatedDateAndTime(\"11/14/2011 0905-0745\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"11/14/2011 0905-0745\", dummyDateAndTime.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "src/test/java/validation/LoadValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.LoadValidation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class LoadValidationTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedTaskType() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(\"T\", LoadValidation.getValidatedTaskType(\"T\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDoneStatus() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals(1, LoadValidation.getValidatedDoneStatus(\"1\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 21
    }
  },
  {
    "path": "src/test/java/validation/ValidationTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "package validation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.dateandtime.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import duke.validation.Validation;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "public class ValidationTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedDate() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals((new Date(13, 9, 2018)).toString(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.getValidatedDate(\"13/09/2018\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    public void dummyGetValidatedTime() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": "        assertEquals((new Time(11, 55)).toString(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "                Validation.getValidatedTime(\"1155\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "whneo97": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "whneo97": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "whneo97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "whneo97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "whneo97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "whneo97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "whneo97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "whneo97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "whneo97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "whneo97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "whneo97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "whneo97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "whneo97": 34
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "whneo97"
        },
        "content": "1. Create a folder `[project root]\\text-validation-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 73,
      "whneo97": 1
    }
  }
]
