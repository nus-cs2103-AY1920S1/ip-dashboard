[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Deadline(String s, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", mark, taskDescription, by.format(formatter).toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public static void main(String[] args) throws ClassNotFoundException, FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(\"data/tasks.tmp\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "            ls \u003d (List\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } catch (EOFException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "        Task.updateSize(ls.size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": "        while (!(s \u003d sc.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "            if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d ls.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.out.println(String.format(\"%d. %s\", i, ls.get(i - 1)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czkay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czkay"
        },
        "content": "            } else if (s.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czkay"
        },
        "content": "                int index \u003d Integer.parseInt(s.substring(5)) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czkay"
        },
        "content": "                ls.get(index).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(ls.get(index));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czkay"
        },
        "content": "            } else if (s.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czkay"
        },
        "content": "                int index \u003d Integer.parseInt(s.substring(7)) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czkay"
        },
        "content": "                Task deletedTask \u003d ls.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czkay"
        },
        "content": "                Task.decrementNumber();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(deletedTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czkay"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\", Task.getNumberOfTasks()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czkay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czkay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    Task newTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    if (s.equals(\"deadline\") || s.equals(\"event\") || s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a \" + s + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    } else if (s.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        String[] phrases \u003d s.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        newTask \u003d new Deadline(phrases[0], phrases[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    } else if (s.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        String[] phrases \u003d s.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        newTask \u003d new Event(phrases[0], phrases[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    } else if (s.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        newTask \u003d new Todo(s.substring(5));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czkay"
        },
        "content": "                        throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    ls.add(newTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.out.println(newTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.out.println(String.format(\"Now you have %d tasks in the list.\", Task.getNumberOfTasks()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.err.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    System.err.println(\"Improper formatting of task description!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czkay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "czkay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "czkay"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"data/tasks.tmp\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "czkay"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "czkay"
        },
        "content": "            oos.writeObject(ls);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czkay"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 75,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Event(String s, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", mark, taskDescription, at.format(formatter).toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 19
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public InvalidInputException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    protected static int NUMBEROFTASKS \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        taskDescription \u003d s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        NUMBEROFTASKS++;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return NUMBEROFTASKS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public static void decrementNumber() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "        NUMBEROFTASKS--;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public static void updateSize(int size) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "        NUMBEROFTASKS \u003d size;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[%s] %s\", mark, taskDescription);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[T][%s] %s\", mark, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 11
    }
  }
]
