[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveVersion \u003d version"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 28,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Creates a Duke instance that loads a TaskList from Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Runs the Duke program from CLI."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param args options. (Currently none)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Ui ui \u003d Ui.getInstance();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            String input \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                String output \u003d c.execute(duke.tasks, duke.storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                ui.printLine(output);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                isRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                ui.printLine(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Parses and execute the input given, and returns a response."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param input a String from the user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return a String as a response"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            output \u003d c.execute(this.tasks, this.storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            output \u003d e.getMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assert output !\u003d null : \"Response string should not be null\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 66,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Executes the Duke command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param tasks   the TaskList to perform modifications on."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param storage the Storage Object to save tasks to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return an acknowledgement message from Duke. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @throws DukeException user friendly error, usually caused by poor input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns a boolean indicating if this Command is an exit Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return a boolean indicating if this Command is an exit Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public default boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 11
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * An example of a custom control using FXML. This control represents a dialog"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns a dialog box related to the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param text the text that the user has inputted"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param img the display picture of the user"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return DialogBox related to the user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns a dialog box related to Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param text the text returned by Duke"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param img the display picture of Duke"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return DialogBox related to Duke"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 76
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 33
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. Clears the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 53
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Parses the given input, and returns a Duke Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param input a String object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return a Duke Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String command \u003d inputs[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Todo(inputs[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return createAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Todo task description cannot be blank.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String[] strings \u003d inputs[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String desc \u003d strings[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String by \u003d strings[1].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return createAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Deadline task description or deadline cannot be blank.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String[] strings \u003d inputs[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String desc \u003d strings[0].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String at \u003d strings[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return createAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Event task description or start time cannot be blank.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! You have no tasks yet.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    int index \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String message \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    for (Task task : tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        message +\u003d String.format(\"%d.%s\\n\", index, task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    return message;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(inputs[1].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task taskDone \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        taskDone.markAsDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\\n\", taskDone);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Your task cannot be found!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(inputs[1].trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task taskRemoved \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return String.format("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                                \"Got it. I\u0027ve removed this task:\\n\" + \"%s\\n\" + \"Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                                taskRemoved, tasks.size());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Your task cannot be found!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String keyword \u003d inputs[1];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        for (Task task : tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            if (task.getDescription().matches(keyword)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                                matchingTasks.add(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            throw new DukeException(\"Oops! There is no matching task.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int index \u003d 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        for (Task task : tasks) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            output +\u003d String.format(\"%d.%s\\n\", index, task);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            index++;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        return output;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! I don\u0027t know what to search for.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public boolean isExit() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    throw new DukeException(\"Oops! You entered an invalid command.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static String createAddedMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n\" + \"%s\\n\" + \"Now you have %d tasks in the list.\\n\", task,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                tasks.size());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 174
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Storage(String pathname) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Attempts to save a TaskList into the specified file location."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param tasks the TaskList to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void saveTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                File directory \u003d new File(file.getParent());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    directory.mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            assert file.exists() : \"File should exist by now.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"D|%d|%s|%s\\n\", task.getIsDone() ? 1 : 0, task.getDescription(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"E|%d|%s|%s\\n\", task.getIsDone() ? 1 : 0, task.getDescription(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            ((Event) task).getAt());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"T|%d|%s\\n\", task.getIsDone() ? 1 : 0, task.getDescription());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Loads the TaskList from the specified file. If the file is not found, an"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * empty TaskList will be returned."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the TaskList that was saved in the specified file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public TaskList loadTasks() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                String[] strings \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                switch (strings[0]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Todo(strings[2], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Deadline(strings[2], strings[3], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Event(strings[2], strings[3], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 97
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public LocalDateTime getAt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at.format(DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return (isDone ? \"x\" : \" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 36
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 16
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static Ui ui \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns the singleton UI instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @see \u003ca href\u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     *      \"https://nus-cs2103-ay1920s1.github.io/website/se-book-adapted/chapters/designPatterns.html#singleton-pattern\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     *      Textbook reference on Singleton Object\u003c/a\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the UI instance to perform UI operations."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static Ui getInstance() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        if (ui \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns the next line inputted by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the next line inputted by the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        throw new IllegalStateException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Prints the given object to the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param output the object to be printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void printLine(Object output) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 50
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "geshuming": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "geshuming": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(0, 0);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 10
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Deadline task \u003d new Deadline(\"Lorem Ipsum\", \"12/03/2045 1234\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[D][ ] Lorem Ipsum (by: 12/03/2045 1234)\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Event task \u003d new Event(\"Lorem Ipsum\", \"12/03/2045 1234\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[E][ ] Lorem Ipsum (at: 12/03/2045 1234)\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Todo task \u003d new Todo(\"Lorem Ipsum\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[T][ ] Lorem Ipsum\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  }
]
