[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    mainClassName \u003d \"duke.gui.Launcher\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 27,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### Manage Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Add, remove and interact with your tasks to easily keep track of things you need to do. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `todo` - Add a todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Adds a new todo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`todo buy chocolate`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have successfully added the following task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[T][x] buy chocolate"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `deadline` - Add a deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Adds a new deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`deadline do homework /by 18/09/2019 1800`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have successfully added the following task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[D][x] do homework (by: 18/09/2019 1800)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `event` - Add an event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Adds a new event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`event birthday party /at 12/10/2019 1500`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have successfully added the following task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[E][x] birthday party (at: 18/09/2019 1800)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Lists all tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Here are your tasks:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "1. [T][x] buy chocolate"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "2. [D][x] do homework (by: 18/09/2019 1800)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "3. [E][x] birthday party (at: 18/09/2019 1800)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Marks a task as done or completed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Great! I have marked the following task as done:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[D][✓] do homework (by: 18/09/2019 1800)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Deletes a task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have deleted the following task:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[T][x] buy chocolate"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `find` - Search for a task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Search for a task matching a keyword."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`find homework`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have found the following tasks matching your query:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "1. [D][✓] do homework (by: 18/09/2019 1800)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `savefile` - Change save file."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Changes the save file from the default `duke.txt` to a user-specified one."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`savefile john.txt`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Done! I have switched to the following save file:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "john.txt"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "### `bye` - Exit the application."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Application closes."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 130,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static final SimpleDateFormat DATE_FORMATTER \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a new Duke instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.tasks \u003d storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Processes a command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Command string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Output string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String process(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String output \u003d c.executeCommand(this.tasks, this.storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            this.storage.persist(this.tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showError(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 37,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.ChangeSaveFileCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String command \u003d tokens[0].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new DoneCommand(tokens[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new DeleteCommand(tokens[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new FindCommand(tokens[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"savefile\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new ChangeSaveFileCommand(tokens[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new TodoCommand(tokens[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new DeadlineCommand(tokens[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                return new EventCommand(tokens[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                throw new InvalidCommandException(Ui.showInvalidCommand());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new InvalidCommandException(Ui.showInvalidCommand());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 48
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a new Storage instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String separator \u003d File.separator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.filePath \u003d String.format("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                \"%s%s%s%s%s\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                System.getProperty(\"user.dir\"), separator, \"data\", separator, \"duke.txt\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Modifies the path of the storage instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param fileName Save file name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setPath(String fileName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String separator \u003d File.separator;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.filePath \u003d String.format("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                \"%s%s%s%s%s\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                System.getProperty(\"user.dir\"), separator, \"data\", separator, fileName"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Loads tasks from save file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return TaskList with all saved tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    TaskList load() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FileInputStream fin \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fin);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Writes tasks to save file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks TaskList with current tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If file I/O fails."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void persist(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            // Create file if it does not exist"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FileOutputStream fout \u003d new FileOutputStream(file, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fout);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fout.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to write to save file.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 77
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Add a task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param taskId Task ID."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Task that was deleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws IndexOutOfBoundsException If ID is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Task deleteTask(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.tasks.remove(taskId - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param taskId Task ID."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Task that was marked done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws IndexOutOfBoundsException If ID is not found."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Task markDone(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Task task \u003d this.tasks.get(taskId - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates a numbered list of tasks matching a query."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param query Query string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Numbered list of matching tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public TaskList find(String query) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        TaskList matches \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            if (t.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                matches.addTask(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return matches;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Replaces current task list with tasks from another storage instance."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Target storage instance."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void importFrom(Storage storage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.tasks \u003d storage.load().tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates numbered list of all tasks in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Numbered list of all tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            output.append(String.format(\"%d. %s%n\", i + 1, tasks.get(i).toString()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return output.toString().trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 100
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Hello! How many I help you today?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showBye() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Bye! Hope to see you again soon :-)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Here are your tasks:\", tasks.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showDeletedTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Done! I have deleted the following task:\", task.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showDoneTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Great! I have marked the following task as done:\", task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showFindMatches(TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Done! I have found the following tasks matching your query:\", tasks.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showFindNoMatch() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Oh no! No task matching your query was found :-(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showChangedSaveFile(String fileName) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Done! I have switched to the following save file:\", fileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static String showAddedTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Done! I have successfully added the following task:\", task.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static String showInvalidCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Invalid command, please try again!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static String showError(Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"%s%n%s\", \"Error:\", e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a bye command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Bye message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Ui.showBye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ChangeSaveFileCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class ChangeSaveFileCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a change save file command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing new save file path."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public ChangeSaveFileCommand(String params) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Success message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        storage.setPath(this.params);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        tasks.importFrom(storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        System.out.println(tasks.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Ui.showChangedSaveFile(this.params);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 33
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String params;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a plain command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a command with parameters."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params Additional parameters necessary to execute the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Command(String params) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.params \u003d params.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * This method is abstract and needs to be implemented by child classes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String output from the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If command execution fails."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public abstract String executeCommand(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Getter for params."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Params."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String getParams() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.params;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a deadline command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing description and deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DeadlineCommand(String params) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of deadline that was added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If date parsing fails."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String[] tokens \u003d this.params.split(\" /by \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String description \u003d tokens[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String rawDate \u003d tokens[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Date by \u003d Duke.DATE_FORMATTER.parse(rawDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            tasks.addTask(newDeadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showAddedTask(newDeadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to parse date.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Missing date.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 50
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a delete command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing task ID."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DeleteCommand(String params) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   TaskList containing all tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Success message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If task ID is missing or invalid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            int taskId \u003d Integer.parseInt(this.params);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(taskId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showDeletedTask(deletedTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Task not found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a done command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing task ID."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DoneCommand(String params) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Success message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If task ID is missing or invalid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            int taskId \u003d Integer.parseInt(this.params);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Task doneTask \u003d tasks.markDone(taskId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showDoneTask(doneTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Task not found.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 38
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a event command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing description and date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public EventCommand(String params) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the event that was added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If date parsing fails."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String[] tokens \u003d this.params.split(\" /at \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String description \u003d tokens[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String rawDate \u003d tokens[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Date at \u003d Duke.DATE_FORMATTER.parse(rawDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showAddedTask(newEvent);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to parse date.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Missing date.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 50
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public FindCommand(String params) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return List of matching tasks or error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        TaskList matches \u003d tasks.find(this.params);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (matches.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showFindMatches(matches);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Ui.showFindNoMatch();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a list command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks Task list containing all tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Ui.showTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 25
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param params String containing description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public TodoCommand(String params) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(params);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks   Task list containing all tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of todo that was added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String executeCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Todo newTodo \u003d new Todo(this.params);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Ui.showAddedTask(newTodo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a Duke exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param message Description of the exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs an invalid command exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param message Description of the exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new dialog box."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new user dialog box."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return User dialog box."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Duke dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Duke dialog box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 66
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Launcher for Duke, necessary to avoid classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 32
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/toad.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mario.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Initializes the window."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Label welcomeMessage \u003d new Label(Ui.showWelcome());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, new ImageView(dukeImage)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String dukeOutput \u003d duke.process(userInput.getText());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Label dukeText \u003d new Label(dukeOutput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (dukeOutput.startsWith(\"Bye!\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a new deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param by          Date of the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the deadline\u0027s string representation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), Duke.DATE_FORMATTER.format(this.by));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a new event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param at          Date of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the event\u0027s string representation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), Duke.DATE_FORMATTER.format(this.at));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Getter for isDone."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return isDone."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Getter for description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Returns a cross or tick icon based on whether the task is done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Cross or tick icon."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\"; // return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the task\u0027s string representation."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Constructs a new todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the todo\u0027s string representation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return String representation of the todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 24
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void parseTodo_validInput_pass() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String input \u003d \"todo buy eggs\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(\"buy eggs\", Parser.parse(input).getParams());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 14
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void constructor_validInput_pass() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String description \u003d \"Sample todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Todo notDone \u003d new Todo(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertFalse(notDone.getIsDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void markAsDone_validInput_pass() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Todo testTodo \u003d new Todo(\"Sample todo\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        testTodo.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(testTodo.getIsDone());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Hello! I\u0027m Duke. What can I do for you?"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 34
    }
  }
]
