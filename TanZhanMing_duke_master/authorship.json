[
  {
    "path": "src/main/java/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter2 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter3 \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter4 \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter5 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter6 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter7 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter8 \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter9 \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter10 \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter11 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter12 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter13 \u003d new SimpleDateFormat(\"dd/MMM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter14 \u003d new SimpleDateFormat(\"dd/MMM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter15 \u003d new SimpleDateFormat(\"dd/MMM/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private static SimpleDateFormat formatter16 \u003d new SimpleDateFormat(\"dd/MMM/yyyy\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public static Date dateParser (String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter1.parse(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter2.parse(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter3.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter4.parse(date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter5.parse(date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter6.parse(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter7.parse(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter8.parse(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter9.parse(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter10.parse(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter11.parse(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter12.parse(date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter13.parse(date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter14.parse(date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter15.parse(date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return formatter16.parse(date);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        catch (Exception ignored) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 96
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.date \u003d DateParser.dateParser(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (date !\u003d null) { this.by \u003d date.toString(); }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String getDetails() {return \"D @ \" + super.getDetails() + \" @ \" + by; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public enum Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ADD,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        REMOVE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        DONE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        InputParser inputParser \u003d new InputParser(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            FileReading.checkFileExists(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }  catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            System.out.println(\"Oops. something went wrong with the duke.txt file\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            inputParser.actionDeterminer(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.date \u003d DateParser.dateParser(at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (date !\u003d null) { this.at \u003d date.toString(); }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String getDetails() {return \"E @ \" + super.getDetails() + \" @ \" + at; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 22
    }
  },
  {
    "path": "src/main/java/FileReading.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class FileReading {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public static void checkFileExists(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (! directory.exists()){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (!f.createNewFile()){loadFileContents(taskList, f);}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public static void loadFileContents(ArrayList\u003cTask\u003e taskList, File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String fullLine;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            fullLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            String[] strArr \u003d fullLine.split(\" @ \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            type \u003d strArr[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            desc \u003d strArr[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            done \u003d strArr[2];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            if (type.equals(\"D\") | type.equals(\"E\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                time \u003d strArr[3];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                ToDo toDo \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskList.add(toDo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                if (done.equals(\"true\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                    taskList.get(taskList.size() - 1).setDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                Deadline d \u003d new Deadline(desc, time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskList.add(d);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                if (done.equals(\"true\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                    taskList.get(taskList.size() - 1).setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                Event e \u003d new Event(desc, time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskList.add(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                if (done.equals(\"true\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                    taskList.get(taskList.size() - 1).setDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 64
    }
  },
  {
    "path": "src/main/java/FileWriting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class FileWriting {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (! directory.exists()){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        File tmp \u003d new File(\"data/temp.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if(!tmp.createNewFile()){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            Files.delete(Paths.get(\"data/temp.txt\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            tmp.createNewFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/temp.txt\",true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Iterator\u003cTask\u003e taskIterator \u003d taskList.iterator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        while (taskIterator.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            fw.write(taskIterator.next().getDetails() + System.lineSeparator());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Files.copy(Paths.get(\"data/temp.txt\"), Paths.get(\"data/duke.txt\"), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        Files.delete(Paths.get(\"data/temp.txt\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 31
    }
  },
  {
    "path": "src/main/java/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    private ModifyTaskList modifyTaskList \u003d new ModifyTaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected InputParser(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected void actionDeterminer (String input) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String firstWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                desc \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            ToDo toDo \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            modifyTaskList.addToTaskList(taskList, toDo, Duke.Action.ADD);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                by \u003d input.split(\" /by \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                desc \u003d input.split(\" /by \")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"OOPS!!! Incorrect description for event; remember to use the /by keyword.\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            Deadline d \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            modifyTaskList.addToTaskList(taskList, d, Duke.Action.ADD);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                at \u003d input.split(\" /at \")[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                desc \u003d input.split(\" /at \")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"OOPS!!! Incorrect description for event; remember to use the /at keyword.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            Event e \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            modifyTaskList.addToTaskList(taskList, e, Duke.Action.ADD);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            for (int a \u003d 0; a \u003c taskList.size(); a++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println((a + 1) + \". \" + taskList.get(a).toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"OOPS!!! Please enter a valid number\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"You only have \" + taskList.size() + \" tasks, please choose a number from that\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            modifyTaskList.changeTaskList(taskList, taskNumber - 1, Duke.Action.DONE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"OOPS!!! Please enter a valid number\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"You only have \" + taskList.size() + \" tasks, please choose a number from that\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            modifyTaskList.changeTaskList(taskList, taskNumber - 1, Duke.Action.REMOVE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 102
    }
  },
  {
    "path": "src/main/java/ModifyTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class ModifyTaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected ModifyTaskList() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected void addToTaskList(ArrayList\u003cTask\u003e taskList, Task t, Duke.Action action) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (action \u003d\u003d Duke.Action.ADD) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            ui.taskAdded(taskList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            FileWriting.writeToFile(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected void changeTaskList (ArrayList\u003cTask\u003e taskList, int taskNumber, Duke.Action action){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (action \u003d\u003d Duke.Action.REMOVE) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                ui.taskRemoved(taskList, taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                FileWriting.writeToFile(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            catch (IndexOutOfBoundsException | IOException err){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"You only have \" + taskList.size() + \" tasks, please choose a number from that\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        if (action \u003d\u003d Duke.Action.DONE){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                taskList.get(taskNumber).setDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                ui.taskDone(taskList, taskNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                FileWriting.writeToFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            catch (IndexOutOfBoundsException | IOException err){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                System.out.println(\"You only have \" + taskList.size() + \" tasks, please choose a number from that\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 39
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        isDone\u003dtrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String getDetails() {return description + \" @ \" + isDone; }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public String getDetails() {return \"T @ \" + super.getDetails();}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void ui() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void greeting(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void goodbye(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void taskAdded(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(taskList.get(taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void taskRemoved(ArrayList\u003cTask\u003e taskList, int taskNumber){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskList.get(taskNumber).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Now you have \" + (taskList.size()-1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void taskDone(ArrayList\u003cTask\u003e taskList, int taskNumber){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        System.out.println(taskList.get(taskNumber).toString() + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 40
    }
  },
  {
    "path": "src/test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "T @ finish JUnit testing @ false"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "D @ finish Project @ true @ Sat Apr 20 00:00:00 SGT 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "E @ game event @ false @ Wed Dec 23 00:00:00 SGT 2020"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 3
    }
  },
  {
    "path": "src/test/java/FileReadingTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class FileReadingTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void fileReadTest() throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ModifyTaskListTest modifyTaskListTest \u003d new ModifyTaskListTest();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        modifyTaskListTest.modifyTest();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        FileReading.checkFileExists(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput1 \u003d \"[T][✘] finish JUnit testing\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput2 \u003d \"[D][✓] finish Project (by: Sat Apr 20 00:00:00 SGT 2019)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput3 \u003d \"[E][✘] game event (at: Wed Dec 23 00:00:00 SGT 2020)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput1, taskList.get(0).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput2, taskList.get(1).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput3, taskList.get(2).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 22
    }
  },
  {
    "path": "src/test/java/InputParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class InputParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void inputTest() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        InputParser inputParser \u003d new InputParser(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input1 \u003d \"todo finish JUnit testing\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input2 \u003d \"random nonsense\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input3 \u003d \"deadline finish Project /by 20/04/2019\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input4 \u003d \"event game event /at 23-DEC-2020\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input5 \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input6 \u003d \"deadline will never surface /by 22/11/2039\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input7 \u003d \"more random nonsense\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input3);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input4);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input6);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input7);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(4, taskList.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 33
    }
  },
  {
    "path": "src/test/java/ModifyTaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "public class ModifyTaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    public void modifyTest() throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        InputParser inputParser \u003d new InputParser(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input1 \u003d \"todo finish JUnit testing\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input2 \u003d \"todo to-be-removed\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input3 \u003d \"random nonsense\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input4 \u003d \"deadline finish Project /by 20/04/2019\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input5 \u003d \"event game event /at 23-DEC-2020\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input6 \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input7 \u003d \"deadline will never surface /by 22/11/2039\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input8 \u003d \"done 3\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input9 \u003d \"delete 5\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String input10 \u003d \"delete 2\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput1 \u003d \"[T][✘] finish JUnit testing\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput2 \u003d \"[D][✓] finish Project (by: Sat Apr 20 00:00:00 SGT 2019)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        String expectedOutput3 \u003d \"[E][✘] game event (at: Wed Dec 23 00:00:00 SGT 2020)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input5);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input6);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input7);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input8);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input9);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        inputParser.actionDeterminer(input10);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput1, taskList.get(0).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput2, taskList.get(1).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "        assertEquals(expectedOutput3, taskList.get(2).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanZhanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanZhanMing": 42
    }
  }
]
