[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "version \u00271.0.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "run {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    archiveVersion \u003d \"1.0.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 34,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Duke is a chat bot for you to tasks your schedule with an "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "interactive command line interface (CLI). By typing commands you can "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "add, set and save your task list in a simple and fast manner. Please "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "try out Duke if you are interested!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "## 2. Quickstart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "2. Download the latest Duke.jar [here](https://github.com/brebeek/duke/releases/download/v0.1.4/duke-0.1.4.jar)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "5. Type the command in the command box and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it.\u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "   e.g. typing `list` and pressing \u003ckbd\u003eEnter\u003c/kbd\u003e will list all tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "All commands are *case insensitive*."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.1 `todo` - Adding to-do task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Adds an undone to-do task to task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `todo DESCRIPTION` "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `todo Have dinner`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.2 `event`- Adding event: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Adds an undone event with a time stamp to task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `event DESCRIPTION /at YYYY/MM/DD HH:mm` "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `event Orientation /at 2019/01/01 14:00`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.3 `deadline` - Adding deadline task: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Adds an undone deadline task with a due time to task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `deadline DESCRIPTION /by YYYY/MM/DD HH:mm` "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `deadline Video project /by 2019/07/31 21:59`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.4 `list` - Listing all tasks: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Lists all the tasks currently in task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `list` "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.5 `done` - Marking a task as done: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Marks a selected task in list as done.\u003cbr/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `done INDEX` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `done 1`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.6 `delete` - Deleting a task: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Deletes a task from list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `delete INDEX` "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `delete 1`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.7 `find` - Finding tasks by content matching: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Searches for all tasks with given keyword in task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `find KEYWORD` "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brebeek"
        },
        "content": "* e.g. `find book`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.8 `clear` - Clearing the task list: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Clears the task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `clear` "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brebeek"
        },
        "content": "### 3.9 `bye` - Exiting the chat bot:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Exits from the Duke GUI.\u003cbr/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brebeek"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Q: How do I transfer my data to another Computer?\u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brebeek"
        },
        "content": "A: Install the app in the other computer and overwrite the data "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brebeek"
        },
        "content": "file it creates at `\\duke\\data\\duke.txt` "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brebeek"
        },
        "content": "with the file that contains the data of your previous "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Duke folder."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brebeek"
        },
        "content": "## 5. Acknowledgements"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brebeek"
        },
        "content": "Some contents are implemented and modified in accordance to *CS2103T* "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brebeek"
        },
        "content": "course materials and tutorials."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "brebeek": 63,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.actionstack.DukeActionStack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.ui.DialogPanel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Main class of DukeBot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private AnchorPane mainLayout;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Image bot \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of Duke. Initiates instances used by the chat bot."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        ui \u003d new Ui(storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        DukeActionStack stack \u003d new DukeActionStack();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor used by Launcher."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this(\"/data/duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Overrides the start method in Application."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    //Reused from nus-cs2103-ay1920s1.github.io/ with minor modifications"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        initPane();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        setScrollPane();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        setAnchorPane();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private void initPane() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private void setScrollPane() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private void setAnchorPane() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                DialogPanel.getDukeDialog(new Label(ui.initMessage()), new ImageView(bot))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        );"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (handleUserInput()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private boolean handleUserInput() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (userInput.getText().contains(\"bye\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            response \u003d ui.readUserInput(userInput.getText());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        Label dukeText \u003d new Label(response);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                DialogPanel.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                DialogPanel.getDukeDialog(dukeText, new ImageView(bot))"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        );"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 148,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 7
    }
  },
  {
    "path": "src/main/java/duke/actionstack/DukeActionStack.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.actionstack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeActionStack {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private static LinkedList\u003cString\u003e actionStack;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of DukeActionStack."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeActionStack() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        actionStack \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static LinkedList\u003cString\u003e getStack() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return actionStack;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Retrieves the latest action."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return the most recent action String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String retrieveAction() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return actionStack.pop();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Pushes an action to the stack."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act Action string to be pushed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static void pushAction(String act) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        actionStack.push(act);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 34
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalTimeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class AddDeadline extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Adds a deadline task to list and returns a notification."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param storage storage of current duke instance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws DukeIllegalDescriptionException DukeIllegalDescriptionException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String addDeadline(String act, Storage storage) throws DukeIllegalDescriptionException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String dlDetail \u003d act.substring(9);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        int dlDivision \u003d dlDetail.indexOf(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String dlDescription \u003d dlDetail.substring(0, dlDivision - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String by \u003d dlDetail.substring(dlDivision + 3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            Task dl \u003d new Deadline(dlDescription, by);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            TaskList.taskList.add(dl);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String response \u003d (\"Got it. I\u0027ve added this task: \\n\" + dl.toString()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                    + \"\\nNow you have \" + (TaskList.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            storage.saveData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalDescriptionException(act);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalTimeFormatException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 43
    }
  },
  {
    "path": "src/main/java/duke/command/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalTimeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class AddEvent extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Adds an event to list and returns a notification."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param sto storage of current duke instance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws DukeIllegalDescriptionException DukeIllegalDescriptionException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String addEvent(String act, Storage sto) throws FileNotFoundException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            DukeIllegalDescriptionException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String eventDetail \u003d act.substring(6);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        int eventDivision \u003d eventDetail.indexOf(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String eventDescription \u003d eventDetail.substring(0, eventDivision - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String at \u003d eventDetail.substring(eventDivision + 3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            Task event \u003d new Event(eventDescription, at);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            TaskList.taskList.add(event);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String response \u003d (\"Got it. I\u0027ve added this task: \\n\" + event.toString()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                    + \"\\nNow you have \" + (TaskList.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            sto.saveData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalDescriptionException(act);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalTimeFormatException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 43
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class AddTodo extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Adds a to-do task to list and returns a notification."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param sto storage of current duke instance"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws DukeIllegalDescriptionException DukeIllegalDescriptionException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String addTodo(String act, Storage sto) throws DukeIllegalDescriptionException,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            FileNotFoundException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String tdDescription \u003d act.substring(5);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        if (tdDescription.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalDescriptionException(act);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        Task todo \u003d new ToDo(tdDescription);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        TaskList.taskList.add(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d (\"Got it. I\u0027ve added this task: \\n\" + todo.toString()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                + \"\\nNow you have \" + (TaskList.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sto.saveData();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Clear.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Clear extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Clears the task list and returns a notification."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String clear() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d \"Task list cleared.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        TaskList.taskList.clear();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 16
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Abstract class of command. Categorises command classes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Deletes a task and returns a notification."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param sto storage of current duke instance"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String delete(String act, Storage sto) throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        int d \u003d Integer.parseInt(act.substring(7)) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        Task temp \u003d TaskList.taskList.get(d);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        TaskList.taskList.remove(d);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d (\"Noted. I\u0027ve removed this task: \\n\" + temp.toString()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                + \"\\nNow you have \" + (TaskList.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sto.saveData();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Done extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Marks a task as done and returns a notification."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param sto storage of current duke instance"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String done(String act, Storage sto) throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        int n \u003d Integer.parseInt(act.substring(5));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        TaskList.taskList.get(n - 1).setDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d (\"Nice! I\u0027ve marked this task as done:\\n\" + TaskList.taskList.get(n - 1).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        sto.saveData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Find.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Find extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Finds all tasks containing a keyword and returns as a String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act command string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param sto storage of current duke instance"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return notification string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String find(String act, Storage sto) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String keyword \u003d act.substring(5);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        LinkedList\u003cTask\u003e foundList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        for (Task task : TaskList.taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                foundList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            response +\u003d (\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            for (int i \u003d 0; i \u003c foundList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response +\u003d (1 + i + \".\" + foundList.get(i).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            response +\u003d (\"Keyword not found ;_;\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class ListTasks extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Lists all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return string of listed tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String listTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d (\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            response +\u003d (1 + i + \".\" + TaskList.taskList.get(i).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeDuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeDuplicateTaskException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeDuplicateTaskException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(\"This task has been added already\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeFileNotFoundException extends FileNotFoundException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeFileNotFoundException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(\"file not found\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIllegalActionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeIllegalActionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeIllegalActionException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIllegalDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeIllegalDescriptionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeIllegalDescriptionException(String act) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + act + \" cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIllegalTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeIllegalTimeFormatException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DukeIllegalTimeFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(\"Please enter the time in YYYY/MM/DD HH:mm\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 7
    }
  },
  {
    "path": "src/main/java/duke/io/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Predefined commands Duke can take in."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "enum Action {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND, CLEAR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 8
    }
  },
  {
    "path": "src/main/java/duke/io/DuplicateChecker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.actionstack.DukeActionStack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DuplicateChecker {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private static String[] WHITELIST \u003d {\"list\", \"done\", \"delete\", \"find\", \"clear\"};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private static boolean checkWhitelist(String act) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        for (String white:WHITELIST) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (white.contentEquals(act)) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Checks for duplication of current task to add in previous tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act current user command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return true if a same task is found and false otherwise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static boolean checkDuplication(String act) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String command \u003d act.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        if (checkWhitelist(command)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        for (String prev: DukeActionStack.getStack()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (prev.contentEquals(act)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 34
    }
  },
  {
    "path": "src/main/java/duke/io/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.actionstack.DukeActionStack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.AddEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.Clear;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.Delete;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.AddDeadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.AddTodo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.ListTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.Done;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.command.Find;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeDuplicateTaskException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalActionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalDescriptionException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Makes sense of user\u0027s input and react in accordance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Parses user command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param act     keyword indicating the intended operation from user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param storage storage object to interact with"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws DukeIllegalDescriptionException DukeIllegalDescriptionException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws DukeIllegalActionException DukeIllegalActionException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static String parse(String act, Storage storage) throws FileNotFoundException,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            DukeIllegalDescriptionException, DukeIllegalActionException, DukeDuplicateTaskException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        if (DuplicateChecker.checkDuplication(act)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeDuplicateTaskException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            switch (Action.valueOf(act.split(\" \")[0].toUpperCase())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d ListTasks.listTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d Done.done(act, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d AddTodo.addTodo(act, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d AddDeadline.addDeadline(act, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d AddEvent.addEvent(act, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d Delete.delete(act, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d Find.find(act, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            case CLEAR:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d Clear.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                response \u003d \"No command detected!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            DukeActionStack.pushAction(act);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            throw new DukeIllegalActionException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "brebeek": 75
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private static String basePath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param filePath relative path of list storing file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Loads the assigned file and parse the stored list of tasks as \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return Existing list of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            FileReader in \u003d new FileReader(new File(basePath + filePath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                String type \u003d line.substring(line.indexOf(\".\") + 2, line.indexOf(\".\") + 3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                String state \u003d line.substring(line.indexOf(\".\") + 5, line.indexOf(\".\") + 6);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                String content \u003d line.substring(line.indexOf(\".\") + 8);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                String time \u003d \"0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                if (line.indexOf(\"(\") \u003e 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                    content \u003d line.substring(line.indexOf(\".\") + 8, line.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                    time \u003d line.substring(line.indexOf(\":\") + 2, line.indexOf(\")\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                parseLine(type, state, content, time, tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private void parseLine(String type, String state, String content,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                           String time, LinkedList\u003cTask\u003e tasks) throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            Task todo \u003d new ToDo(content);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (state.contentEquals(\"Y\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                todo.setDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            Task deadline \u003d new Deadline(content, time);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (state.contentEquals(\"Y\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                deadline.setDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            Task event \u003d new Event(content, time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            if (state.contentEquals(\"Y\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                event.setDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Saves the tasks of \u003ccode\u003eTaskList\u003c/code\u003e in designated file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws FileNotFoundException FileNotFoundException"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        File file \u003d new File(basePath + filePath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(file)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            for (Task task : TaskList.taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                out.println(task.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            createFolder();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Creates new folder if not exists."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void createFolder() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        String folderPath \u003d basePath + \"/data\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        File newFolder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Creates new file if not exists."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 121
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Deadline type task with a deadline time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of Deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param by time of deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws ParseException ParseException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assert by.length() \u003e 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.by \u003d new SimpleDateFormat(\"yyyy/MM/dd HH:mm\").parse(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + new SimpleDateFormat(\"yyyy/MM/dd HH:mm\").format(by) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Event type task with a time spot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param at time spot of happening"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @throws ParseException ParseException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assert at.length() \u003e 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.at \u003d new SimpleDateFormat(\"yyyy/MM/dd HH:mm\").parse(at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + new SimpleDateFormat(\"yyyy/MM/dd HH:mm\").format(at) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Task with description and completion state."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     *Constructor of a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assert description.length() \u003e 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Returns the status symbol of completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return String Y if done and N is not done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Sets the state of current task to done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 39
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * To-do task with description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     *Constructor of To-do task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param description description of to-do task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 20
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Holds a universal list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class TaskList extends LinkedList\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        taskList \u003d new LinkedList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Task get(int n) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return taskList.get(n);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public LinkedList getList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void setList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 45
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogPanel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Dialog panel class used for Duke\u0027s GUI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "//Reused from nus-cs2103-ay1920s1.github.io/ with minor modifications"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DialogPanel extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Constructor of DialogPanel."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param label Label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param iv ImageView"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public DialogPanel(Label label, ImageView iv) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        text \u003d label;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static DialogPanel getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return new DialogPanel(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Get method for user dialog."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param l Label"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @param iv ImageView"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * @return user DialogPanel"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static DialogPanel getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        var db \u003d new DialogPanel(l, iv);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 58
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeDuplicateTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalActionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.exception.DukeIllegalDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Generates and prints the greeting message of DukeBot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String initMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        return (\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public Ui(Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        System.out.println(\"Task list not retrieved.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     * Reads user input from console and passes to parser to react."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brebeek"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public String readUserInput(String act) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            return Parser.parse(act, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        } catch (DukeIllegalDescriptionException | DukeIllegalActionException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                | DukeDuplicateTaskException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brebeek"
        },
        "content": "            return (e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 44
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static void deadlineTest() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assertEquals(\"[D][N] what (by: 2019/07/02 09:00)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                new Deadline(\"what\", \"2019/07/02 09:00\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public void test() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        DeadlineTest.deadlineTest();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        EventTest.eventTest();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        TodoTest.todoTest();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 15
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static void eventTest() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assertEquals(\"[E][N] what (at: 2019/07/02 09:00)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                new Event(\"what\", \"2019/07/02 09:00\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brebeek"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brebeek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brebeek"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    public static void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brebeek"
        },
        "content": "        assertEquals(\"[T][N] what\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brebeek"
        },
        "content": "                new ToDo(\"what\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brebeek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brebeek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brebeek": 13
    }
  }
]
