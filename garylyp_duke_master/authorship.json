[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "T | 1 | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "E | 0 | e1 | e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "D | 1 | d1 | d2"
      }
    ],
    "authorContributionMap": {
      "garylyp": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Deadline(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfo() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(by: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String ROOT \u003d \"D:\\\\Gary\\\\Uni\\\\NUS\\\\1920SEM1\\\\CS2103T\\\\Practices\\\\duke\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String DIVIDER \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"\\t Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"\\t What can I do for you?\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        loadData();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String action \u003d sc.next();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(\"     Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                markTaskAsDone(sc);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                updateData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                onTodoActionCalled(sc);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                updateData();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                onDeadlineActionCalled(sc);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                updateData();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                onEventActionCalled(sc);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                updateData();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                deleteTask(sc);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                updateData();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    sc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    System.out.print(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"    You have no task at the moment.\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"    %d.\", i+1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"%s\\n\", taskList.get(i));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void markTaskAsDone(Scanner sc) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int idx \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.get(idx).setDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"       %s\\n\", taskList.get(idx));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! You have no task at the moment.\\n\", 1, taskList.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        taskList.size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    1,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void deleteTask(Scanner sc) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int idx \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task task \u003d taskList.remove(idx);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! You have no task at the moment.\\n\", 1, taskList.size());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        1,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        taskList.size());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    1,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void onTodoActionCalled(Scanner sc) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task newTask \u003d addNewTodo(taskName, false);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            printAddTaskMessage(newTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"todo\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void onDeadlineActionCalled(Scanner sc) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d taskName.split(\"\\\\s*/by\\\\s*\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty() || taskInfo[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task newTask \u003d addNewDeadline(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            printAddTaskMessage(newTask);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"deadline\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! There must be exactly one argument before and\\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    \"     one argument after the keyword %s.\\n\", \"/by\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.print(\"     ☹ OOPS!!! Date must be in the format \\\"dd/MM/yyyy HHmm\\\"\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void onEventActionCalled(Scanner sc) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d taskName.split(\"\\\\s*/at\\\\s*\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName.isEmpty() || taskInfo[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task newTask \u003d addNewEvent(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            printAddTaskMessage(newTask);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\", \"event\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            System.out.printf(\"     ☹ OOPS!!! There must be exactly one argument before and\\n\" +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    \"     one argument after the keyword %s.\\n\", \"/at\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static Task addNewTodo(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static Task addNewEvent(String taskName, String additionalInfo, boolean isDone) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Event(taskName, additionalInfo);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static Task addNewDeadline(String taskName, String additionalInfo, boolean isDone)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        cal.setTime(sdf.parse(additionalInfo));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Deadline(taskName, additionalInfo);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void printAddTaskMessage(Task task) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.print(\"     Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void loadData() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        file \u003d new File(ROOT + \"/data/duke.txt\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String[] taskInfo \u003d sc.nextLine().split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                switch (taskInfo[0]) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        addNewTodo(taskInfo[2], taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        addNewDeadline(taskInfo[2], taskInfo[3], taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        addNewEvent(taskInfo[2], taskInfo[3], taskInfo[1].equals(\"1\"));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                file \u003d new File(file.getAbsolutePath());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static void updateData() throws IOException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(\"T\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getStatus());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getName());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(\"D\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getStatus());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getName());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getAdditionalInfo());"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(\"E\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getStatus());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getName());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(SEPARATOR);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getAdditionalInfo());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (i \u003c taskList.size()) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 304,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    EmptyDescriptionException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(\"Empty Description\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Event(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfo() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(at: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 26
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class EventException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 4
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(\"Invalid Command\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static int NOT_DONE \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static int DONE \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private int status;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String getTypeSymbol();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String getAdditionalInfo();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String displayAdditionalInfo();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d DONE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setNotDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected  String getName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected int getStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String getStatusSymbol() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (status \u003d\u003d DONE) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s%s %s %s\", getTypeSymbol(), getStatusSymbol(), name, displayAdditionalInfo());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 47
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String displayAdditionalInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 23
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[T][✗] dododo "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (by: sad)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✓] today (by: tmr)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (by: sad)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✓] today (by: tmr)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[T][✗] dododo "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 55
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (by: sad)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✗] today (by: tmr)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[T][✗] dododo "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (by: sad)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✓] today (by: tmr)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (by: sad)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[D][✓] today (by: tmr)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[T][✗] dododo "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[E][✗] 456 (by: 789)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo lalala"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event happy /at sad"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline today /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo dododo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event 456 /at 789"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "garylyp": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM Check for differences in the two text files"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "FC ACTUAL.txt EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "garylyp": 21
    }
  }
]
