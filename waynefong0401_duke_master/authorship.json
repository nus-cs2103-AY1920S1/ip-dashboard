[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    mainClassName \u003d \"duke.memo.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 28,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "T | 0 | a"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 1
    }
  },
  {
    "path": "src/main/java/duke/memo/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private MessageGenerator msgGenerator;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if input/output goes wrong."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator.generateErrorMsg(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if input/output goes wrong."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param filePath  Path to the log file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator \u003d new MessageGenerator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msgGenerator.generateErrorMsg(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Get response for input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param input input from GUI."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return return the result as a string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getResponse(String input)  {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return c.execute(taskList, msgGenerator,storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 71
    }
  },
  {
    "path": "src/main/java/duke/memo/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 11
    }
  },
  {
    "path": "src/main/java/duke/memo/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskTypeError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public AddCommand(String cmd) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String[] curTaskDetails \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Task curTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            switch (curTaskDetails[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new ToDo(curTaskDetails[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new Deadline(curTaskDetails[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                curTask \u003d new Event(curTaskDetails[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                throw new TaskTypeError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            taskList.add(curTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateAddedTaskMsg(curTask.toString(), taskList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(curTaskDetails[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 52
    }
  },
  {
    "path": "src/main/java/duke/memo/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public abstract String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage)  throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskNotExistException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private int targetTaskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if no task index no enter or in wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param targetTaskNo  The target task index no."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If the input cannot be format to number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DeleteCommand(String targetTaskNo) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.targetTaskNo \u003d Integer.parseInt(targetTaskNo) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NotNumberException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Task deletedTask \u003d taskList.remove(targetTaskNo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateDeletedTaskMsg(deletedTask.toString(), taskList.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskNotExistException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 40
    }
  },
  {
    "path": "src/main/java/duke/memo/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NotNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskNotExistException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private int targetTaskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if no task index no enter or in wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param targetTaskNo  The target task index no."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If the input cannot be format to number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DoneCommand(String targetTaskNo) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.targetTaskNo \u003d Integer.parseInt(targetTaskNo) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NotNumberException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Task doneTask \u003d taskList.get(targetTaskNo).taskDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateDoneTaskMsg(doneTask.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskNotExistException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 40
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskTypeError;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        throw new TaskTypeError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 15
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String  execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msgGenerator.generateByeMsg();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 17
    }
  },
  {
    "path": "src/main/java/duke/memo/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TaskNotExistException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ArrayList\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e(); //ArrayList to store the task that contain the keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Iterator\u003cTask\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            while (iter.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                Task curTask \u003d iter.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                if (curTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                    resultTasks.add(curTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return msgGenerator.generateResultTaskMsg(resultTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TaskNotExistException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 36
    }
  },
  {
    "path": "src/main/java/duke/memo/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.message.MessageGenerator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String  execute(TaskList taskList, MessageGenerator msgGenerator, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msgGenerator.generateListTaskMsg(taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 12
    }
  },
  {
    "path": "src/main/java/duke/memo/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskList  list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException throw if there is a problem in the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Iterator\u003cString\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            add(readLog(iter.next()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Convert raw log string to a task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param log  Raw log."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return Task return the parsed log"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException Throw if there is a problem in the log."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task readLog(String log) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String[] taskDetails \u003d log.split(\" \\\\| \",4);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"T\" :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ToDo(taskDetails);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"E\" :"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new Event(taskDetails);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        case \"D\" :"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new Deadline(taskDetails);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 53
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NoDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The description of a \" + taskType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NoTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NoTimeException(String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The time details of a \" + taskType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/NotNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class NotNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public NotNumberException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! there is no number entered\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TaskLoadException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskLoadException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskLoadException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! I cannot load the history record.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TaskNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskNotExistException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskNotExistException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but there is no such task in the list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TaskTypeError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TaskTypeError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TaskTypeError() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 13
    }
  },
  {
    "path": "src/main/java/duke/memo/exception/TimeFormatErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class TimeFormatErrorException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public TimeFormatErrorException(String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"OOPS!!! The time format of a \" + taskType + \" cannot be read.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 16
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Rectangle clip \u003d new Rectangle();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setHeight(99.0f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setWidth(99.0f);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setArcHeight(100);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        clip.setArcWidth(100);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Return a DialogBox contain text input by user and the icon for user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param text text input by user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param img icon for user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return DialogBox This returns a dialog box contain text and img."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Return a DialogBox contain text output by duke and the icon for duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param text text output by duke."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param img icon for duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return DialogBox This returns a dialog box contain text and img."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 86
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showHelloMsg();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 34
    }
  },
  {
    "path": "src/main/java/duke/memo/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shoebill-cute.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shoebill1.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Add a dialogBox with welcome message to the dialogBox container."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void showHelloMsg() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello, this is Duke! How can I help you?\",dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 63
    }
  },
  {
    "path": "src/main/java/duke/memo/message/MessageGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.message;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class MessageGenerator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public MessageGenerator() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateByeMsg() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the added task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskList ArrayList of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String contains all task details."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateListTaskMsg(TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        int taskNum \u003d taskList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (taskNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return \"There is no task in your list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (taskNum \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg \u003d String.format(\"There is 1 tasks in your list:\\n%s\", taskList.get(0).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            int curIndex \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg \u003d String.format(\"There are %d tasks in your list:\",taskList.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                msg +\u003d \"\\n\" + curIndex++ + \".\" + task.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateDoneTaskMsg(String taskDetails) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + taskDetails;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateDeletedTaskMsg(String taskDetails, int taskNo) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\" + taskDetails"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                + \"\\nNow you have \" + taskNo + \" tasks in the list.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the added task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param addedTask  Details of the added task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskListLength  Length of the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String This returns the details of the added task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateAddedTaskMsg(String addedTask, int taskListLength) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task: \\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                addedTask, taskListLength);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateErrorMsg(String errMsg) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return errMsg;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Display the matched task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param resultTasks  Details of the matched task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return String This returns details of the match tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String generateResultTaskMsg(ArrayList\u003cTask\u003e resultTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String msg \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d resultTasks.iterator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            msg +\u003d \"\\n\" + iter.next().toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return  msg;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 80
    }
  },
  {
    "path": "src/main/java/duke/memo/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ErrorCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Static method parse for Parser."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * To parse the log into a command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param cmd  Full command in log file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return parsed command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException Throw if there is a problem in the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public static Command parse(String cmd) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (cmd.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            if (cmd.split(\" \", 2)[0].equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new FindCommand(cmd.substring(5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            if (cmd.split(\" \", 2)[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new DoneCommand(cmd.substring(4).trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else if (cmd.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            if (cmd.split(\" \", 2)[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new DeleteCommand(cmd.substring(6).trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            return new AddCommand(cmd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 49
    }
  },
  {
    "path": "src/main/java/duke/memo/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private FileReader fr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param filePath  Path to the log file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws IOException Unpredicted I/O exception."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        this.filePath \u003d System.getProperty(\"user.dir\") + \"/\" + filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            System.out.println(\"File has been created.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Store file to local."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public void store(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String filePath \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            Iterator\u003cTask\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            while (iter.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                fw.write(iter.next().getPrintableMsg() + System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Load file to local."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @return arraylist of string contains lines of log"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws IOException  File does not exist."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ArrayList\u003cString\u003e lineList \u003d new ArrayList\u003c\u003e();   //Store the records loaded from log"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            lineList.add(line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return lineList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 72
    }
  },
  {
    "path": "src/main/java/duke/memo/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TimeFormatErrorException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static String TASKTYPE \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static SimpleDateFormat DATEFORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Deadline Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Deadline Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Deadline(String desc) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.trim().isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(TASKTYPE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            String[] details \u003d desc.split(\"/\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d details[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            by \u003d DATEFORMAT.parse(details[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASKTYPE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoTimeException(TASKTYPE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Deadline Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Deadline Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Deadline(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2], TASKTYPE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            by \u003d DATEFORMAT.parse(taskDetails[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASKTYPE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DATEFORMAT.format(by);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DATEFORMAT.format(by) + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 66
    }
  },
  {
    "path": "src/main/java/duke/memo/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.TimeFormatErrorException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static String TASKTYPE \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static SimpleDateFormat DATEFORMAT \u003d new SimpleDateFormat((\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Event Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Event(String desc) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.trim().isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(TASKTYPE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            String[] details \u003d desc.split(\"/\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d details[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            at \u003d DATEFORMAT.parse(details[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASKTYPE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoTimeException(TASKTYPE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Event Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Event(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2],TASKTYPE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            this.at \u003d DATEFORMAT.parse(taskDetails[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new TimeFormatErrorException(TASKTYPE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + DATEFORMAT.format(at);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DATEFORMAT.format(at) + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 67
    }
  },
  {
    "path": "src/main/java/duke/memo/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no time description or wrong format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskType  Task type for the Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If details missing or in wrong format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task(String desc,String taskType) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            throw new NoDescriptionException(taskType);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            description \u003d desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public Task taskDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public abstract String getPrintableMsg();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 51
    }
  },
  {
    "path": "src/main/java/duke/memo/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import duke.memo.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    private static String TASKTYPE \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for ToDo Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param desc  Description for the ToDo Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If detail is missing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ToDo(String desc) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(desc,TASKTYPE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Constructor for ToDo Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * Throw error if there is no description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @param taskDetails  Details for the Deadline Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     * @throws DukeException  If detail is missing."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public ToDo(String[] taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        super(taskDetails[2],TASKTYPE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        isDone \u003d taskDetails[1].equalsIgnoreCase(\"1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String getPrintableMsg() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 40
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-radius: 10; -fx-background-color: grey;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-boarder-radius: 30;\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.memo.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 19
    }
  },
  {
    "path": "src/test/java/duke/memo/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 10
    }
  },
  {
    "path": "src/test/java/duke/memo/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void deadlineTest() throws Throwable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book/2/9/2019 2359\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[D]✘ return book (by: 02/09/2019 2359)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        deadline.taskDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[D]✓ return book (by: 02/09/2019 2359)\", deadline.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 15
    }
  },
  {
    "path": "src/test/java/duke/memo/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void eventTest() throws Throwable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Event event \u003d new Event(\"have meeting/1/9/2019 1400\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[E]✘ have meeting (at: 01/09/2019 1400)\", event.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        event.taskDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        assertEquals(\"[E]✓ have meeting (at: 01/09/2019 1400)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 18
    }
  },
  {
    "path": "src/test/java/duke/memo/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "package duke.memo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    void todoTest() throws Throwable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Assertions.assertEquals(\"[T]✘ read book\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        todo.taskDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "        Assertions.assertEquals(\"[T]✓ read book\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Hello from Weiwen"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ b"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✘ jadfsl"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The time details of a event cannot be empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! The time details of a event cannot be empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "5.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✓ a"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✓ a"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ b"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[T]✘ jadfsl"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "5.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! there is no number entered"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "OOPS!!! I\u0027m sorry, but there is no such task in the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "[T]✓ a"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1.[T]✘ b"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "2.[T]✘ jadfsl"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "3.[E]✘ 1 (at: b)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "4.[D]✘ ab (by: c)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 64
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo b"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "todo jadfsl"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fajsklda"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "event 1/b"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline ab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "deadline ab/c"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete ab"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 34
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynefong0401"
        },
        "content": "1. Create a folder `[project root]\\text-messageGenerator-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "waynefong0401": 1,
      "-": 73
    }
  }
]
