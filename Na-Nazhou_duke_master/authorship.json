[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 39,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "[![Build Status](https://travis-ci.org/Na-Nazhou/duke.svg?branch\u003dmaster)](https://travis-ci.org/Na-Nazhou/duke)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "## Application Screenshot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "![alt text][screenshot]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "[screenshot]: Ui.png "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 1. Adding a todo task: `todo` "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Adds a todo task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "   [T][✘] read book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 2. Adding a deadline task: `deadline` "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Adds a deadline task to the task list. The time of the task is optional."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The date follows `dd/mm/yyyy` format and the time follows `HHMM` format (24-hour)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The time of the deadline is optional but the date must be present."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE [TIME]`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`deadline return book /by 06/06/2019 0800`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 3. Adding a event task: `event` "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Adds a event task to the task list. All the dates follows "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`dd/mm/yyyy` format and all the time follows `HHMM` format (24-hour)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format 1: `event DESCRIPTION /at START_DATE START_TIME END_DATE END_TIME`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "If the start date and the end date of the event to be added is on the same day, format 2 can be used."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format 2: `event DESCRIPTION /at DATE START_TIME END_TIME`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`event project meeting /at 06/08/2019 1400 1600`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 4. Listing all tasks: `list`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Shows a list of all tasks in the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 5. Marking a task as done: `done`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 6. Deleting a task: `delete`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 7. Searching for a task: `find`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Finds tasks whose descriptions contain the given keyword."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "The search is case sensitive. (e.g book will not match Book.)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Only the description is searched. Keyword can be matched "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "partially. (e.g. car will match carpet)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 8. Undoing previous command: `undo`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Restores the task list to the state before the previous undoable command was executed."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Undoable commands include commands that modify the task list’s content (todo, deadline, event, delete, done and clear)."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 9. Redoing the previously undone command: `redo`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Reverses the most recent `undo` command."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `redo`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 10. Clearing all tasks: `clear`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Clears all tasks from the task list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 11. Exiting the program: `bye`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "### 12. Saving the data"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Task list data are saved in the hard disk automatically after any command that changes the data."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Add todo: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Add deadline: `deadline DESCRIPTION /by DATE [TIME]`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Add event: `event DESCRIPTION /at START_DATE START_TIME END_DATE END_TIME`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Add one-day event: `event DESCRIPTION /at DATE START_TIME END_TIME`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* List: `list`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Done: `done INDEX`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Delete: `delete INDEX` "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Find: `find KEYWORD`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Undo: `undo`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Redo: `redo`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Clear: `clear`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "* Bye: `bye`"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 175,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.parser.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.VersionedTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_LOADING_ERROR;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.formatErrorMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this(Storage.DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param filePath file path where the data is (to be) stored"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.tasks \u003d new VersionedTaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            ui.printResponse(MESSAGE_LOADING_ERROR);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.tasks \u003d new VersionedTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Command c \u003d CommandParser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return formatErrorMsg(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.printResponse(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        while (!this.isExit) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Command c \u003d CommandParser.parse(fullCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                ui.printResponse(c.execute(tasks, ui, storage));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                ui.printResponse(formatErrorMsg(e.getMessage()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Main entry point of the application."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 81
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 33
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deals with loading tasks from the given file and saving tasks in the same file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Default file path used if the user doesn\u0027t provide the file name."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a Storage object given the file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param filePath the file path where the tasks are stored."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                 It can be either relative or absolute."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.file \u003d new File(System.getProperty(\"user.dir\") + filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Loads the existing tasks from the data file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return an ArrayList of tasks which are stored as serialized string in the data file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the file does not exit or the data in the file does not"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                       follow the correct format (i.e the serialized form of task objects)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                String[] data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                switch (data[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    throw new DukeException(\"Failed to load tasks.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Data not found.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Failed to load tasks.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts the current tasks in the list to serialized form and"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * save each task to the destination file. A new file is created if the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * destination file does not exits."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks The list of tasks to be saved to the destination file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if file writing fails"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                fw.write(task.encode());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                fw.write(Ui.LS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Failed to save tasks.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 100
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_ADD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.getTaskTotalMsg;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs an AddCommand object given task type and task parameters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if any of the arguments are invalid"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public AddCommand(String taskType, String taskParams) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assert taskType !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assert taskParams !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Todo(taskParams);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.isBlank() || taskParams.equals(\"/by\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.startsWith(\"/by\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!taskParams.contains(\"/by\") || taskParams.endsWith(\"/by\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] deadlineArgs \u003d taskParams.split(\"\\\\s*/by\\\\s*\", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.isBlank() || taskParams.equals(\"/at\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.startsWith(\"/at\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!taskParams.contains(\"/at\") || taskParams.endsWith(\"/at\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] eventArgs \u003d taskParams.split(\"\\\\s*/at\\\\s*\", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Event(eventArgs[0], eventArgs[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.commit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return concatLines(MESSAGE_ADD, newTask.getIndentedFormat(), getTaskTotalMsg(tasks));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 73
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_CLEAR;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.clearTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.commit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return MESSAGE_CLEAR;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns true if the command triggers termination of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Executes the command and return the response message as a String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 24
    }
  },
  {
    "path": "src/main/java/duke/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_DONE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Marks a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a CompleteCommand object given index of the task to be completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param index the 1-based index of the task to be completed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public CompleteCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d tasks.completeTask(this.index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.commit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return concatLines(MESSAGE_DONE, task.getIndentedFormat());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_DELETE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.getTaskTotalMsg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deletes a task from the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a DeleteCommand object given index of the task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param index the 1-based index of the task to be deleted"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d tasks.deleteTaskByIndex(this.index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.commit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return concatLines(MESSAGE_DELETE, task.getIndentedFormat(), getTaskTotalMsg(tasks));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_EXIT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return MESSAGE_EXIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_FIND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_NO_MATCHING_TASKS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Finds and lists all tasks in the task list whose description contains the specified keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Keyword matching is case sensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        TaskList filteredTasks \u003d tasks.filterByKeyWord(this.keyWord);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (filteredTasks.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return MESSAGE_NO_MATCHING_TASKS;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_FIND, filteredTasks.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_NO_TASKS_IN_LIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * List all the tasks in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return MESSAGE_NO_TASKS_IN_LIST;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_INDEX, tasks.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 24
    }
  },
  {
    "path": "src/main/java/duke/command/RedoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_INDEX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_NO_TASKS_IN_LIST;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_REDO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.redo();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_REDO, MESSAGE_NO_TASKS_IN_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_REDO, MESSAGE_INDEX, tasks.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 25
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_INDEX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_NO_TASKS_IN_LIST;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_UNDO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.concatLines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.undo();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_UNDO, MESSAGE_NO_TASKS_IN_LIST);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return concatLines(MESSAGE_UNDO, MESSAGE_INDEX, tasks.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 25
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deals with all exceptions related to the duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.CompleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.RedoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Parses raw input from user and returns its corresponding \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param command The raw input from user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return an executable \u003ccode\u003eCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the command is undefined"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^done\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new CompleteCommand(taskId);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^(todo|deadline|event).*\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] commandArgs \u003d command.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String taskType \u003d commandArgs[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String taskParams;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                taskParams \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                taskParams \u003d commandArgs[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new AddCommand(taskType, taskParams);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^delete\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new DeleteCommand(taskId);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String keyWord \u003d (command.split(\"\\\\s+\", 2)[1]).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new FindCommand(keyWord);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.equals(\"clear\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.equals(\"undo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.equals(\"redo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new RedoCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 61
    }
  },
  {
    "path": "src/main/java/duke/parser/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deals with date time parsing and formatting."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter inputDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputDateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE, d MMMM yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputDateFormatterShort \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static LocalDate parseDate(String dateString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalDate.parse(dateString, inputDateFormatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static LocalTime parseTime(String timeString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalTime.parse(timeString, inputTimeFormatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputDateFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Optional\u003cLocalTime\u003e byTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a Deadline object given a description and the deadline (with date)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * of the task as a String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param by          deadline which contains a date and a optional time (e.g."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    \u002701/01/2019 1800\u0027 means 1st January 2019, 6pm). The time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    can be omitted. The date input must follow dd/mm/yyyy format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    and the time must follow HHmm format if it exists."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if invalid time format is passed in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.byDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (dateTimeArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.byTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.byTime \u003d Optional.of(parseTime(dateTimeArr[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Invalid time format.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task copy \u003d new Deadline(getDescription(), by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (this.getIsDone()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                copy.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return copy;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatBy() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (byTime.isPresent()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatter.format(byDate),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(byTime.get()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s\", outputDateFormatter.format(byDate));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts a deadline into encoded form (e.g."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * \u0027D | 0 | return book | 11/10/2019 1100\u0027)."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"D | %d | %s | %s%s\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getStatusCode(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getDescription(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(byDate),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                byTime.map(byTime -\u003e \" \" + inputTimeFormatter.format(byTime)).orElse(\"\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), formatBy());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 92
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputDateFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputDateFormatterShort;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Represents a task with both start time and end time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs an Event object given a description and the start and end time (with date)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * of the event as a String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param at          a String containing date and time of both start and end of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    If the dates of the start and end time of the event are the same,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    only the start date is required (e.g. \u002711/10/2019 1000 1100\u0027 means the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    starts on 11th October 2019, 10AM and ends at 11AM on the same day)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    However, if the start and end dates of the event are event, the end date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    should be specified (e.g. \u002701/01/2019 0700 03/01/2019 1800\u0027 means"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    the event starts on 1st January 2019, 6PM and ends on 3rd January 2019, 6PM)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if start time is before end time or invalid time format is passed in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d at.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.startDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.startTime \u003d parseTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (dateTimeArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endTime \u003d parseTime(dateTimeArr[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endDate \u003d parseDate(dateTimeArr[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endTime \u003d parseTime(dateTimeArr[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.validate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Invalid time format.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Alternative constructor for Event object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param startDate   the start date of the event"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param startTime   the start time of the event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param endDate     the end date of the event"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param endTime     the end time of the event"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if start time of the event is before the end time"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Event(String description, LocalDate startDate, LocalTime startTime, LocalDate endDate,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                 LocalTime endTime) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.validate();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Event(String description, LocalDate eventDate, LocalTime startTime,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                 LocalTime endTime) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this(description, eventDate, startTime, eventDate, endTime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task copy \u003d new Event(this.getDescription(), this.startDate, this.startTime, this.endDate, this.endTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (this.getIsDone()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                copy.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return copy;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void validate() throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (startDate.isAfter(endDate)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Start date cannot be after end date\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (startDate.equals(endDate) \u0026\u0026 startTime.isAfter(endTime)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Start time cannot be after end time\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatAt() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (startDate.equals(endDate)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(startDate),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s, %s\","
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(startDate),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(endDate),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts an event into encoded form (e.g."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * \u0027E | 0 | coding workshop | 11/10/2019 1000 11/10/2019 1100\u0027)."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"E | %d | %s | %s %s %s %s\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getStatusCode(),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getDescription(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(startDate),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(endDate),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), formatAt());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 138
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Ui.INDENT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract Task copy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns the description of this task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return The description of this task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Sets the status of this task to be completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the task has already been marked as done before"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"This task was marked as done before.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts an event into encoded form."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the encoded form of this task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract String encode();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Adds indentation in from of the string representation of this task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * and returns the indented format of this task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the indented format of this task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String getIndentedFormat() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return INDENT + this.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected int getStatusCode() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 72
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_REDO_UNSUPPORTED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_UNDO_UNSUPPORTED;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs an empty list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a task list containing the elements of the specified ArrayList of Tasks,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * in the order they are returned by the list\u0027s iterator."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks the ArrayList of Tasks whose tasks are to be placed into this task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.tasks \u003d cloneTasks(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Clones a list of tasks (deep copy)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks tasks to be cloned"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the deep copy of the tasks to be cloned"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static ArrayList\u003cTask\u003e cloneTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e copy \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            copy.add(task.copy());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return copy;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns an ArrayList of tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return all the tasks in the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void setTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.tasks \u003d cloneTasks(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns the task at the specified position in this task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param index the 1-based index of the task to return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the task at the specified position in this task list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the index is out of range (index \u003c 0 || index \u003e\u003d size())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task getTaskByIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return tasks.get(index - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    String.format(\"Task No.%d is not present in your list. \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                            + \"Please enter a valid task ID.\", index));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Appends the specified task to the end of this task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param task the task to be appended to the end of this task list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Marks the task at the specified position in this task list as done and returns the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param index the 1-based index of the task to be marked as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the task at the specified position in this task list after marking it as done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the index is out of range (index \u003c 0 || index \u003e\u003d size())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task completeTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d getTaskByIndex(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Removes the task at the specified position in this task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Shifts any subsequent tasks to the left (subtracts one from their indices)."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param index the 1-based index of the task to be removed"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the task that was removed from the list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the index is out of range (index \u003c 0 || index \u003e\u003d size())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task deleteTaskByIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d getTaskByIndex(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void clearTasks() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns the number of tasks in this task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return the number of tasks in this task list"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns true if this task list contains no tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return true if this task list contains no tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Filters this task list and returns a new task list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * which only contains tasks with keyword appearing in its description."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param keyWord the keyword to be used for filtering this task list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return a TaskList with all the tasks containing the keyWord"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList filterByKeyWord(String keyWord) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (task.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                newList.add(task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return new TaskList(newList);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            sb.append(String.format(\"%d.%s\", i, task));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                sb.append(Ui.LS);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean canUndo() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean canRedo() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void undo() throws DukeException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        throw new DukeException(MESSAGE_UNDO_UNSUPPORTED);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void redo() throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        throw new DukeException(MESSAGE_REDO_UNSUPPORTED);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void commit() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 184
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Represents a task with description only."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a Todo object given a description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description The description of the todo item"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the description is empty string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task copy \u003d new Todo(getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (this.getIsDone()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                copy.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return copy;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts a todo into encoded form (e.g. \u0027T | 0 |  join sports club\u0027)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"T | %d | %s\", getStatusCode(), getDescription());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 48
    }
  },
  {
    "path": "src/main/java/duke/task/VersionedTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_REDO_FAILED;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.ui.Message.MESSAGE_UNDO_FAILED;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Task list that keeps track of its own history."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class VersionedTaskList extends TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private List\u003cTaskList\u003e states;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private int currentStatePointer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs an empty versioned list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public VersionedTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Constructs a versioned task list containing the elements of the specified ArrayList of Tasks,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * in the order they are returned by the list\u0027s iterator."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param initialState the ArrayList of Tasks whose tasks are to be placed into this task list in the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                     initial state."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public VersionedTaskList(ArrayList\u003cTask\u003e initialState) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(initialState);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.states \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.states.add(new TaskList(initialState));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        currentStatePointer \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean canUndo() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return currentStatePointer \u003e 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean canRedo() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return currentStatePointer \u003c states.size() - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Keeps a deep copy of the current state of the task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void commit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        removeStatesAfterCurrentPointer();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        states.add(new TaskList(getTasks()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        currentStatePointer++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void removeStatesAfterCurrentPointer() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        states.subList(currentStatePointer + 1, states.size()).clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Undo the previous command and restore the task list to the previous state."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if no commands to undo"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void undo() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (!canUndo()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(MESSAGE_UNDO_FAILED);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.currentStatePointer--;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        setTasks(states.get(currentStatePointer).getTasks());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Redo the previous undo command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if no commands to redo"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void redo() throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (!canRedo()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(MESSAGE_REDO_FAILED);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.currentStatePointer++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        setTasks(states.get(currentStatePointer).getTasks());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 89
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        final Circle clip \u003d new Circle(25, 25, 25);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Color.gray(0.865), new CornerRadii(10), new Insets(5, 5, 5, 5))));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns a DialogBox object containing user avatar and user response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param text input from user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param img  an image representing User\u0027s face"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return a User DialogBox"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Returns a DialogBox object containing duke avatar and duke response."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param text response from Duke"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param img  an image representing Duke\u0027s face"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return a Duke DialogBox"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 85
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Message.MESSAGE_WELCOME, dukeImage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to the dialog container."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String input \u003d userInput.getText().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 59
    }
  },
  {
    "path": "src/main/java/duke/ui/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\" + Ui.LS + \"What can I do for you?\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_INDEX \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_NO_TASKS_IN_LIST \u003d \"There are currently no tasks in your list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_LOADING_ERROR \u003d \"An empty data file duke.txt is \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            + \"created in the current directory.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_NO_MATCHING_TASKS \u003d \"There are no matching tasks for the key word.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_CLEAR \u003d \"Sure. I\u0027ve cleared the entire task list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_UNDO \u003d \"Undo success!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_UNDO_FAILED \u003d \"No more commands to undo!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_UNDO_UNSUPPORTED \u003d \"Undo not supported for this task list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_REDO \u003d \"Redo success!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_REDO_FAILED \u003d \"No more commands to redo!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String MESSAGE_REDO_UNSUPPORTED \u003d \"Redo not supported for this task list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_TASK_COUNT \u003d \"Now you have %d task%s in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static String getTaskTotalMsg(TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        int total \u003d tasks.getSize();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(MESSAGE_TASK_COUNT, total, total \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static String formatErrorMsg(String errorMsg) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"☹ OOPS!!! %s\", errorMsg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static String concatLines(String... lines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.join(Ui.LS, lines);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints a platform independent line separator."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        out.print(LS);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void printResponse(String response) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        out.println(response);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 44
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "         prefWidth\u003d\"380.0\" spacing\u003d\"10.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"600\" minWidth\u003d\"400\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 24
    }
  },
  {
    "path": "src/test/java/duke/parser/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.CompleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.RedoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_exit() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_list() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_done() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"done 1\") instanceof CompleteCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_delete() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_addWithValidInput_success() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"todo Test\") instanceof AddCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"deadline Test /by 01/01/2019 0700\") instanceof AddCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"event Test /at 01/01/2019 0700 1500\") instanceof AddCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_find() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"find keyWord\") instanceof FindCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_clear() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"clear\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_undo() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"undo\") instanceof UndoCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_redo() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(CommandParser.parse(\"redo\") instanceof RedoCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parse_unknownCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            CommandParser.parse(\"Random command\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 78
    }
  },
  {
    "path": "src/test/java/duke/parser/DateTimeParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class DateTimeParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parseDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        LocalDate date \u003d DateTimeParser.parseDate(\"01/01/2019\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(LocalDate.of(2019, 1, 1), date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parseTime_Am() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        LocalTime time \u003d DateTimeParser.parseTime(\"0700\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(LocalTime.of(7, 0), time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void parseTime_Pm() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        LocalTime time \u003d DateTimeParser.parseTime(\"1800\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(LocalTime.of(18, 0), time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 29
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_withTime() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019 0700\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[D][✘] Test (by: Tue, 1 January 2019, 07:00AM)\", deadline.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_withoutTime() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[D][✘] Test (by: Tue, 1 January 2019)\", deadline.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void encode() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019 0700\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"D | 0 | Test | 01/01/2019 0700\", deadline.encode());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 27
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void constructorTest_invalidTimeFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Event event \u003d new Event(\"Test\", \"99/99/9999 9999 9999\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"Invalid time format.\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void constructorTest_startAfterEndDate_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Event event \u003d new Event(\"Test\", \"02/01/2019 0700 01/01/2019 1500\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"Start date cannot be after end date\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void constructorTest_startAfterEndTime_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Event event \u003d new Event(\"Test\", \"01/01/2019 1500 0700\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"Start time cannot be after end time\", e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_onSameDate() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 1500\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[E][✘] Test (at: 1 January 2019, 07:00AM - 03:00PM)\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_onDifferentDates() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 02/01/2019 1500\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[E][✘] Test (at: 1 January 2019, 07:00AM - 2 January 2019, 03:00PM)\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void encode() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 1500\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"E | 0 | Test | 01/01/2019 0700 01/01/2019 1500\", event.encode());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 60
    }
  },
  {
    "path": "src/test/java/duke/task/TaskImplStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskImplStub extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskImplStub(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return new TaskImplStub(getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 18
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        taskList.addTask(new TaskImplStub(\"Test\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), taskList.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getTaskByIndex_invalidTaskId_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            taskList.getTaskByIndex(1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"Task No.1 is not present in your list. \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    + \"Please enter a valid task ID.\", e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void addTask_increaseSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, taskList.getTasks().size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, taskList.getTasks().size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void deleteTaskByIndex_validTaskId_success() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, taskList.getTasks().size());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        taskList.deleteTaskByIndex(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, taskList.getTasks().size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void deleteTaskByIndex_invalidTaskId_exceptionThrow() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            taskList.deleteTaskByIndex(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"Task No.1 is not present in your list. \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    + \"Please enter a valid task ID.\", e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, taskList.getSize());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, taskList.getSize());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void isEmpty() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertTrue(taskList.isEmpty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertFalse(taskList.isEmpty());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 81
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task \u003d new TaskImplStub(\"Test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Test\", task.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[✘] Test\", task.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void markAsDone_notDone_success() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, task.getStatusCode());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, task.getStatusCode());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void markAsDone_alreadyDone_exceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"This task was marked as done before.\", e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 45
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void constructorTest_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            new Todo(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Todo todo \u003d new Todo(\"Test\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[T][✘] Test\", todo.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void encode() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Todo todo \u003d new Todo(\"Test\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"T | 0 | Test\", todo.encode());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 32
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final InputStream systemIn \u003d System.in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final PrintStream systemOut \u003d System.out;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ByteArrayOutputStream testOut;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        testOut \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setOut(new PrintStream(testOut));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void restoreStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setOut(systemOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String getOutput() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return testOut.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void readCommand_withTrailingSpaces() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String data \u003d \"Test   \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ByteArrayInputStream testIn \u003d new ByteArrayInputStream(data.getBytes());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setIn(testIn);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Test\", ui.readCommand());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setIn(systemIn);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(System.lineSeparator(), getOutput());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 52
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the time of an event cannot be empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of an event cannot be empty."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The time of an event cannot be empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 72
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "D | 0 | oral presentation preparation | 18/09/2019 1400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "E | 0 | coding workshop | 11/10/2019 1000 11/10/2019 1100"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book /by 06/06/2019 0800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting /at 06/08/2019 1400 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline /by 06/06/2019 0800"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event /at Aug 06/08/2019 1400 06/08/2019 1600"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "blah"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 34
    }
  }
]
