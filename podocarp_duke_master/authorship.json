[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# Da Suntec Task Manager"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "Brought to you by a disciple of DaMyth."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "## Was ist das?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "This is a todo/deadline management system."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "![screenshot](docs/Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "Usage is simple and easy. It is very straightforward. Just boot it up and it"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "will teach you in 5 seconds how to use it. If you still can\u0027t use it, then know"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "that you are being *judged*. Da Suntec looks upon us all."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "## How to get it"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "You are amazed by this wonder. You want to get it. Click releases and download"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "the jar file then. It is so wonderfully easy and convenient!"
      }
    ],
    "authorContributionMap": {
      "podocarp": 12,
      "-": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    id \u0027com.github.sherter.google-java-format\u0027 version \u00270.8\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "group \u0027jxd.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "googleJavaFormat {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    options style: \u0027AOSP\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    archiveVersion \u003d \"0.4.1\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 36,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        assert (!by.isEmpty());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.by \u003d Task.parseDate(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Task.stringifyDate(by) + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 16
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": " * An example of a custom control using FXML. This control represents a dialog box consisting of an"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": " * ImageView to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        dialog.setFont(Font.font(\"Monospace\", 12));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Flips the dialog box such that the ImageView is on the left and text on the right. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 57
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** Main Duke class. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.setPath(path);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            tasks \u003d new TaskList(Storage.loadTasks());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(e.getCause());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this(\"tasks.dmp\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 17,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** A type of task called Event. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        assert (!at.isEmpty());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.at \u003d Task.parseDate(at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Task.stringifyDate(at) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 17
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** A launcher class to workaround classpath issues. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 9
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** A GUI for Duke using FXML. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 25
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** Controller for MainWindow. Provides the layout for the other controls. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String greeting \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \"THIS IS DA                                                  \\r\\n                                                         ttt:::t                                                  \\r\\n                                                         t:::::t                                                  \\r\\n                                                         t:::::t                                                  \\r\\n    ssssssssss   uuuuuu    uuuuuunnnn  nnnnnnnn    ttttttt:::::ttttttt        eeeeeeeeeeee        cccccccccccccccc\\r\\n  ss::::::::::s  u::::u    u::::un:::nn::::::::nn  t:::::::::::::::::t      ee::::::::::::ee    cc:::::::::::::::c\\r\\nss:::::::::::::s u::::u    u::::un::::::::::::::nn t:::::::::::::::::t     e::::::eeeee:::::ee c:::::::::::::::::c\\r\\ns::::::ssss:::::su::::u    u::::unn:::::::::::::::ntttttt:::::::tttttt    e::::::e     e:::::ec:::::::cccccc:::::c\\r\\n s:::::s  ssssss u::::u    u::::u  n:::::nnnn:::::n      t:::::t          e:::::::eeeee::::::ec::::::c     ccccccc\\r\\n   s::::::s      u::::u    u::::u  n::::n    n::::n      t:::::t          e:::::::::::::::::e c:::::c             \\r\\n      s::::::s   u::::u    u::::u  n::::n    n::::n      t:::::t          e::::::eeeeeeeeeee  c:::::c             \\r\\nssssss   s:::::s u:::::uuuu:::::u  n::::n    n::::n      t:::::t    tttttte:::::::e           c::::::c     ccccccc\\r\\ns:::::ssss::::::su:::::::::::::::uun::::n    n::::n      t::::::tttt:::::te::::::::e          c:::::::cccccc:::::c\\r\\ns::::::::::::::s  u:::::::::::::::un::::n    n::::n      tt::::::::::::::t e::::::::eeeeeeee   c:::::::::::::::::c\\r\\n s:::::::::::ss    uu::::::::uu:::un::::n    n::::n        tt:::::::::::tt  ee:::::::::::::e    cc:::::::::::::::c\\r\\n  sssssssssss        uuuuuuuu  uuuunnnnnn    nnnnnn          ttttttttttt      eeeeeeeeeeeeee      cccccccccccccccc\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"\\n\\nCommands available:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"1. help -- shows this again\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"2. list -- lists all tasks\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"3. todo \u003cname\u003e -- adds a task with a specified name\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"4. Deadline \u003cname\u003e /by dd/mm/yyyy hh:mm -- adds a deadline with the specified name and date\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"5. Event \u003cname\u003e /at dd/mm/yyyy hh:mm -- adds an event with the specified name and date\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"6. delete \u003cnumber\u003e -- deletes tasks numbered \u003cnumber\u003e shown in the list command\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"7. find \u003csearch term\u003e -- searches for matching tasks\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    + \"8. done \u003cnumber\u003e -- marks item with number from list command as done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greeting, dukeImage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            response \u003d Parser.handleCommand(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            response \u003d e.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        dialogContainer"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                .getChildren()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                .addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 68
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** Handles user input and decides on what to do. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Handles and parses text commands input by user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param in The input from user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param sc Scanner object from UI class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return false signals that user wants to quit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String handleCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String in \u003d arr[0].trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        String others \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            others \u003d arr[1].trim(); // extra info"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        switch (in) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return \"Bye!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return \"Here are the tasks in your list:\\n\" + TaskList.stringifyTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    Task t \u003d TaskList.get(Integer.parseInt(others) - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    t.markDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    return String.format("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                            \"Nice! I\u0027ve marked this task as done:\\n  %s\", t.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                TaskList.removeTask(Integer.parseInt(others) - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return \"Deleted!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    if (others.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException(\"Todo name cannot be empty!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    return TaskList.addTask(new ToDo(others));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    String[] details \u003d others.split(\" /by \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        return TaskList.addTask(new Deadline(details[0], details[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                                \"Wrong format for deadline! Format: \u003cname\u003e /by dd/mm/yyyy hh:mm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    String[] details \u003d others.split(\" /at \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        return TaskList.addTask(new Event(details[0], details[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                                \"Wrong format for event! Format: \u003cname\u003e /at dd/mm/yyyy hh:mm\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return (\"Here are matching tasks in your list:\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                        + TaskList.stringifyTasks(TaskList.query(others));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                return MainWindow.greeting;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                throw new DukeException(\"Unknown command \" + in);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 70
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** This class handles the saving and loading of tasks. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static String path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Sets the path to load and save from."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param path The path to load and save from."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void setPath(String path) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.path \u003d path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Save tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param storage The list of tasks to store."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static void saveTasks(ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FileOutputStream fs \u003d new FileOutputStream(path);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fs);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            oos.writeObject(storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            // Either FileNotFoundException or IOException which should not occur"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(\"Can\u0027t save! \" + e.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Loads tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The loaded list, it will be empty if there is a read failure."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            FileInputStream fs \u003d new FileInputStream(path);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ArrayList\u003cTask\u003e res \u003d (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            // Either FileNotFoundException or IOException which should not occur"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            DukeException de \u003d new DukeException(\"Can\u0027t load file!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            de.initCause(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            throw de;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 57
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** A task. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Mark the task as done. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the status icon for the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return String of either a tick or cross."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Parses string date into Date object according to our format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param s Input string to be parsed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The parsed Date object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected static Date parseDate(String s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            return parser.parse(s);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(\"Your date needs to be in dd/mm/yyyy hhmm format!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return new Date();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Converts Date object into string of our format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param d The Date object in question."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The string representation in our format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    protected static String stringifyDate(Date d) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy, hh:mm aaa\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** Handles events associated with the list of tasks. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static ArrayList\u003cTask\u003e storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Creates empty task list. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Creates list with existing list of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Gets the 1-indexed i-th task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param i The i-th task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return The task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static Task get(int i) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            return storage.get(i - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            throw new DukeException(\"That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Prints nice text about how many tasks are in the list. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    private static String getStorageSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"Now you have \" + storage.size() + \" tasks in your list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String stringifyTasks(ArrayList\u003cTask\u003e a) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d a.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Task t \u003d a.get(i - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            sb.append(String.format(\"%d. %s\\n\", i, t.toString()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Prints out all the tasks in the list. */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String stringifyTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return stringifyTasks(storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String addTask(Task t) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        storage.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.saveTasks(storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + t.toString() + \"\\n\" + getStorageSize();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Removes the 1-indexed i-th task from the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param the i-th task to remove."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static String removeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            t \u003d storage.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            storage.remove(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            throw new DukeException(\"That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Storage.saveTasks(storage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\", t.toString())"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                + getStorageSize();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * Searches the list of tasks for something and returns everything that matches."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @param s The string to search for."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     * @return An arraylist of tasks that contains all matches."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "podocarp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public static ArrayList\u003cTask\u003e query(String s) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        for (Task t : storage) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            if (t.getDesc().contains(s)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                res.add(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 94
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "/** This class handles the todo class of events. */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 13
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"1000.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "podocarp": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"1000\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "podocarp": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void taskListGet_success() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        Task t \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        TaskList tl \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            System.out.println(TaskList.get(1).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    public void missingFile_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            Duke d \u003d new Duke(\"data/notexist/asd.dmp\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    \"java.io.FileNotFoundException: data/notexist/asd.tmp (No such file or directory)\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "podocarp": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "asd"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "podocarp": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "podocarp"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ -e \"./tasks.dmp\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    rm ./tasks.dmp"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "podocarp"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "podocarp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "podocarp"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "podocarp"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "podocarp"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "podocarp"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "podocarp"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "podocarp"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "podocarp"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "podocarp": 38
    }
  }
]
