[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 40,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### Task Management "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "You can ask Maid Chan to manage your tasks to be done, including todos, events and deadlines. You can add tasks, delete tasks, mark tasks as done, and archive tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `list` - List tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "List all tasks in the task list. You can specify a particular type of tasks to be listed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`list (optional argument)`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`optional arugment` can be `todo`, `event`, `deadline`, or `archive`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "1.[task type][status] task description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "2.[task type][status] task description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "..."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `todo` - Add todo tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Add a todo task to the task list. Todo tasks do not have a specific time or due date."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`todo task description`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [T][✘] task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `event` - Add events"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Add an event to the task list. Events have a specific time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`event task description /at DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [E][✘] task description (at: DD/MM/YYYY HHMM)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `deadline` - Add deadlines"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Add a deadline to the task list. Deadlines have a specific due date."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`deadline task description /by DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [D][✘] task description (by: DD/MM/YYYY HHMM)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `done` - Mark tasks as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Mark a specific task as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`done index_number` or `done task description`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Got it. I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [task type][✓] task description"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `delete` - Delete tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Delete a specific task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`delete index_number` or `delete task description`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [task type][status] task description"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `archive` - Archive tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Archive a specific task. Archived tasks will be saved at a separate file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`archive index_number`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Noted. I\u0027ve archived this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [task type][status] task description"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `restore` - Restore tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Restore a specific task from the archive. "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`restore index_number`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Got it. I\u0027ve restored this task:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  [task type][status] task description"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Now you have n tasks in your list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `find` - Search for tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Search for tasks using the search keyword."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`find search_keyword`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "1.[task type][status] task description"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "2.[task type][status] task description"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "..."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "### `bye` - Exit the program"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "Program exits after 2 seconds of delay."
      }
    ],
    "authorContributionMap": {
      "niqiukun": 144,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a Date object using the string supplied."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param rawDate the string to be parsed as a Date object in the format of dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the Date object parsed from the given string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if rawDate supplied is not in the format of dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Date parseDate(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Date newDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(rawDate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return newDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Cannot parse date/time.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Converts a Date object into the display format of dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param date the Date object to be converted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the formatted date string, in the format of dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static String formatDate(Date date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 33
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        displayPicture.setClip(new Circle(displayPicture.getX() + 49, displayPicture.getY() + 49, 49));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Returns a dialog box containing the user\u0027s message and image."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param text the user\u0027s message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param img the user\u0027s image."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return a dialog box containing the user\u0027s message and image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Returns a dialog box containing Duke\u0027s reply and image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param text Duke\u0027s reply."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return a dialog box containing Duke\u0027s reply and image."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 77
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a new instance of the Duke assistant which stores the task list in the given file path."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @deprecated because of the addition of the graphic interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param filePath the file path to the task list file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList(storage.loadMain());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a new instance of the Duke assistant which has a specified GUI and stores the task list in the"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * given file path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param filePath the file path to the task list file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param window the GUI for Duke to interact with."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Duke(String filePath, MainWindow window) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui \u003d new Ui(window);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList(storage.loadMain());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Starts an instance to receive and execute prompts from the user using command line."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @deprecated because of the addition of the graphic interface."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Initialises a Duke instance and shows the welcome message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Handles and executes a command entered by the user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param fullCommand the command entered by the user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void handleUserCommand(String fullCommand) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 93,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 8
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            stage.setTitle(\"メイドちゃん - Maid Chan\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            MainWindow window \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            duke \u003d new Duke(\"data/tasks.txt\", window);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            window.setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            duke.init();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (input.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                DialogBox.getUserDialog(input, userImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        duke.handleUserCommand(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private void handleKeyTyped() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (input.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            sendButton.setDisable(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            sendButton.setDisable(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected void handleDukeResponse(String response) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 70
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.ArchiveCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.RestoreCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Parses a rawCommand string into the corresponding Command object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param rawCommand the raw command string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the Command object parsed from the raw command string supplied."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the raw command string cannot be parsed into any Command objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Command parse(String rawCommand) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        rawCommand \u003d rawCommand.strip();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] words \u003d rawCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new AddCommand(\"todo\", rawCommand.substring(words[0].length() + 1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder argumentBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            String option \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder optionArgumentBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            boolean isOptionArgument \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                if (words[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    option \u003d words[i].substring(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    isOptionArgument \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } else if (!isOptionArgument) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    argumentBuilder.append((argumentBuilder.length() \u003d\u003d 0 ? \"\" : \" \") + words[i]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    optionArgumentBuilder.append((optionArgumentBuilder.length() \u003d\u003d 0 ? \"\" : \" \") + words[i]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new AddCommand(words[0], argumentBuilder.toString(), option, optionArgumentBuilder.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003e words[0].length() + 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                return new ListCommand(rawCommand.substring(words[0].length() + 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"Please specify the task to be deleted.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new DeleteCommand(rawCommand.substring(7));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"Please specify the task to be marked as done.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new DoneCommand(rawCommand.substring(5));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"Please specify a search keyword.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new FindCommand(rawCommand.substring(5));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"archive\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"Please specify the task to be archived.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new ArchiveCommand(Integer.parseInt(rawCommand.substring(8)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"restore\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (rawCommand.length() \u003c words[0].length() + 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"Please specify the task to be restored.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new RestoreCommand(Integer.parseInt(rawCommand.substring(8)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means ╥﹏╥\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 84
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private File mainFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private File archivedFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs an object that handles file save and load using given the file path."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param path the file path to the task list file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        mainFile \u003d new File(path);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String archivedFilePath \u003d path.substring(0, path.indexOf(\"/\")) + \"/archived.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        archivedFile \u003d new File(archivedFilePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Loads the task list from a specific file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the content of the task list file in raw string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String load(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(fileScanner.nextLine() + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return myBuilder.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Loads the task list from the main file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the content of the task list file in raw string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String loadMain() throws FileNotFoundException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return load(mainFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Loads the task list from the archive file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the content of the task list file in raw string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String loadArchive() throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return load(archivedFile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Saves the task list to a specific file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list given to be saved to the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param file the file object to store the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task list cannot be saved to the file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private void save(TaskList tasks, File file) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                writer.write(t.toExportFormat() + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Save the task list to the main file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list given to be saved to the file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task list cannot be saved to the file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void saveMain(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.save(tasks, mainFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Save the task list to the archived file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param archivedTasks the archived task list to be saved to the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task list cannot be saved to the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void saveArchive(TaskList archivedTasks) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.save(archivedTasks, archivedFile);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 104
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs an empty list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a list of tasks using imported raw string from the file system."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param s the raw string loaded from the file system."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the raw string cannot be formatted into tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList(String s) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert s.length() \u003e 0 : s;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] lines \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            addTask(Task.fromImportFormat(line));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the number of tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets a particular task from the list using index number."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param taskNum the index number of the task to be retrieved."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the task retrieved from the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Task getTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"You do not have a task with index \" + taskNum + \".\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets a particular task from the list using task description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param taskDescription the description of the task to be retrieved."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the task retrieved from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Task getTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        int taskNum \u003d findExactTask(taskDescription);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (taskNum \u003d\u003d -1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"You do not have a task with description \\\"\" + taskDescription + \"\\\".\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return getTask(taskNum);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task to be added to the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Deletes a particular task from the list using index number."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param taskNum the index number of the task to be deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"You do not have a task with index \" + taskNum + \".\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Deletes a particular task from the list using description."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param taskDescription the description of the task to be deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the task cannot be found."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void deleteTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        int taskNum \u003d findExactTask(taskDescription);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (taskNum \u003d\u003d -1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"You do not have a task with description \\\"\" + taskDescription + \"\\\".\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        deleteTask(taskNum);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Finds tasks from the list with descriptions matching the keyword."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param keyword the keyword to search for tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList findTask(String keyword) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TaskList newList \u003d new TaskList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (Task myTask : tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (myTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                newList.addTask(myTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Finds the task with a description which matches the keyword exactly and returns the task\u0027s index."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param keyword the keyword to search for tasks."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the index of the first matching task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public int findExactTask(String keyword) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Task myTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (myTask.getDescription().equals(keyword)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                return i + 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Filters the task list with a specific task type."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param taskType the task type used to filter the list."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the filtered task list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public TaskList filterByTaskType(Class taskType) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TaskList newList \u003d new TaskList();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (Task myTask : tasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (taskType.isInstance(myTask)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                newList.addTask(myTask);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Task myTask \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(i + \".\" + myTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (i \u003c tasks.size()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                myBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return myBuilder.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 174
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private MainWindow window;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command line interface that handles display of prompts and receiving user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @deprecated use {@link #Ui(MainWindow)} instead."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a graphic interface that handles display of prompts and receiving user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Ui(MainWindow window) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.window \u003d window;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message to the console."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @deprecated use {@link #printGuiMessage(String)} instead."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param message the message to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert message.strip().length() \u003e 0 : message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] messages \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        for (String line : messages) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            System.out.println(\"     \" + line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message to the GUI."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param message the message to be printed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printGuiMessage(String message) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert message.strip().length() \u003e 0 : message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        window.handleDukeResponse(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message when a task is added to the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task added to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printTaskAdded(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"Got it (ﾟ▽ﾟ)/ \\nI\u0027ve added this task: \\n  \" + task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                + \"\\nNow you have \" + Ui.pluralize(\"task\", tasks.getSize()) + \" in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message when a task is marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"Got it (ﾟ▽ﾟ)/ \\nI\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message when a task is to be deleted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task to be deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list before deletion."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printTaskDeleted(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"Noted (^._.^)ﾉ \\nI\u0027ve removed this task: \\n  \" + task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                + \"\\nNow you have \" + Ui.pluralize(\"task\", tasks.getSize() - 1) + \" in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message when a task is to be archived."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task to be deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list before deletion."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printTaskArchived(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"Noted (^._.^)ﾉ \\nI\u0027ve archived this task: \\n  \" + task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                + \"\\nNow you have \" + Ui.pluralize(\"task\", tasks.getSize() - 1) + \" in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints a message when a task is restored."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param task the task restored from archive."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list before deletion."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printTaskRestored(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"Got it (ﾟ▽ﾟ)/ \\nI\u0027ve restored this task: \\n  \" + task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                + \"\\nNow you have \" + Ui.pluralize(\"task\", tasks.getSize()) + \" in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints all tasks in the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printListTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(\"Here are the tasks in your list:\\n\").append(tasks.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            printGuiMessage(myBuilder.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            printGuiMessage(\"There is no task in your list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints search results from the task list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param results the list of search results."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printFindTasks(TaskList results) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (results.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            StringBuilder myBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myBuilder.append(\"Here are the matching tasks in your list:\\n\").append(results.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            printGuiMessage(myBuilder.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            printGuiMessage(\"There is no matching task in your list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Prints an error to the console."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param e the error to be printed."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Reads a command from user input in the console."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @deprecated because of the addition of the graphic interface."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the raw command string read from user input."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Shows the welcome message."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"こんにちは！メイドちゃんです！\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Shows the exit message."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        printGuiMessage(\"さよなら！また会おうね！\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Converts the item specified in its plural form."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param item the item to be converted."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param quantity the number of the item."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the plural form of the item with quantifier."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static String pluralize(String item, Integer quantity) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert quantity \u003e 0 : quantity;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert item.length() \u003e 0 : item;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (quantity \u003d\u003d 1) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return \"1 \" + item;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return quantity + \" \" + item + \"s\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 189
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String commandName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String optionName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String optionArgument;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to add a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param commandName the name of the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public AddCommand(String commandName, String argument) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to add a task with an option."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param commandName the name of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param optionName the name of the option supplied to the command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param optionArgument the argument of the option supplied to the command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public AddCommand(String commandName, String argument, String optionName, String optionArgument) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.optionName \u003d optionName;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.optionArgument \u003d optionArgument;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes an add command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (this.commandName) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Todo(this.argument);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printTaskAdded(myTask, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!this.optionName.equals(\"by\") || this.optionArgument.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Deadline(this.argument, DateUtil.parseDate(optionArgument));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printTaskAdded(myTask, tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            if (!this.optionName.equals(\"at\") || this.optionArgument.equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d new Event(this.argument, DateUtil.parseDate(optionArgument));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.addTask(myTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printTaskAdded(myTask, tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveMain(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (this \u003d\u003d other) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (!(other instanceof AddCommand)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        AddCommand command \u003d (AddCommand) other;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (this.commandName.equals(\"todo\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return this.commandName.equals(command.commandName)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.argument.equals(command.argument);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return this.commandName.equals(command.commandName)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.argument.equals(command.argument)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.optionArgument.equals(command.optionArgument)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    \u0026\u0026 this.optionName.equals(command.optionName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 102
    }
  },
  {
    "path": "src/main/java/duke/command/ArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ArchiveCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private int argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to delete a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public ArchiveCommand(int argument) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes an archive command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TaskList archivedTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            archivedTasks \u003d new TaskList(storage.loadArchive());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            archivedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask \u003d tasks.getTask(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printTaskArchived(myTask, tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        archivedTasks.addTask(myTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveArchive(archivedTasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks.deleteTask(argument);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveMain(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 45
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Determines if a command is an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return whether the command is an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to delete a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DeleteCommand(String argument) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a delete command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d tasks.getTask(Integer.parseInt(argument));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printTaskDeleted(myTask, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.deleteTask(Integer.parseInt(argument));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d tasks.getTask(argument);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printTaskDeleted(myTask, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            tasks.deleteTask(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveMain(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to mark a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public DoneCommand(String argument) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a done command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d tasks.getTask(Integer.parseInt(argument));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            myTask \u003d tasks.getTask(argument);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        myTask.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printTaskDone(myTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveMain(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes an exit command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task\u003cVoid\u003e delay \u003d new Task\u003c\u003e() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            protected Void call() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    Thread.sleep(2000);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        delay.setOnSucceeded((x) -\u003e Platform.exit());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        new Thread(delay).start();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to find tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public FindCommand(String argument) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a find command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printFindTasks(tasks.findTask(argument));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to list all tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to list tasks of a specific type."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public ListCommand(String argument) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a list command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (argument \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            ui.printListTasks(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            switch (argument) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            case \"all\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printListTasks(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printFindTasks(tasks.filterByTaskType(Todo.class));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printFindTasks(tasks.filterByTaskType(Deadline.class));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printFindTasks(tasks.filterByTaskType(Event.class));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            case \"archive\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                TaskList archivedTasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    archivedTasks \u003d new TaskList(storage.loadArchive());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                    archivedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                ui.printFindTasks(archivedTasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                throw new DukeException(\"\\\"\" + argument + \"\\\" is not a valid task type.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 69
    }
  },
  {
    "path": "src/main/java/duke/command/RestoreCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class RestoreCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private int argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a command to restore an archived task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param argument the argument supplied to the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public RestoreCommand(int argument) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Executes a restore command using the given task list, UI and file storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param tasks the task list supplied."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param ui the UI supplied."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param storage the file storage supplied."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the command fails to execute."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        TaskList archivedTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            archivedTasks \u003d new TaskList(storage.loadArchive());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            archivedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task myTask \u003d archivedTasks.getTask(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        tasks.addTask(myTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        ui.printTaskRestored(myTask, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveMain(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        archivedTasks.deleteTask(argument);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        storage.saveArchive(archivedTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a deadline with the given description and due date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param description the description of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param by the due date of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the deadline has no due date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Deadline(String description, Date by) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"The date/time of \" + this.getTypeNameWithQuantifier() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"a deadline\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"D | \" + this.getIsDoneFlag() + \" | \" + this.description + \" | \" + DateUtil.formatDate(this.by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateUtil.formatDate(by) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs an event with the given description and date/time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param at the date/time of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the event has no date/time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Event(String description, Date at) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"The date/time of \" + this.getTypeNameWithQuantifier() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"an event\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"E | \" + this.getIsDoneFlag() + \" | \" + this.description + \" | \" + DateUtil.formatDate(this.at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateUtil.formatDate(at) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a task with the given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert description.length() \u003e 0 : description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets the status icon of the task, representing whether the task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the status icon of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected abstract String getTypeNameWithQuantifier();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Converts a task to its export format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the converted string in export format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public abstract String toExportFormat();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getIsDoneFlag() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * Constructs a task from imported raw string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @param text the raw string to be imported."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the task constructed from the raw string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @throws DukeException if the raw string cannot be converted to a task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public static Task fromImportFormat(String text) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assert text.length() \u003e 0 \u0026\u0026 text.contains(\"|\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        String[] stringArray \u003d text.split(\" \\\\| \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        switch (stringArray[0]) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Todo(stringArray[2]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            markTaskDoneFromImport(t, stringArray[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Event(stringArray[2], DateUtil.parseDate(stringArray[3]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            markTaskDoneFromImport(t, stringArray[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            t \u003d new Deadline(stringArray[2], DateUtil.parseDate(stringArray[3]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            markTaskDoneFromImport(t, stringArray[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            throw new DukeException(\"Invalid format.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    private static void markTaskDoneFromImport(Task task, String statusFlag) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        if (statusFlag.equals(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assert statusFlag.equals(\"0\") : statusFlag;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 99
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    protected String getTypeNameWithQuantifier() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"a todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toExportFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"T | \" + this.getIsDoneFlag() + \" | \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 23
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cVBox maxHeight\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: #66ccff; -fx-background-radius: 20;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003cInsets left\u003d\"4.0\" right\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 35
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" onKeyTyped\u003d\"#handleKeyTyped\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" disable\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 20
    }
  },
  {
    "path": "src/test/java/duke/DateUtilTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class DateUtilTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseDate(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.DAY_OF_MONTH, 28);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MONTH, Calendar.AUGUST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.YEAR, 2019);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            calendar.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Date date \u003d calendar.getTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(date, DateUtil.parseDate(\"28/8/2019 2359\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testFormatDate(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.DAY_OF_MONTH, 28);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MONTH, Calendar.AUGUST);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.YEAR, 2019);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        calendar.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Date date \u003d calendar.getTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assertEquals(\"28/08/2019 2359\", DateUtil.formatDate(date));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 42
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseTodo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"todo write report\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"todo\", \"write report\"), command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseDeadline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"deadline finish report /by 28/8/2019\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"deadline\", \"finish report\", \"by\", \"28/8/2019\"), command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public void testParseEvent() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            Command command \u003d Parser.parse(\"event project meeting /at 26/8/2019\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            assertEquals(new AddCommand(\"event\", \"project meeting\", \"at\", \"26/8/2019\"), command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 39
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "niqiukun": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 34
    }
  }
]
