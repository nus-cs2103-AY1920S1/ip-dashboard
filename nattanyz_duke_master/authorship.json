[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    version \u003d \"12.0.2\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    mainClassName \u003d \u0027dose.Launcher\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String javaFxVersion \u003d \u002712\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveBaseName \u003d \"dose\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveVersion \u003d \"1.3\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 42,
      "-": 17
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Dose** is a customisable personal assistant for managing your deadlines, events and todos. "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Made for users who are comfortable with Command-Line based interactions, "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Dose helps you get your tasks out of your head as quickly as possible without getting in the way."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Stop fiddling with bells and whistles of other todo-list apps -- Dose\u0027s pretty GUI is just a bonus!"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Experiencing a caffeinated rush and needing a dose of calm?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Stuck in a rut and wishing for a dose of motivation? Dose has your back. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Put your tasks in Dose and never forget about them ever again!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Add todos, events and deadlines"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "To add a todo, event or deadline to Dose, simply type the type of the task,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "followed by its description and deadline (if any). Dose will update your list of tasks accordingly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/add_tasks.PNG\" width\u003d\"500\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### View tasks in task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Keep track of the tasks you\u0027ve added. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "See each task\u0027s description, deadline, priority and tags (if any) in a compact list view."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/list_tasks.PNG\" width\u003d\"500\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Save task list to disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Dose is capable of saving your list of tasks to a small, portable text file. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Upon the next startup of Dose, your tasks will be instantly re-imported -- no sweat!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/save_tasks.PNG\" width\u003d\"500\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Complete and delete tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Done with a task? Mistakenly added a task you no longer need? Dose will take care of it. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/done_delete_tasks.PNG\" width\u003d\"600\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Tag and prioritise tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Need some organisation for your tasks? Dose is here to help."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "(Sorting tasks by tag and priority is coming soon!)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/tag_priority_tasks.PNG\" width\u003d\"800\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Find tasks matching your query"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Looking for a specific task? Simply search for it."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/find_tasks.PNG\" width\u003d\"500\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### Snooze a task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Too many deadlines at your back? Have yourself a dose of calm by postponing non-urgent tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cimg src\u003d\"images/snooze_tasks.PNG\" width\u003d\"500\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "1. [todo](#todo)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "2. [deadline](#deadline)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "3. [event](#event)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "4. [list](#list)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "5. [save](#save)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "6. [done](#done)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "7. [delete](#delete)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "8. [tag](#tag)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "9. [priority](#priority)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "10. [find](#find)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "11. [snooze](#snooze)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "12. [bye](#bye)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `todo`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Creates a new todo."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `todo [description]`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:** "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[description]` Description of the todo (required)."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "A new todo with the provided description is created."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `deadline`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Creates a new task with a deadline."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `deadline [description] /by [deadline]`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[description]` Description of the task (required)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[deadline]` Deadline of the task, in ISO format."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "A new deadline task with the provided description and deadline is created."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `event`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Creates a new event at a specified time."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `event [description] /at [time]`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:** "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[description]` Description of the event (required)."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[time]` Time of the event, in ISO format."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "A new event with the provided description and date is created."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Displays the tasks in the task list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `list`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome**: The current state of the task list is displayed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `save`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Saves the tasks in the task list to the disk."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `save`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The current state of the task list is saved to the disk."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `done`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Marks the task as complete."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `done [taskId]`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[taskId]` ID of the task in the list (required). Use `list` to get this, if need be."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `delete`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Deletes the task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `delete [taskId]`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[taskId]` ID of the task in the list (required). Use `list` to get this, if need be."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The task is deleted from the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `tag`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Adds a tag to a task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `tag [taskId] [tag]`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[taskId]` ID of the task in the list (required). Use `list` to get this, if need be."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[tag]` Tag to be added to the task."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The tag is added to the task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `priority`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Adds a priority to a task."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `priority [taskId] [priority]`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[taskId]` ID of the task in the list (required). Use `list` to get this, if need be."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[priority]` Priority to be added to the task. Can be `low`, `medium` or `high`."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The tag is added to the task."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `find`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Find tasks matching a query."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `find [keyword]`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[keyword]` Keyword to be used in searching for tasks."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** Displays the list of tasks matching the query, if any."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `snooze`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Snoozes a given task. That is, postpones its deadline by one day."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `snooze [taskId]`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Parameters:**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "`[taskId]` ID of the task in the list (required). Use `list` to get this, if need be."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The deadline (of tasks with deadlines) or time (of events) is postponed by one day."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "Saves the tasks in the task list to the disk, then exits Dose."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Usage:** `bye`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "**Expected outcome:** The current state of the task list is saved to the disk. Duke can be safely exited."
      }
    ],
    "authorContributionMap": {
      "nattanyz": 167,
      "-": 18
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "rootProject.name \u003d \u0027dose\u0027"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 1
    }
  },
  {
    "path": "src/main/java/dose/Dose.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.cli.CliDose;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public interface Dose {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Runs Dose."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates and runs a new instance of Dose."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Invoked when Dose is run from the CLI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param args Arguments supplied by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // running Dose from the CLI should instantiate CliDose, as usual"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Dose dose \u003d new CliDose();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        dose.run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void initializeStorage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 24
    }
  },
  {
    "path": "src/main/java/dose/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 12
    }
  },
  {
    "path": "src/main/java/dose/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.GuiDose;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * A GUI for Dose using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** Image to be used as application icon for Dose.*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Image doseIcon \u003d new Image(getClass().getResourceAsStream(\"/images/coffee.png\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** Underlying instance of Dose created when application runs.*/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private GuiDose dose \u003d new GuiDose();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // create new scene using MainWindow fxml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // set the scene to display on the stage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // set underlying instance of Dose"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDose(dose);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // set title and icon for the window"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            stage.setTitle(\"Dose\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            stage.getIcons().add(doseIcon);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // display the window"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // initialize Dose"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            dose.run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 50
    }
  },
  {
    "path": "src/main/java/dose/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to create and add a DeadlineTask."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddDeadlineCommand(String command) throws DoseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"/by\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadlineString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() throws DoseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.getDescription() !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.getDeadlineString() !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new DeadlineTask(getDescription(), getDeadlineString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 25
    }
  },
  {
    "path": "src/main/java/dose/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to create and add an Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddEventCommand(String command) throws DoseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"/at\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDeadlineString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() throws DoseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.getDescription() !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.getDeadlineString() !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new EventTask(getDescription(), getDeadlineString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 25
    }
  },
  {
    "path": "src/main/java/dose/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to add a new task to the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class AddTaskCommand implements Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Scanner s;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String deadlineString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    AddTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.next(); // ignore command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the description of the task to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Description of the task to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the string representing the deadline of the task to be added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * For Deadline tasks, this refers to the expected date of completion."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * For Event tasks, this refers to the expected date of occurrence."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Deadline of the task to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String getDeadlineString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.deadlineString;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Retrieves the description of the task to be added, based on command issued by user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void setDescription() throws DoseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            this.description \u003d this.s.next().strip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after task type is blank"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.DESCRIPTION_BLANK);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Retrieves the string representing the deadline of the task to be added,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * based on command issued by user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void setDeadlineString() throws DoseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            this.deadlineString \u003d this.s.next().strip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // no deadline entered"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.DEADLINE_BLANK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates the task to be added, based on command issued by the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Task to be added."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    abstract Task createTask() throws DoseException;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates a new Task based on command issued by the user, and adds it to the list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task newTask \u003d createTask();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String message \u003d UiMessage.TASK_ADDED.getMessage() + \" \" + UiMessage.HINT_LIST.getMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(message);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 93
    }
  },
  {
    "path": "src/main/java/dose/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TodoTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to create and add a TodoTask."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class AddTodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public AddTodoCommand(String fullCommand) throws DoseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s.useDelimiter(\"\\n\"); // no special delimiter required"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task createTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return new TodoTask(getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 21
    }
  },
  {
    "path": "src/main/java/dose/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents commands requested by user and related operations,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * such as executing the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Executes the command, by interacting with tasks and UI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // implementation varies for each subclass of Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns boolean indicating if command entered was \"exit\", false by default."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return boolean indicating if command entered was \"exit\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 31
    }
  },
  {
    "path": "src/main/java/dose/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DeleteCommand extends ModifyTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Deletes a task, based on command issued by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d getTaskById(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String taskDeletedMessage \u003d UiMessage.TASK_DELETED.getMessage() + task.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.deleteTask(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(taskDeletedMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String message \u003d UiMessage.TASKS_STATUS_FRONT.getMessage()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + tasks.getSize() + UiMessage.TASKS_STATUS_BACK.getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 35
    }
  },
  {
    "path": "src/main/java/dose/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a request from the user to mark a given task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DoneCommand extends ModifyTaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Marks the task in the command issued by the user as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d getTaskById(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String message \u003d UiMessage.TASK_DONE.getMessage() + task.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 34
    }
  },
  {
    "path": "src/main/java/dose/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Exits the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Exits the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: in future, \"lock down\" ui and actually exit Dose when this command is called?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: call this command when the \"close\" button is pressed by user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.GOODBYE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns boolean indicating if command entered was \"exit\", true in this case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return boolean indicating if command entered was \"exit\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 35
    }
  },
  {
    "path": "src/main/java/dose/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new FindCommand, given the full command issued by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param fullCommand Full command issued by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Finds a list of tasks matching the keyword issued by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // first, try to get keyword"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            s.next(); // command (find), to be ignored"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String keyword \u003d s.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, find and return matching tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskList matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                throw new DoseException(ExceptionType.NO_MATCHING_TASKS);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showMessage(UiMessage.MATCHING_TASKS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showTasks(matchingTasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"find\" is empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.KEYWORD_BLANK);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 51
    }
  },
  {
    "path": "src/main/java/dose/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Shows a list of commands available in the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.getHelpMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 20
    }
  },
  {
    "path": "src/main/java/dose/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Lists all tasks currently in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.TASK_LIST_EMPTY);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.TASK_LIST);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 27
    }
  },
  {
    "path": "src/main/java/dose/command/ModifyTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class ModifyTaskCommand implements Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Scanner s;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public ModifyTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        s \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task getTaskById(TaskList tasks) throws DoseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        int taskId;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // first, try to get taskId"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            s.next(); // command, to be ignored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            taskId \u003d s.nextInt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task \u003d tasks.getTask(taskId);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (InputMismatchException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"tag\" is not an int, or is an invalid task ID"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.INVALID_ID);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after \"tag\" is blank"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.ID_BLANK);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 38
    }
  },
  {
    "path": "src/main/java/dose/command/PriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static dose.task.TaskPriority.getTaskPriority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskPriority;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to add a priority to a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class PriorityCommand extends ModifyTaskCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public PriorityCommand(String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a priority to the task, based on command issued by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d getTaskById(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // then, try to get priority"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String priorityString \u003d s.next().strip();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskPriority priority \u003d getTaskPriority(priorityString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, add priority to task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task.addPriority(priority);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // todo: handle invalid priority string (currently, it just removes priority since null)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String message \u003d UiMessage.TASK_PRIORITISED.getMessage() + task.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after taskId is blank"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.TAG_BLANK);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 51
    }
  },
  {
    "path": "src/main/java/dose/command/SaveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class SaveCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Saves the current status of the task list to the disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 20
    }
  },
  {
    "path": "src/main/java/dose/command/SnoozeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to postpone (\"snooze\") a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class SnoozeCommand extends ModifyTaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public SnoozeCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Snoozes the task in the command issued by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d getTaskById(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        task.snooze();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.TASK_SNOOZED);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 32
    }
  },
  {
    "path": "src/main/java/dose/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a command to add a tag to a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TagCommand extends ModifyTaskCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TagCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a tag to the task, based on command issued by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param ui UI to display to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param storage Object that handles storage of task list to disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws DoseException Application-specific exception thrown during execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d getTaskById(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // then, try to get tag"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String tag \u003d s.next().strip();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // if ok, add tag to task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task.addTag(tag);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String message \u003d UiMessage.TASK_TAGGED.getMessage() + task.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // user input after taskId is blank"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.TAG_BLANK);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 44
    }
  },
  {
    "path": "src/main/java/dose/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static dose.util.DateTime.parseDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static dose.util.DateTime.snoozeDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a Deadline, a type of Task that has an expected date of completion."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new Deadline, with the specified description and date of completion."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param byString String representing expected date of completion of the Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DeadlineTask(String description, String byString) throws DoseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.by \u003d parseDate(byString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the String representation of a Deadline for display purposes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds the deadline of the Deadline to the String representation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * provided by the Task class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return String representation of a Deadline for display purposes."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void snooze() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.by \u003d snoozeDate(this.by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 42
    }
  },
  {
    "path": "src/main/java/dose/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static dose.util.DateTime.parseDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static dose.util.DateTime.snoozeDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents an Event, a type of Task that has an expected date of occurrence."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new Event, with the specified description and date of occurrence."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param atString String representing expected date of occurrence of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public EventTask(String description, String atString) throws DoseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.at \u003d parseDate(atString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the String representation of an Event for display purposes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds the date of occurrence of the Event to the String representation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * provided by the Task class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return String representation of a Event for display purposes."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void snooze() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.at \u003d snoozeDate(this.at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 42
    }
  },
  {
    "path": "src/main/java/dose/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents a task, the building block of a TaskList object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TaskType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private TaskPriority priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a Task, with the specified description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the String representation of a Task for display purposes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return String representation of a Task for display purposes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String typeInitial \u003d \"[\" + this.type.getTaskTypeInitial() + \"] \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String status \u003d \"[\" + this.getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.description !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String toString \u003d typeInitial + status + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (this.hasTag()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            toString \u003d toString + \" (tag: \" + this.getTag() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (this.hasPriority()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            toString \u003d toString + \" (priority: \" + this.getPriority() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return toString;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the status icon corresponding to the status of the task (done or not done)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Status icon corresponding to the status of the task (done or not done)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); // return Y or N"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Postpones the deadline of the given task by 1 day if no other argument is specified."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public abstract void snooze();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a tag to the given task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Currently supports only one tag per task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * To override existing tag, use tag command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tag Tag to be added to the given task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void addTag(String tag) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String getTag() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.tag;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasTag() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.getTag() !\u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a priority to the given task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param priority Priority to be added to the given task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void addPriority(TaskPriority priority) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private TaskPriority getPriority() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasPriority() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.getPriority() !\u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 98
    }
  },
  {
    "path": "src/main/java/dose/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents the list of tasks in the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** ArrayList containing tasks in the TaskList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new TaskList containing the tasks in the list provided."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks ArrayList containing the tasks to be included in the new TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Constructs a new, empty TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns ArrayList containing the tasks in the TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return ArrayList containing the tasks in the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert this.tasks !\u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns true if the TaskList does not contain any tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return True if the TaskList does not contain any tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Adds a new task to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param task New task to be added to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert !this.isEmpty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Prints the list of tasks to the UI."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            int i \u003d getId(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String s \u003d task.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            System.out.println(i + \". \" + s);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the ID of the given task, in the given TaskList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Helper function for printList() method."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param task Task whose ID is required."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return ID of the given task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public int getId(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        int id \u003d this.tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // getId should only ever be called on tasks that are present in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert id \u003e 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the task with the given ID in this TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskId ID of the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Task with the given ID."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @throws IndexOutOfBoundsException Exception thrown when the given ID is not present in"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Task getTask(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.get(taskId - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Deletes the given task from the TaskList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskToDelete Task to be deleted from the TaskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void deleteTask(Task taskToDelete) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assert tasks.contains(taskToDelete);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns a TaskList containing tasks that match the given keyword."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param keyword Keyword to be used to find tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return TaskList containing tasks that match the given keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // is it possible to implement without creating temporary TaskList object?"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // so that the numbering of the tasks based on the original list can be preserved"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 120
    }
  },
  {
    "path": "src/main/java/dose/task/TaskPriority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum TaskPriority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    LOW,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    MEDIUM,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HIGH;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the TaskPriority, given a String describing its priority."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskPriorityString String describing the priority."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return TaskPriority, based on String provided."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static TaskPriority getTaskPriority(String taskPriorityString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        switch (taskPriorityString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"low\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskPriority.LOW;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"medium\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskPriority.MEDIUM;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"high\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskPriority.HIGH;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 25
    }
  },
  {
    "path": "src/main/java/dose/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents the possible types of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    DEADLINE(\"by\", \"D\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    EVENT(\"at\", \"E\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TODO(\"\\n\", \"T\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID(null, null);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String delimiter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String initial;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TaskType(String delimiter, String initial) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.delimiter \u003d delimiter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.initial \u003d initial;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the delimiter used to separate the description of a Task from its additional details."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Possible usage: in an alternative implementation of AddTaskCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Delimiter used to separate the description of a Task from its additional details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getDelimiter() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.delimiter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the TaskType of the task, given a String describing its type."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param taskTypeString String describing the type of the Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return TaskType of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static TaskType getTaskType(String taskTypeString) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        switch (taskTypeString) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return TaskType.INVALID;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the initial representing the TaskType."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Possible usage: for icons representing the TaskType in UI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Initial representing the TaskType."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getTaskTypeInitial() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.initial;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 55
    }
  },
  {
    "path": "src/main/java/dose/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Snoozes (\"postpones\") the given task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Not applicable to TodoTasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void snooze() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 17
    }
  },
  {
    "path": "src/main/java/dose/util/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//import dose.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private static SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static Date parseDate(String date) throws DoseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return dateFormatter.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // deadline entered in wrong format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.INVALID_DATE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static Date snoozeDate(Date date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Calendar c \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        c.setTime(date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        c.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        date \u003d c.getTime();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 30
    }
  },
  {
    "path": "src/main/java/dose/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.ExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static Command parse(String fullCommand) throws DoseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Scanner commandReader  \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String command \u003d commandReader.next();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"snooze\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new SnoozeCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"tag\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new TagCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"priority\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new PriorityCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"save\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new SaveCommand(); // disregard any input after \"save\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return new HelpCommand(); // disregard any input after \"help\" (for now)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            throw new DoseException(ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 44
    }
  },
  {
    "path": "src/main/java/dose/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasDirectory() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // check if parent directory exists. if not, create it"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private boolean hasFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // check if file exists"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(UiMessage.TASKS_NOT_FOUND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // if directory does not exist, or file does not exist, no need to load from file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (!hasDirectory() || !hasFile()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fis.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String message \u003d UiMessage.TASKS_IMPORTED.getMessage() + this.filePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // first, check if task list is empty. if so, do not save"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(UiMessage.TASKS_NOT_SAVED);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fos.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String message \u003d UiMessage.TASKS_SAVED.getMessage() + this.filePath;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showMessage(message);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 90
    }
  },
  {
    "path": "src/main/java/dose/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Encapsulates methods related to displaying responses from Dose in the UI."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns the command entered by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Command entered by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String readCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays the required message in the UI, given the type of message required."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param uiMessage Enum indicating type of message required to be displayed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void showMessage(UiMessage uiMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays the required message in the UI, given the message required as a String."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param message String representing message to be displayed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void showMessage(String message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays the required error message in the UI, given the type of exception thrown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param exception Exception thrown by the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void showError(DoseException exception);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays a list of tasks in the UI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param tasks Tasks to be shown in the UI."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    void showTasks(TaskList tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 39
    }
  },
  {
    "path": "src/main/java/dose/util/UiMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents different types of events that need to be displayed to the user within the UI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum UiMessage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // greetings"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    WELCOME(\"Hello! What can I do for you?\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    GOODBYE(\"Bye. Hope to see you again soon!\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_IMPORTED(\"Success! Your tasks have been imported from: \"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_SAVED(\"Success! Your tasks have been saved to: \"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_NOT_SAVED(\"Your task list is empty! Adios :)\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_NOT_FOUND(\"Existing tasks file not found! Starting dose afresh...\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_ADDED(\"Okay! I\u0027ve added the task.\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_DONE(\"Nice! I\u0027ve marked this task as done: \"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_SNOOZED(\"Okay! The task has been snoozed by 1 day.\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_DELETED(\"Noted. I\u0027ve removed this task: \"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    MATCHING_TASKS(\"Here are the matching tasks in your list...\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_TAGGED(\"Nice! I\u0027ve added a tag to this task: \"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_PRIORITISED(\"Sweet! I\u0027ve added a priority to this task: \"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // helpers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_LIST(\"Here are the tasks in your list: \"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_STATUS_FRONT(\"Now you have \"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASKS_STATUS_BACK(\" items in this list.\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_TODO(\"Use todo to add a new todo.\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_DEADLINE(\"Use deadline /by [deadline] to add a new task with a deadline.\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_EVENT(\"Use event /at [time] to add a new event at a time.\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_DONE(\"Use done [taskId] to mark a task as done.\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_DELETE(\"Use delete [taskId] to remove a task from the list.\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_SAVE(\"Use save to save your tasks to disk.\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HINT_LIST(\"Use list to see all your tasks!\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: add tag, priority, find, snooze"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HELP(\"Here are the things I can do...\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    //private ArrayList\u003cUiMessage\u003e helpMessages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    UiMessage(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns a message relating to the event, to be displayed in the UI."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Message relating to the event, to be displayed in the UI."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static String getHelpMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HELP.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_TODO.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_DEADLINE.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_EVENT.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_DONE.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_DELETE.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_SAVE.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        sb.append(HINT_LIST.getMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 64
    }
  },
  {
    "path": "src/main/java/dose/util/cli/Cli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Handles Dose\u0027s UI when in CLI mode."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Cli implements Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Cli() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showMessage(UiMessage uiMessage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(uiMessage.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showError(DoseException exception) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Displays a divider line in the UI."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 52
    }
  },
  {
    "path": "src/main/java/dose/util/cli/CliDose.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.Dose;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class CliDose implements Dose {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** CLI implementation of Dose uses a Cli object to represent its UI. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Cli ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates a new instance of Dose, with the default filePath."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public CliDose() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui \u003d new Cli();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Runs Dose from the CLI. All output is displayed in the CLI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.WELCOME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        initializeStorage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } catch (DoseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates and runs a new instance of Dose from the CLI."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @param args Arguments supplied by the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        CliDose duke \u003d new CliDose();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Attempts to import an existing task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void initializeStorage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskList tasksFromFile \u003d storage.load();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks \u003d tasksFromFile;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 72
    }
  },
  {
    "path": "src/main/java/dose/util/exception/DoseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DoseException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ExceptionType exceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DoseException(ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.exceptionType.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 15
    }
  },
  {
    "path": "src/main/java/dose/util/exception/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Represents different types of Exceptions unique to the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // invalid"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_ID(\"Oops! You entered an invalid task ID!\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_COMMAND(\"Oops! I don\u0027t know what that means. Try using help to see what I can do.\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    INVALID_DATE(\"Oops! You did not enter the date in an appropriate format.\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \"Try: DD/MM/YYYY HHmm instead.\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // blank"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    ID_BLANK(\"Oops! You did not enter a task ID!\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    DESCRIPTION_BLANK(\"Oops! You did not enter a description!\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    DEADLINE_BLANK(\"Oops! You did not enter a deadline!\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    KEYWORD_BLANK(\"Oops! You did not enter a keyword!\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TAG_BLANK(\"Oops! You did not enter a tag!\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // nothing to return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    NO_MATCHING_TASKS(\"There are no tasks matching your query :(\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TASK_LIST_EMPTY(\"The task list is empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    ExceptionType(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Returns a message describing the Exception, to be displayed in the UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Message describing the Exception, to be displayed in the UI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 35
    }
  },
  {
    "path": "src/main/java/dose/util/gui/ColourScheme.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public enum ColourScheme {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    MINT(\"#b2eee6\", \"#8ad6cc\", \"#66beb2\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            \"#f99192\", \"#f97171\", \"#333333\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    GREY(\"#f4f6f9\", \"#e5e8ec\", \"#cbd0d8\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            \"#a9b1bc\", \"#646c77\", \"#424953\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String backgroundColour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String dukeMessageBoxColour;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String dukeShadowColour; // also serves as the colour of the taskMessageBox"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String userMessageBoxColour;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String userShadowColour; // also serves as the colour of the exceptionMessageBox"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private final String textColour;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getBackgroundColour() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return backgroundColour;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getDukeMessageBoxColour() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return dukeMessageBoxColour;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getDukeShadowColour() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return dukeShadowColour;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getUserMessageBoxColour() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return userMessageBoxColour;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getUserShadowColour() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return userShadowColour;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String getTextColour() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return textColour;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    ColourScheme(String backgroundColour, String dukeMessageBoxColour, String dukeShadowColour,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String userMessageBoxColour, String userShadowColour, String textColour) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.backgroundColour \u003d backgroundColour;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.dukeMessageBoxColour \u003d dukeMessageBoxColour;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.dukeShadowColour \u003d dukeShadowColour;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.userMessageBoxColour \u003d userMessageBoxColour;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.userShadowColour \u003d userShadowColour;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.textColour \u003d textColour;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 49
    }
  },
  {
    "path": "src/main/java/dose/util/gui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.DukeMessageBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.ExceptionMessageBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.MessageBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.TaskMessageBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.UserMessageBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Handles Dose\u0027s UI when in GUI mode."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class Gui implements Ui {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** Represents the colour scheme in use for the GUI. Hardcoded as MINT for now. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ColourScheme colourScheme \u003d ColourScheme.MINT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** Represents the queue of messages to be displayed in the GUI. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    // todo: change Queue to Stream"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Queue\u003cMessageBox\u003e messageBoxQueue \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Not in use for Dose\u0027s GUI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showUserInput(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            messageBoxQueue.add(new UserMessageBox(input, this.colourScheme));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showMessage(UiMessage uiMessage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            messageBoxQueue.add(new DukeMessageBox(uiMessage.getMessage(), this.colourScheme));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            messageBoxQueue.add(new DukeMessageBox(message, this.colourScheme));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showError(DoseException exception) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            messageBoxQueue.add(new ExceptionMessageBox(exception.getMessage(), this.colourScheme));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            showTask(task, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void showTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        int taskIdString \u003d tasks.getId(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String toPrint \u003d taskIdString + \". \" + taskString;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBoxQueue.add(new TaskMessageBox(toPrint, this.colourScheme));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Queue\u003cMessageBox\u003e getMessageBoxQueue() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return messageBoxQueue;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: move clear() to here, makes more sense"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 92
    }
  },
  {
    "path": "src/main/java/dose/util/gui/GuiDose.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.Dose;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class GuiDose implements Dose {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    String filePath \u003d \"/data/tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** GUI implementation of Dose uses a Gui object to represent its UI. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    Gui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates a new instance of Dose to be run from the GUI, with the default filePath."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public GuiDose() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui \u003d new Gui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Get response from Dose to be displayed in the UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * May not be required after UI implementation is refined."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * @return Response from Dose to be displayed in the UI."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (DoseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // dummy implementation"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        return \"Dose heard: \" + input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        //return ui.getResponse();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // todo: figure out why welcome message doesn\u0027t appear until user\u0027s first input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        ui.showMessage(UiMessage.WELCOME);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        initializeStorage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Attempts to import an existing task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void initializeStorage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            TaskList tasksFromFile \u003d storage.load();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            tasks \u003d tasksFromFile;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // temporary haxx"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 67
    }
  },
  {
    "path": "src/main/java/dose/util/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.messagebox.MessageBox;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private VBox messageBoxContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private GuiDose dose;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /** Represents the colour scheme in use for the GUI. Hardcoded as MINT for now. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private ColourScheme colourScheme \u003d ColourScheme.MINT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        scrollPane.vvalueProperty().bind(messageBoxContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBoxContainer.setStyle(\"-fx-background-color: \" + colourScheme.getBackgroundColour());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void setDose(GuiDose d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        dose \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Dose\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // get and display user input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            dose.ui.showUserInput(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            dose.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // clear user input field"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            // get and display output from Dose"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            Queue\u003cMessageBox\u003e messageBoxQueue \u003d dose.ui.getMessageBoxQueue();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            messageBoxContainer.getChildren().addAll(messageBoxQueue);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            dose.ui.getMessageBoxQueue().clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     * Changes the appearance of Dose\u0027s GUI to match the given colour scheme."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     * Not sure why this needs to be static. KIV implementation :("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     * @param colourScheme Colour scheme for Dose\u0027s GUI."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    public static void setColourScheme(ColourScheme colourScheme) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        this.colourScheme \u003d colourScheme;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 77
    }
  },
  {
    "path": "src/main/java/dose/util/gui/messagebox/DukeMessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui.messagebox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.ColourScheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class DukeMessageBox extends MessageBox {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public DukeMessageBox(String text, ColourScheme colourScheme) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setStyle(\"-fx-background-color: \" + colourScheme.getDukeMessageBoxColour());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        getMessage().setStyle(\"-fx-fill: \" + colourScheme.getTextColour());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        DropShadow dropShadow \u003d new DropShadow(5.0, Color.web(colourScheme.getDukeShadowColour()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setEffect(dropShadow);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 15
    }
  },
  {
    "path": "src/main/java/dose/util/gui/messagebox/ExceptionMessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui.messagebox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.ColourScheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "// todo: custom styling for exceptions, including exclamation mark etc"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class ExceptionMessageBox extends MessageBox {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public ExceptionMessageBox(String text, ColourScheme colourScheme) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setStyle(\"-fx-background-color: \" + colourScheme.getUserShadowColour());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        getMessage().setStyle(\"-fx-fill: \" + colourScheme.getTextColour());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        DropShadow dropShadow \u003d new DropShadow(5.0, Color.web(colourScheme.getUserShadowColour()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setEffect(dropShadow);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 16
    }
  },
  {
    "path": "src/main/java/dose/util/gui/messagebox/MessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui.messagebox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "// todo: replace Label with TextFlow to enable text to wrap multiple lines!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "// todo: still can\u0027t get user input to align right :("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public abstract class MessageBox extends VBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Label message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    HBox messageBox;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    VBox messageBoxContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    MessageBox(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                \"/view/MessageBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        // I give up :("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBoxContainer.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        message.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public Label getMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void setMessage(Label message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 53
    }
  },
  {
    "path": "src/main/java/dose/util/gui/messagebox/TaskMessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui.messagebox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.ColourScheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "// todo: custom styling for tasks, including status, priority, deadline, tags etc"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TaskMessageBox extends MessageBox {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public TaskMessageBox(String text, ColourScheme colourScheme) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setStyle(\"-fx-background-color: \" + colourScheme.getDukeShadowColour());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        getMessage().setStyle(\"-fx-fill: \" + colourScheme.getTextColour());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        DropShadow dropShadow \u003d new DropShadow(5.0, Color.web(colourScheme.getDukeShadowColour()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setEffect(dropShadow);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 16
    }
  },
  {
    "path": "src/main/java/dose/util/gui/messagebox/UserMessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "package dose.util.gui.messagebox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.gui.ColourScheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class UserMessageBox extends MessageBox {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public UserMessageBox(String text, ColourScheme colourScheme) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setStyle(\"-fx-background-color: \" + colourScheme.getUserMessageBoxColour());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        getMessage().setStyle(\"-fx-fill: \" + colourScheme.getTextColour());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        DropShadow dropShadow \u003d new DropShadow(5.0, Color.web(colourScheme.getUserShadowColour()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBox.setEffect(dropShadow);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        //flip();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        messageBoxContainer.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    private void flip() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//        setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 28
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dose.util.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003cHBox layoutY\u003d\"557.4000244140625\" spacing\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "          \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter something...\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                  \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            \u003c/TextField\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "          \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                  \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            \u003c/Button\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: F2F1F8;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"62.4\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \u003cVBox fx:id\u003d\"messageBoxContainer\" fillWidth\u003d\"false\" spacing\u003d\"10.0\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 46
    }
  },
  {
    "path": "src/main/resources/view/MessageBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003cfx:root fx:id\u003d\"messageBoxContainer\" type\u003d\"javafx.scene.layout.VBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    \u003cHBox fx:id\u003d\"messageBox\" style\u003d\"-fx-background-color: #b2eee6; -fx-background-radius: 10;\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003cLabel fx:id\u003d\"message\" lineSpacing\u003d\"0.25\" prefWidth\u003d\"400\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "          \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "          \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 22
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.task.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.exception.DoseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testTodoToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d new TodoTask(\"practice math\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"[T] [N] practice math\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testDeadlineToString() throws DoseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d new DeadlineTask(\"this project\", \"30/9/2019 2300\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"[D] [N] this project (by: Mon Sep 30 23:00:00 SGT 2019)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testEventToString() throws DoseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        Task task \u003d new EventTask(\"play guitar with friends\", \"1/10/2019 1900\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"[E] [N] play guitar with friends (at: Tue Oct 01 19:00:00 SGT 2019)\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            task.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 32
    }
  },
  {
    "path": "src/test/java/UiMessageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import dose.util.UiMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "public class UiMessageTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        UiMessage uiMessage \u003d UiMessage.WELCOME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"Hello! What can I do for you?\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            uiMessage.getMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testTaskStatus() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String uiMessageFront \u003d UiMessage.TASKS_STATUS_FRONT.getMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        int numTasks \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String uiMessageBack \u003d UiMessage.TASKS_STATUS_BACK.getMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String message \u003d uiMessageFront + numTasks + uiMessageBack;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"Now you have 5 items in this list.\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nattanyz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    public void testHelpMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String helpMessage \u003d UiMessage.getHelpMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        assertEquals(\"Here are the things I can do...\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use todo to add a new todo.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                +  \"Use deadline /by [deadline] to add a new task with a deadline.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use event /at [time] to add a new event at a time.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use done [taskId] to mark a task as done.\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use delete [taskId] to remove a task from the list.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use save to save your tasks to disk.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "                + \"Use list to see all your tasks!\\n\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            helpMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 37
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.dose.Dose`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "       mainClassName \u003d \"seedu.dose.Dose\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    archiveBaseName \u003d \"dose\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "│     └─seedu/dose/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        └─seedu/dose/DoseTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/dose/DoseTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 6,
      "-": 164
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "For Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Image dose \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            new DialogBox(dukeText, new ImageView(dose))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(dose))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "You have successfully implemented a fully functional GUI for Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 3,
      "-": 240
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s return to Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "As part of the effort to separate the code handling Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Duke dose;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        dose \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "        String response \u003d dose.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "    private Duke dose \u003d new Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nattanyz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dose);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "The last change that we have to make is to point our `Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "In `Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "nattanyz": 5,
      "-": 289
    }
  }
]
