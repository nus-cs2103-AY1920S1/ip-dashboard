[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "cheongliyuan": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.lang.StringBuilder; //beats String for performance"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        User user \u003d new User();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        boolean inputErrors;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                user.setCurrentInput(input.nextLine());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                if (!user.setTaskType()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    throw new UnknownInputException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                TaskType taskType \u003d user.getTaskType();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                if (user.oneWordNotBye()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    throw new BadInputException(taskType);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.addTask();  //DateTimeParseDukeException might occur here. How to show in code?"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.updateSaveFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.setTaskDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.updateSaveFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.printUserInputs();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.deleteTask();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    user.updateSaveFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                case BYE: //do nothing and wait to exit loop"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                inputErrors \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            } catch (UnknownInputException | BadInputException | DateTimeParseDukeException err) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                inputErrors \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        } while (!user.inputIsBye() || !inputErrors); //only exit program, when user inputs bye. otherwise keep trying"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        user.sayByeToUser();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private String typeOfTask;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public Task() {}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void markIsDone() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getTaskTypeLetter() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    //formatting of inputs is left in User class"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseDukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author Shi Hao Yap(parse) and CarbonGrid(Exception)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //realised I should make life easier by restricting input formats instead of accounting for all types."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by.trim(), format1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            throw new DateTimeParseDukeException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getTaskTypeLetter() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public Event(String description, String at) throws DateTimeParseDukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author Shi Hao Yap(parse) and CarbonGrid(Exception)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.at \u003d LocalDateTime.parse(at.trim(), format1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            throw new DateTimeParseDukeException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getTaskTypeLetter() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public String getTaskTypeLetter() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class User {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private String currentInput \u003d \"\"; //user input"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private TaskType currentTaskType; //enum type, after parsing user input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private int numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    User() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void setCurrentInput(String currentInput) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.currentInput \u003d currentInput;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    String getCurrentInput () {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return this.currentInput;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    boolean setTaskType() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String j \u003d this.currentInput;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        if (j.contains(\" \")) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            j \u003d j.substring(0, j.indexOf(\" \"));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            j \u003d j.replaceAll(\"\\\\s+\", \"\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        j \u003d j.toLowerCase();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        switch (j) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.LIST;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.DONE;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.BYE;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.currentTaskType \u003d TaskType.DELETE;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            return false; //invalid task"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void addTask() throws DateTimeParseDukeException { //addTask/event.deadline"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //todo: first space to last char"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //event/deadline: first space to \"/\", after \"/\" to last char"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        TaskType taskType \u003d this.getTaskType(); //used just for switchcase."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //only description and date gets passed into subclass of Tasks"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String j \u003d this.getCurrentInput();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            description \u003d j.substring(j.indexOf(\" \") + 1, j.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            date \u003d j.substring((j.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            userTasks.add(new Deadline(description, date));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            description \u003d j.substring(j.indexOf(\" \") + 1, j.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            date \u003d j.substring((j.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            userTasks.add(new Event(description, date));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            description \u003d j.substring(j.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            userTasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.increaseTaskCount();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        for (Task task : userTasks) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            if (i \u003d\u003d this.getTaskCount()) { // new task always added to last in Array list"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"       [\" + task.getTaskTypeLetter() + \"][\" + task.getStatusIcon()"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"] \" + task.getDescription() + \"\\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"     Now you have \" + numOfTasks + \" tasks in the list. \\n\" //task(s) always"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    int getTaskCount() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return this.numOfTasks;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    TaskType getTaskType () {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return this.currentTaskType;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void setTaskDone () {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String temp;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //get 2nd number"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        temp \u003d this.currentInput.substring(this.currentInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //remove space infront of number, causing errors"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        temp \u003d temp.replaceAll(\"\\\\s+\", \"\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        //getDescription to output date for event/deadline"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        for (Task task : userTasks) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            if (count \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                task.markIsDone();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"     Nice! I\u0027ve marked this task as done: \\n\" + \"       [\" + task.getTaskTypeLetter()"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + (\"    ____________________________________________________________\\n\"));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private void increaseTaskCount() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.numOfTasks++;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    private void decreaseTaskCount () {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        if (this.numOfTasks \u003e\u003d 0) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            this.numOfTasks--;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        /*print task, delete task, decrease task count, then declare new task count. */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String j \u003d this.getCurrentInput();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int taskNum \u003d Integer.parseInt(j.substring(j.indexOf(\" \")+ 1)) - 1;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        for (Task temp : userTasks) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            if (count \u003d\u003d taskNum) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                System.out.println(\"       \" + \"[\" + temp.getTaskTypeLetter() + \"]\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                        + \"[\" + temp.getStatusIcon() + \"] \" + temp.getDescription());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        userTasks.remove(taskNum);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.decreaseTaskCount();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"     Now you have \" + this.getTaskCount() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    boolean oneWordNotBye() {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String s \u003d this.getCurrentInput();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        if (s.equalsIgnoreCase(\"bye\") || s.equalsIgnoreCase(\"list\")) { //bye and list should not be checked"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            return (s.length() \u003e 0 \u0026\u0026 s.split(\"\\\\s+\").length \u003d\u003d 1);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    boolean inputIsBye() {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return this.currentInput.equalsIgnoreCase(EXIT_COMMAND);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void printUserInputs () { //catch empty list?"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        for (Task temp : userTasks) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            System.out.println(\"       \" + count + \".[\" + temp.getTaskTypeLetter() + \"]\""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    + \"[\" + temp.getStatusIcon() + \"] \" + temp.getDescription());"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void updateSaveFile() {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String temp \u003d this.generateListForFile();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        this.writeStringToFile(temp);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    String generateListForFile() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        for (Task temp : userTasks) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            sb.append(temp.getTaskTypeLetter()).append(\" | \").append(temp.getStatusIcon()).append(\" | \")"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                    .append(temp.getDescription()).append(\"\\n\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void writeStringToFile(String temp) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            File file \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            fileWriter.write(temp);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    void sayByeToUser () {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class UnknownInputException extends Exception {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    UnknownInputException() {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class BadInputException extends Exception {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    BadInputException(TaskType temp) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        String i \u003d \"\";"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        switch(temp) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i \u003d \"todo\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i \u003d \"event\";"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i \u003d \"deadline\";"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i \u003d \"done\";"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            i \u003d \"delete\";"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                \"     ☹ OOPS!!! The description of a \" + i + \" cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "class DateTimeParseDukeException extends Exception {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    public DateTimeParseDukeException() {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "        System.out.println(\"    Please follow according to the date format: dd/MM/yyyy HHmm\\n\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "cheongliyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "cheongliyuan": 417
    }
  }
]
