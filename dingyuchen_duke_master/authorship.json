[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 28,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "0. Ensure that you have Java on your system."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "1. Download `jar` file from release."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "2. Execute `jar` file. GUI should appear in a few seconds"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "3. Type in commands and press `enter` on the keyboard or the \"Send\" button to execute them."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "## Screenshot"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "![Image of UI](https://github.com/dingyuchen/duke/blob/master/docs/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### Task Management"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Manage all your todos, deadlines, events in one place"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### Command Line Interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Add and update tasks with ease"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `todo` - add a todo to your task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "type `todo` followed by a description of the todo to add an undone task to the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`todo \u003cname of todo\u003e`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    [T][x] \u003cyour todo\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Now you have - tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `event` - add an event to your task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "type `event` followed by the title of your event, `/at`, followed by 2 dates separated by `-`. "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Dates must be in `dd/MM/yyyy HHmm` format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`event my event /at 19/09/2019 2349 - 20/09/2019 2200`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    [E][x] my event (at: Thu Sep 19 23:49:00 SGT 2019 - Fri Sep 20 22:00:00 SGT 2019)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `deadline` - add a deadline to your task list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "enter `deadline` followed by description of the deadline, `/by`, followed by 1 date. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Dates must be in `dd/MM/yyyy HHmm` format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`deadline my deadline /by 23/09/2019 2103`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    [D][x] my deadline (by: Mon Sep 23 21:03:00 SGT 2019)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `list` - see all tasks in your task list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "type `list`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "1. [T][✘] somthing"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "2. [E][✘] my event (at: Thu Sep 19 23:49:00 SGT 2019 - Fri Sep 20 22:00:00 SGT 2019 )"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "3. [D][✘] my deadline (by: Mon Sep 23 21:03:00 SGT 2019)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `find` - search for a task that has matching word"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "input `find` followed by keyword to search for."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`find my`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\t[E][✘] my event (at: Thu Sep 19 23:49:00 SGT 2019 - Fri Sep 20 22:00:00 SGT 2019 )"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\t[D][✘] my deadline (by: Mon Sep 23 21:03:00 SGT 2019)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `delete` - remove a task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "input `delete` followed by index of task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\t[T][✘] somthing"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `done` - mark a task as done"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "input `done` followed by index of task"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "  [T][✓] something"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `update` - replace a task with a new one"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "input `update` followed by index of task and declare a new task as you would normally"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`update 1 todo something`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Updated task from:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "[E][✘] some event (at: Thu Sep 19 23:58:00 SGT 2019 - Thu Sep 19 23:59:00 SGT 2019 )"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "To:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "[T][✘] something"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "### `bye` - exit the app"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "input `bye` to close the application"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "______________________________"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 146,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import service.Duke;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import ui.MainWindow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().welcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 33
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Creates an AddCommand that contains a given Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String generateResponse(TodoList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] lines \u003d {\"Got it. I\u0027ve added this task: \","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          \"\\t\" + this.task.toString(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          String.format(\"Now you have %d tasks in the list.\", tasks.length())};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Adds a task into TodoList tasks and saves into storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return this.generateResponse(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 39
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 13
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DeleteCommand extends command.Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String generateResponse(Task deleted, TodoList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] lines \u003d {\"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          \"\\t\" + deleted.toString(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          String.format(\"Now you have %d tasks in the list\", tasks.length())};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (index \u003e tasks.length()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"OOPS!!! That\u0027s an invalid index\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task deleted \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return this.generateResponse(deleted, tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 36
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (index \u003e tasks.length()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"OOPS!!! That\u0027s an invalid index\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task completed \u003d tasks.markAsDone(this.index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                + completed.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 30
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class ExitCommand extends command.Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return FAREWELL;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 18
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class FindCommand extends command.Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final static String HEADING \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        List\u003cTask\u003e matches \u003d tasks.find(this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return HEADING + matches.stream().map(task -\u003e \"\\t\" + task.toString())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 29
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class ListCommand extends command.Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 17
    }
  },
  {
    "path": "src/main/java/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public UpdateCommand(int index, Task newTask) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task oldTask \u003d tasks.update(index, newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return getResponse(oldTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String getResponse(Task oldTask) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", \"Updated task from:\", oldTask.toString(), \"To:\", newTask.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 30
    }
  },
  {
    "path": "src/main/java/service/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package service;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.TodoList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private TodoList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static final String FILE_PATH \u003d \"/home/dingyuchen/cs2103/duke/src/main/data/duke.ser\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Duke(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        storage \u003d new Storage(s);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this(FILE_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            String response \u003d c.run(tasks, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            if(c.isExit()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(ui.encase(response));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return ui.encase(response);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return this.ui.welcome();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 49,
      "-": 1
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 17
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date startPeriod;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date endPeriod;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Event(String description, Date startPeriod, Date endPeriod) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.startPeriod \u003d startPeriod;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.endPeriod \u003d endPeriod;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s - %s )\", startPeriod, endPeriod);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 19
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 27
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Todo(String[] description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(String.join(\" \", description));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 17
    }
  },
  {
    "path": "src/main/java/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 56
    }
  },
  {
    "path": "src/main/java/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import service.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * the dialog container. If the chose to exit the application, closes window. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.welcome(), dukeImage));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 58
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String LINE \u003d \"______________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return (\"Hello from\\n\" + LOGO + \"\\nWhat can I do for you ?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Command getUserInput() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String input \u003d this.scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return Parser.parse(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void printResponse(String response) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        System.out.println(encase(response));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void printErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        System.out.println(encase(e.getMessage()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String encase(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", new String[]{ LINE, message, LINE });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 42
    }
  },
  {
    "path": "src/main/java/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import service.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import util.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static HashSet\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static final String INVALID_COMMAND \u003d \"对不起， 我听不懂☹\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"bye\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"todo\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"event\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"deadline\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"delete\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"find\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"update\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public static Command parse(String args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] spaceSeparatedStrings \u003d args.trim().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return parse(spaceSeparatedStrings);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static Command parse(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (!keywords.contains(args[0])) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(INVALID_COMMAND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assert keywords.contains(args[0]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        switch (args[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(args[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new FindCommand(joinArguments(args));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new DoneCommand(Integer.parseInt(args[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            Task newTask \u003d Parser.parseTask(sliceArguments(args, 2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new UpdateCommand(Integer.parseInt(args[1]),newTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new AddCommand(parseTask(args));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static String[] sliceArguments(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return sliceArguments(args, 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static String[] sliceArguments(String[] args, int n) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assert args.length \u003e n;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return Arrays.copyOfRange(args, n, args.length);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static String joinArguments(String[] args) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assert args.length \u003e 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\" \", sliceArguments(args));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static Task parseTask(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] description \u003d sliceArguments(args);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            switch (args[0]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (description.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] details \u003d String.join(\" \", description).split(\"/by\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Deadline(details[0].trim(), formatter.parse(details[1].trim()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] details \u003d String.join(\" \", description).split(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] dates \u003d details[1].trim().split(\"-\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (dates.length \u003c 2) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Events must have a start and end date.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Date startPeriod \u003d formatter.parse(dates[0].trim());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Date endPeriod \u003d formatter.parse(dates[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Event(details[0].trim(), startPeriod, endPeriod);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"Dates must follow dd/MM/yyyy HHmm format!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 117
    }
  },
  {
    "path": "src/main/java/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.fileName \u003d s;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void save(TodoList todoList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(fileName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            oos.writeObject(todoList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Something has gone wrong.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public TodoList load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        TodoList todoList \u003d new TodoList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FileInputStream fileInputStream \u003d new FileInputStream(fileName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            todoList \u003d (TodoList) objectInputStream.readObject();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            objectInputStream.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"File is not found\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Something went wrong!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Classes are not loaded\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 46
    }
  },
  {
    "path": "src/main/java/util/TodoList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class TodoList implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    TodoList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Task markAsDone(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return list.remove(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public int length() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return IntStream.rangeClosed(1, list.size())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                        .mapToObj(index -\u003e String.format(\"%d. %s\", index, list.get(index - 1)))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                        .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public List\u003cTask\u003e find(String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return  this.list.stream()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                .filter(task -\u003e task.toString().contains(description))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public Task update(int index, Task newTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return list.set(index - 1, newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 52
    }
  },
  {
    "path": "src/main/java/util/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "package util.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 7
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 15
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            fx:controller\u003d\"ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void parserTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(new String[]{\"gibberish\"}));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void addTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        TodoList todoList \u003d new TodoList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        todoList.add(new Todo(\"desc\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assertEquals(1, todoList.length());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        todoList.delete(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 19
    }
  }
]
