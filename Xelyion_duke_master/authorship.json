[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "group \u0027src.main.java\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    mainClassName \u003d \"SerSlacksalot.GUI.Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 30,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1 "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Event    | Not done | task2 /at 11pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Deadline | Not done | task3 /by 11/12/2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 4
    }
  },
  {
    "path": "dukeArchive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "task.Event    | Done     | task2 /at 11pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "task.Deadline | Not done | task3 /by Wed Dec 11 18:00:00 SGT 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/GUI/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdisplayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tCollections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tgetChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsetAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tvar db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdb.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 60
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/GUI/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tApplication.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 12
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/GUI/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tAnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tScene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tstage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tstage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 32
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/GUI/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.duke.Duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tduke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Solution adapted from https://www.codota.com/code/java/methods/javafx.stage.Stage/close"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tuserInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tif (response.equals(new Ui().showFarewell())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tStage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tstage.fireEvent(new WindowEvent(stage,WindowEvent.WINDOW_CLOSE_REQUEST"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 65
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents an adding to task list command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Commands include adding Deadlines, Events and ToDos to the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic AddCommand(String type, String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the command.AddCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds Deadlines: \"deadline\"."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds Events: \"event\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds ToDos: \"todo\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The ui.Ui currently running."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to identify command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        switch (this.type) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new Deadline(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                newTask.understandDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new Event(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                newTask.understandDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new ToDo(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"AddCommand Exception: Unable to identify command\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\" + newTask + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \"Now you have \" + TaskList.tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 71
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * An abstract class command, created from the parser.Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains Strings to store the command and type of command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command(String type, String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.command \u003d fullCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 27
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the Exception command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Returns the exception as a string to be displayed in DialogBox"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic ExceptionCommand(String type, String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsuper(type, command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Executes the ExceptionCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @return output The String output for GUI message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString output \u003d this.command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 29
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Sets the boolean flag isExit to true for ui.Ui to exit loop."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public ExitCommand(String type, String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the ExitCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Sets static boolean variable isExit to \"true\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d ui.showFarewell();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 31
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the help command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Displays the list of keywords that can be invoked."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic HelpCommand(String type, String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsuper(type, command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Executes the command.HelpCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @return output The message detailing the keywords that can be invoked."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString output \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"The following details functions and the command to invoke them:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Add a task: deadline/event/todo\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Display current task list: list\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Mark a task as done: done\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Delete a task: delete\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Search for a task by keyword: find\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Save the current task list to backup: save\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Archives the current task list : archive save\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Loads task list from the archive load\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Clear the current task list: clear\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Exit the program: bye\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"Please use the respective keywords for more information\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 41
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/StorageCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a storage command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Commands include \"save\", \"archive\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * As well as searching task list and marking task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class StorageCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public StorageCommand(String type, String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the storage.Storage command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Saving task list to file: \"save\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Load file to new task list and display: \"display\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If command is not identified."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (this.type.equals(\"save\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d storage.saveTaskList(TaskList.tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d e;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (this.type.equals(\"display\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            storage.displayTaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d \"The following is your saved task list\\n\" + taskList.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (this.type.equals(\"archive\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                assert (this.command.equals(\"save\") || this.command.equals(\"load\")) : \"assertionError\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (this.command.contains(\"save\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output \u003d storage.archiveSaveTaskList(TaskList.tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    taskList.clearTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else if (this.command.contains(\"load\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    taskList \u003d storage.archiveLoadTaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output \u003d \"The archived task list has been loaded\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    throw new DukeException(\"Storage Exception: TaskListCommand not identified.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (AssertionError e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String assertionError \u003d \"Assertion Error\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d assertionError;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 64
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/command/TaskListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Types of command include \"clear\", \"delete\", \"done\", \"find\", \"list\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class TaskListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskListCommand(String type, String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the TaskList command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes all tasks from task list: \"clear\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes a task from task list: \"delete\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Mark a task as done: \"done\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Search for a task: \"find\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Displays the task list: \"list\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to identify command/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (type.equals(\"clear\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.clearTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.deleteTask(this.command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.markAsDone(this.command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"find\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.searchByKeyword(this.command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (TaskList.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d \"Congratulations! You have no tasks remaining!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d taskList.printTaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"TaskListCommand Exception: Command not identified.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 53
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.GUI.DialogBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.GUI.MainWindow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.storage \u003d new Storage(\"src\\\\main\\\\resources\\\\storageData\\\\duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            taskList \u003d storage.displayTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Receives input from the GUI as user input and sends it to be parsed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Places the user input and response in a DialogBoxes and display them."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param stage The stage of the GUI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private void handleUserInput(Stage stage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String userText \u003d (userInput.getText());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String dukeText \u003d (getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Sends user input to be parsed into a command.Command, which is then executed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns message to be placed in Dialog Box for Duke\u0027s response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The String from user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The output message after parsing the command through Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Command command \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d command.execute(ui, taskList, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d e.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 79,
      "-": 2
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * The DukeException returns a message detailing the exceptions thrown in the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 19
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.ExceptionCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.StorageCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.command.TaskListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a Parser."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Determines the type of the task to create an appropriate command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Splits the full command into keyword and description based on keywords."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Creates and returns a command.Command object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are AddCommands: \"deadline\", \"event\", \"todo\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The follow type is a HelpCommand: \"help\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following type is an ExitCommand: \"exit\"."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are StorageCommands: \"archive\", \"save\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are TaskListCommands: \"clear\", \"delete\", \"done\", \"find\", \"list\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The HelpCommand is returned by default if no keyword is detected."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return command A Command Class to be executed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications of each type."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseFind(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"clear\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseClear(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseExit(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"save\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseSave(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"archive\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseArchive(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseList(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseDelete(fullCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseMarkDone(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d new HelpCommand(\"help\", fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            command \u003d new ExceptionCommand(\"DukeException\" ,e.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"find\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseFind(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify keyword for search in the format:\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"find -YourKeywordHere-\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        outputCommand \u003d new TaskListCommand(\"find\", fullCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"clear\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseClear(String fullCommand) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"clear\", fullCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"bye\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand An ExitCommand Class to be executed."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseExit(String fullCommand) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command  outputCommand \u003d new ExitCommand(\"exit\", fullCommand);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseSave(String fullCommand) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new StorageCommand(\"save\", fullCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"archive\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A StorageCommand Class to be executed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseArchive(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(7);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            String errorMessage \u003d \"Parser Exception: Please specify archive command in the format:\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"archive save: Saves the task list to archive and clears it.\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"archive load: Load the task list from archive\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand.substring(1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Command outputCommand \u003d new StorageCommand(\"archive\", fullCommand);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            return outputCommand;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"archive\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseList(String fullCommand) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"list\", fullCommand);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"delete\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseDelete(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify keyword for deletion in the format:\\n\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"delete -YourKeywordHere-\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(1);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        char firstChar \u003d fullCommand.charAt(0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (firstChar \u003c 0 || firstChar \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify a number to be deleted\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"delete\", fullCommand);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"done\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseMarkDone(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            String errorMessage \u003d \"Parser Exception: Please specify task to be marked done in the format:\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"done #\\n Where # is the index of the task\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Use the keyword (list) to display the task list\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.charAt(0) \u003c \u00270\u0027 || fullCommand.charAt(0) \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Parser Exception: Please use numbers 1-9 to specify index\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"done\", fullCommand);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"deadline\" or \"event\" or \"todo\"."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand An AddCommand Class to be executed."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static Command parseAddCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify event according to the format:\\n\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"event -InsertEventHere- /at DD/MM/YYYY HHMM\\n\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (event MyEvent /at 11/12/2019 1830)\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify deadline according to the format:\\n\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"deadline -InsertDeadlineHere- /by DD/MM/YYYY HHMM\\n\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (deadline MyDeadline /at 11/12/2019 1830)\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(8);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify todo according to the format:\\n\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"todo -InsertToDoHere- \\n\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (todo MyToDo)\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Parser Exception: Unable to identify AddCommand\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new AddCommand(type, fullCommand);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 243
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 16
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"SerSlacksalot.GUI.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" maxHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 19
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a file name to read and write from."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains an archive file name to read and write from."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a boolean that decides if the archive file should be used."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String archiveFileName \u003d \"src\\\\main\\\\resources\\\\storageData\\\\dukeArchive.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String initialTaskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected boolean hasInitialized \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected boolean isArchive \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Writes the contents of the task list onto the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param tasks The task list to get tasks from."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message indicating that task list has been saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If unable to write to file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String saveTaskList(ArrayList\u003cTask\u003e tasks) throws Exception{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String strLine \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            String fileToOpen \u003d this.fileName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (isArchive) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                fileToOpen \u003d archiveFileName;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileToOpen, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //Appends the string to the file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            for (Task x : tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String type \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                switch (x.type) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"To-Do   \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"Event   \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"Deadline\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String isDone \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (x.isDone) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    isDone \u003d \"Done    \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    isDone \u003d \"Not done\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String description \u003d x.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String time \u003d x.getTime();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                strLine \u003d type + \" | \" + isDone + \" | \" + description + time + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                fw.write(strLine);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fw.write(\"End of file\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (isArchive) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d \"Archive task list has been saved! Current task list has been cleared.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d \"Task list has been saved!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Storage Exception: Error when writing to file.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Reads the file to add tasks to the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fileInput The String read from file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList  The task list to get tasks from."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return taskList The updated task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList loadFromFile(String fileInput, TaskList taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        boolean isDone \u003d true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fileInput.contains(\"Not done\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String newCommand \u003d fileInput.substring(22);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fileInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newDeadline \u003d new Deadline(newCommand);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newDeadline.isDone \u003d isDone;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newDeadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fileInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newEvent \u003d new Event(newCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newEvent.isDone \u003d isDone;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newEvent);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newToDo \u003d new ToDo(newCommand);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newToDo.isDone \u003d isDone;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newToDo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Loads from the specified file for initialization."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Saves the task list to the storage.Storage object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does not load from file if already initialized."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return taskList The updated task list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If file is empty."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList displayTaskList() throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String fileToOpen \u003d fileName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (isArchive) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fileToOpen \u003d archiveFileName;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String strLine \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String printQueue \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(fileToOpen));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //read the file content"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            printQueue +\u003d (\"Here is your task list file:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            while (strLine !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                sb.append(strLine);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                strLine \u003d br.readLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (strLine.contains(\"End of file\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (!this.hasInitialized) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    loadFromFile(strLine, taskList);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                printQueue +\u003d strLine;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            this.hasInitialized \u003d true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Storage Exception: Error when reading \" + fileToOpen);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        initialTaskList \u003d printQueue;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Writes the contents of the task list onto the archive file."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param tasks The task list to get tasks from."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message indicating that archive task list has been saved."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String archiveSaveTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d saveTaskList(tasks);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList archiveLoadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        isArchive \u003d true;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d true;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            hasInitialized \u003d false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList output \u003d displayTaskList();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d false;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"storage.Storage Exception: Error when loading from archive\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 200
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the time of the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Deadline(String descriptionAndTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(descriptionAndTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d descriptionAndTime.split(\"/by\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d splitString[0].substring(1, splitString[0].length() - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.time \u003d splitString[1].substring(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the time of the task.Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return timeToGet String containing the time of the task.Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return (\" /by \" + this.time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines date from time input if format fits \"DD/MM/YYYY HHMM\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If date is unable to be understood or parsed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d this.time.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        //If time input is split exactly into date and time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //If time input has exactly 4 digits"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (splitString[1].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(splitString[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long hour \u003d Long.parseLong(splitString[1].substring(0, 2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long min \u003d Long.parseLong(splitString[1].substring(2, 4));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                date.setTime(date.getTime() + ((hour * 60 + min) * 60000));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                this.time \u003d date.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(\"Time is not in the correct format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Date is not in the format: (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[D][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \" (by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 66
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents an event to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Event(String descriptionAndTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(descriptionAndTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d descriptionAndTime.split(\"/at\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d splitString[0].substring(1, splitString[0].length() - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.time \u003d splitString[1].substring(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines date from time input if format fits \"DD/MM/YYYY HHMM\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If date is unable to be understood or parsed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d this.time.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        //If time input is split exactly into date and time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //If time input has exactly 4 digits"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (splitString[1].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(splitString[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long hour \u003d Long.parseLong(splitString[1].substring(0, 2));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long min \u003d Long.parseLong(splitString[1].substring(2, 4));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                date.setTime(date.getTime() + ((hour * 60 + min) * 60000));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                this.time \u003d date.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(\"Time is not in the correct format\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Date is not in the format: (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the time of the task.Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return timeToGet String containing the time of the task.Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String timeToGet \u003d (\" /at \" + this.time);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return timeToGet;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[E][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 67
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the description and type of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains boolean flag to determine if task has been done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines if task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return O if done, X if not done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Gets time of the task for Events and Deadlines."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does nothing for ToDos or Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return time Time of the event or deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses the time input the understand date."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does nothing for ToDos or Tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If unable to understand date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 51
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(description.substring(1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[T][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 20
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import SerSlacksalot.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the list of tasks in an ArrayList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command command.Command that includes the index of task to be marked."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message to indicate task that has been done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to locate index of task to be marked as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String markAsDone(String command) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        int completedTaskNumber \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (completedTaskNumber \u003e tasks.size()){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"taskList.TaskList Exception: Index of task not found\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks.get(completedTaskNumber - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String markedDoneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +  tasks.get(completedTaskNumber - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return markedDoneMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Prints the entire task list with index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The printed task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String printTaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        for (Task x : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d (\"\\n\" + x);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Clears the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return clearListMessage The message to indicate task list has been cleared."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String clearTaskList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String clearListMessage \u003d  \"The task list has been cleared!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return clearListMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes a task from the task list, and returns a string to update on remaining tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command The index of the task to be deleted, starts from 1."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message to update on remaining tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to locate index of task to be deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String deleteTask(String command) throws DukeException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task removedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d  (\"Noted. I\u0027ve removed this task:\\n\" + removedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d (\"\\nNow you have \" + tasks.size() + \" tasks left in the list\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d (\"Congratulations, your last task has been deleted!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"taskList.TaskList Exception: Index of task to be deleted not found.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Searches the task list with a keyword and prints all that matches."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Prints \"There are no matching tasks in your list\" if no match is found."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command command.Command that includes the keyword to be searched for."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The string containing the located task/s or error message."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String searchByKeyword(String command) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        command \u003d command.substring(1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        for (Task x : tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (x.description.contains(command)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                int index \u003d tasks.indexOf(x) + 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (!hasMatch) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output +\u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    hasMatch \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d (\"\\n\" + index + \".\" + x);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (!hasMatch) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d \"There are no matching tasks in your list\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 108
    }
  },
  {
    "path": "src/main/java/SerSlacksalot/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "package SerSlacksalot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the user interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a set of display messages."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the welcome message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return welcome The welcome message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String welcome \u003d  \"Yoda, I am. Help you, how can I?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return welcome;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the farewell message and closes the scanner."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return farewell The farewell message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String showFarewell() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String farewell \u003d  \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return farewell;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Reads system input and returns it as String."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return fullCommand The full command as input by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String fullCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xelyion": 43
    }
  },
  {
    "path": "src/main/resources/storageData/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 2
    }
  },
  {
    "path": "src/main/resources/storageData/dukeArchive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 2
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"SerSlacksalot.GUI.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 19
    }
  },
  {
    "path": "src/test/java/BasicTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class BasicTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tvoid justAnExample() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tSystem.out.println(\"Gradle Tests are running.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 9
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart1.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial Part 1 – Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX lifecycle of an application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine yourself as a director of a play. First you provision the props that you will feature in your play. These can be hand props for your actors to interact with or even set dressings just to liven up the background. You then decide where to layout the props for every scene. With a proper script in hand, you can finally approach a theatre and request for a stage. There on, it’s just a matter of pulling the curtains on your masterpiece."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A JavaFX application is like a play you are directing. Instead of creating props, you create `Nodes` (`Nodes` are the fundamental building blocks of a JavaFX application), and place them onto a `Scene` (a scene is a graph of `Node`s). Then, you set your `Scene` on a `Stage` provided by JavaFX. When you call `Stage#show()` method, JavaFX renders a window with your `Stage` on it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up Java FX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are not using Gradle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Download the [JavaFX 11 SDK](https://gluonhq.com/products/javafx/) and unzip it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the `libs` folder from the SDK into your project (note: `JAVAFX_HOME` is the directory in which you have unzipped the JavaFX SDK). "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   `File` \u003e `Project Structure` \u003e `Libraries` \u003e `+` \u003e `Java` \u003e `{JAVAFX_HOME}/lib`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. From `Run` \u003e `Edit Configurations`, add the following line into your `VM options` for each of the `main` classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   `--module-path {JAVAFX_HOME}/lib --add-modules javafx.controls,javafx.fxml`\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   e.g., `--module-path C:/javafx-sdk-11.0.2/lib --add-modules javafx.controls,javafx.fxml`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are using Gradle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Update your `build.gradle` to include the following lines:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing your first program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "As customary, let’s start off with a simple “Hello World” program. Modify your `Duke` class to extend `javafx.application.Application`. This requires you to override the `Application#start()` method and provide a concrete implementation. Notice that the method signature for `Application#start()` has a parameter `Stage`. This is the _primary stage_ that JavaFX provides."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Note how we have created a `Label` to contain the text that we want to show. We then create the `Scene` and set its content. Finally, we set the stage and show it. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Next, we create another Java class, `GUI.Launcher`, as an entry point to our application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "The `GUI.Launcher` class is reproduced below in its entirety."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class GUI.Launcher {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Run `GUI.Launcher` and you should see something like this:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "![Hello World](assets/HelloWorld.png) "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! You have created your first GUI application!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. We mentioned that `Node`s are the fundamental building blocks of JavaFX and used a `Label` as our root node in the HelloWorld application."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are some of the other types of `Node`s?"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   1. How does JavaFX group them?"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Node`s can be interacted with like Plain Old Java Objects (POJO)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What properties of a `Label` can you change programmatically?"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try changing the `Label` to have a font of Arial at size 50."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "1. You’ve learnt that a `Stage` can be thought of as a window. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you have more than one `Stage` an application?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try creating another stage and showing it! What happens?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 4,
      "-": 106
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "For Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `GUI.Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `GUI.Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Now, we can go back to the `GUI.Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "You have successfully implemented a fully functional GUI for Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 3,
      "-": 240
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "   Why does `GUI.Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "   The `GUI.Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s return to Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "As part of the effort to separate the code handling Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Let\u0027s create a new `GUI.Main` class as the bridge between the existing logic in `Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "**GUI.Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class GUI.Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(GUI.Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "The last change that we have to make is to point our `GUI.Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "In `GUI.Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Application.launch(GUI.Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 9,
      "-": 285
    }
  }
]
