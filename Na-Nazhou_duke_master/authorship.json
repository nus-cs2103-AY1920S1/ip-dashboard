[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "D | 0 | oral presentation preparation | 18/09/2019 1400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "E | 0 | coding workshop | 11/10/2019 1000 11/10/2019 1100"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate by_date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime by_time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d by.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.by_date \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.by_time \u003d parseTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate parseDate(String dateString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime parseTime(String timeString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalTime.parse(timeString, formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE, d MMMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"%s, %s\", dateFormatter.format(by_date), timeFormatter.format(by_time));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"D | %d | %s | %s %s\", getStatusCode(), description ,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                dateFormatter.format(by_date), timeFormatter.format(by_time));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatBy() + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final static ArrayList\u003cTask\u003e ALL_TASKS \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            importTasks(\"../data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        // Greet"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String command \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            // Exit"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                run(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            // Empty line separator at the end of the command response"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            exportTasks(\"../data/duke.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"Failed to save tasks.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void importTasks(String filePath) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    throw new DukeException(\"Failed to load tasks.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            ALL_TASKS.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void exportTasks(String filePath) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (Task task : ALL_TASKS) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fw.write(task.serialize());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void run(String command) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            showTasks();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^done\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            completeTask(taskId);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^(todo|deadline|event).*\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            addTask(command);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^delete\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            deleteTask(taskId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void showTasks() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (ALL_TASKS.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"There are currently no tasks in your list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            for (int i \u003d 0; i \u003c ALL_TASKS.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Task task \u003d ALL_TASKS.get(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                System.out.printf(\"%d.%s\\n\", (i + 1), task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void completeTask(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task task \u003d ALL_TASKS.get(taskId - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.printf(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    String.format(\"Task No.%d is not present in your list. Please enter a valid task ID.\", taskId));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void addTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] commandArgs \u003d command.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String taskType \u003d commandArgs[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            newTask \u003d new Todo(commandArgs[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs.length \u003c 2 || commandArgs[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs[1].startsWith(\"/by\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!commandArgs[1].contains(\"/by\") || commandArgs[1].endsWith(\"/by\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] deadlineArgs \u003d commandArgs[1].split(\"\\\\s*/by\\\\s*\", 2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            newTask \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs.length \u003c 2 || commandArgs[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs[1].startsWith(\"/at\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!commandArgs[1].contains(\"/at\") || commandArgs[1].endsWith(\"/at\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] eventArgs \u003d commandArgs[1].split(\"\\\\s*/at\\\\s*\", 2);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            newTask \u003d new Event(eventArgs[0], eventArgs[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ALL_TASKS.add(newTask);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.printf(\"  %s\\n\", newTask);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        int total \u003d ALL_TASKS.size();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.printf(\"Now you have %d task%s in the list.\\n\", total, total \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static void deleteTask(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task task \u003d ALL_TASKS.get(taskId - 1);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            ALL_TASKS.remove(task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.printf(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int total \u003d ALL_TASKS.size();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.printf(\"Now you have %d task%s in the list.\\n\", total, total \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    String.format(\"Task No.%d is not present in your list. Please enter a valid task ID.\", taskId));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 193,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"\\u2639 OOPS!!! %s\", getMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate start_date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime start_time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate end_date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime end_time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d at.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.start_date \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.start_time \u003d parseTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (dateTimeArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.end_date \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.end_time \u003d parseTime(dateTimeArr[2]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.end_date \u003d parseDate(dateTimeArr[2]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.end_time \u003d parseTime(dateTimeArr[3]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate parseDate(String dateString) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime parseTime(String timeString) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalTime.parse(timeString, formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatAt() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (start_date.equals(end_date)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s\", dateFormatter.format(start_date),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    timeFormatter.format(start_time), timeFormatter.format(end_time));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s, %s\", dateFormatter.format(start_date),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    timeFormatter.format(start_time), dateFormatter.format(end_date),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    timeFormatter.format(end_time));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"E | %d | %s | %s %s %s %s\", getStatusCode(), description ,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                dateFormatter.format(start_date), timeFormatter.format(start_time),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                dateFormatter.format(end_date), timeFormatter.format(end_time));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatAt() + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected int getStatusCode() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"This task was marked as done before.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract String serialize();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"T | %d | %s\", getStatusCode(), description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 16
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the time of an event cannot be empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of an event cannot be empty."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The time of an event cannot be empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 71
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book /by 06/06/2019 0800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting /at 06/08/2019 1400 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline /by 06/06/2019 0800"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event /at Aug 06/08/2019 1400 06/08/2019 1600"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "blah"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 34
    }
  }
]
