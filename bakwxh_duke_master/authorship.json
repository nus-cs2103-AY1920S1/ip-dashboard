[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "group \u0027src/main/java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "bakwxh": 16
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public static DialogBox getDukeIntro(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 57
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate boolean initialised;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param filePath Path to save file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Duke(final String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        ui.setTaskList(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        initialised \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Main method of Duke. Takes in input from GUI, processes and"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * does the appropriate reaction to the tasklist, and generates duke\u0027s"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * response."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param rawInput User\u0027s raw input from GUI."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return String if Duke\u0027s response."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String run(String rawInput) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (!initialised) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tloadData();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString command \u003d parser.getCommand(rawInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tString result \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tswitch (command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printBye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printFind(parser.processFind(rawInput));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tint index \u003d parser.processDone(rawInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.doneTask(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tstorage.saveMemory(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printDone(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask deletedTask \u003d tasks.deleteTask(parser.processDelete(rawInput));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tstorage.saveMemory(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printDeleted(deletedTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tTask newTask \u003d parser.generateTask(rawInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\ttasks.addTask(newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tstorage.saveMemory(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printAdded();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"undo\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.printUndo(tasks.undoTask());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tstorage.saveMemory(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"none\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d ui.showLoadingError();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tresult \u003d ui.showException(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Replace this stub with your completed method."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tString getResponse(String input) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t    return run(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid loadData() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tstorage.load();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tinitialised \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tui.showException(e);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tString getIntro() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn ui.logoAndIntro();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "bakwxh": 112
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private String dir \u003d System.getProperty(\"user.dir\") + \"/src/main/java/savedData.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Duke duke \u003d new Duke(dir);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            assert fxmlLoader !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showDukeIntro();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    void showDukeIntro() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                DialogBox.getDukeDialog(duke.getIntro(), dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 57
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructs a DukeException that prints with inputted message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param message Exception message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Removes \"exceptions.DukeException: \" from start of message,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * and returns the message as a string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Exception message as string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Override public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString temp \u003d super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn temp.substring(26);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 25
    }
  },
  {
    "path": "src/main/java/savedData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "todo fill water"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "deadline buy waterbottle /by 05/05/2005 2050"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 2
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * The time the deadline must be completed by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Date by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructs a deadline task with the given description,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * and the time it must be completed by."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param by Time to be completed by."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the type of task,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * description, as well as the deadline of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Display format of deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[D]\" + super.showTask() + \" (by: \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the task in format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * for saving the task to a .txt file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Save format of deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tString byString \u003d sdf.format(by);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"donedeadline \" + super.getDesc() + \" /by \" + byString;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"deadline \" + super.getDesc() + \" /by \" + byString;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.by;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 56
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package tasks; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * The time the event is at."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Date at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructs an event task with the given description,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * and the time the event is at."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param at Time of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the type of task,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * description, and time of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Display format of event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[E]\" + super.showTask() + \" (at: \" + at.toString() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the task in format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * for saving the task to a .txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Save format of event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tString atString \u003d sdf.format(at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"doneevent \" + super.getDesc() + \" /at \" + atString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"event \" + super.getDesc() + \" /at \" + atString;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 58
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Constructs task with input description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the tasks status icon and its description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Display format of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tisDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \treturn this.isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns the task as a string in a format to save in .txt."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Implemented for children tasks to override."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Placeholder return, returns task description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 56
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param description Description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Shows task type and task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Display format of to-do."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"[T]\" + super.showTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * Returns a string of the task in format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * for saving the task to a .txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     * @return Save format of to-do."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \tif (super.getDone()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"donetodo \" + super.getDesc();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t} else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t\treturn \"todo \" + super.getDesc();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 38
    }
  },
  {
    "path": "src/main/java/utilities/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Retrieve command from full user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full from user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return The command found in rawInput."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String getCommand(String rawInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (rawInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"bye\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"list\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().equals(\"undo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"undo\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"todo\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"done\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"find\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"event\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"delete\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else if (rawInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"deadline\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn \"none\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Used for generating tasks when reading from save file only."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput The input from the save file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return A task generated using rawInput."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions thrown by methods used."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Task generateTask(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTask result \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString taskType \u003d getCommand(rawInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tswitch (taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tresult \u003d new Todo(todoDesc(rawInput));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString deadlineDesc \u003d deadlineDesc(rawInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tDate deadlineTime \u003d deadlineTime(rawInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tresult \u003d new Deadline(deadlineDesc, deadlineTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString eventDesc \u003d eventDesc(rawInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tDate eventTime \u003d eventTime(rawInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tresult \u003d new Event(eventDesc, eventTime);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process data from done command from full user input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Index of task that is done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic int processDone(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn Integer.parseInt(rawInput.split(\" \")[1].trim()) - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task is done.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process data from delete command from full user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Index of task that is deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic int processDelete(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn Integer.parseInt(rawInput.split(\" \")[1].trim()) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of deadline task from full user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of deadline."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String deadlineDesc(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(9).split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process time of deadline task from full user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Time of deadline."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Date deadlineTime(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn sdf.parse(rawInput.substring(9).split(\"/by\")[1].trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of event task from full user input."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of event."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String eventDesc(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5).split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process time of event task from full user input."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Time of event."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Date eventTime(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tSimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn sdf.parse(rawInput.substring(9).split(\"/at\")[1].trim());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of an event cannot be empty.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The timing of the event is invalid.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Process description of to-do task from full user input."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput Full user input."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Description of to-do."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String todoDesc(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5).trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Returns keyword for find operation from user\u0027s full input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param rawInput User\u0027s full input."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Find command\u0027s keyword."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String processFind(String rawInput) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn rawInput.substring(5).trim();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"The keyword for find cannot be empty.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 191
    }
  },
  {
    "path": "src/main/java/utilities/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Path to save file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Storage(final String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassert filePath.isEmpty();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Saves memory to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param tasks utilities.TaskList.tasks.Task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void saveMemory(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tArrayList\u003cTask\u003e memory \u003d tasks.getMemory();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString dir \u003d System.getProperty(\"user.dir\") + \"/src/main/java/savedData.txt\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tBufferedWriter out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout \u003d new BufferedWriter(new FileWriter(dir));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IOException e1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tout.write(t.toSave() + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.flush();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tout.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Error saving data.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Loads from save file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Returns array list with saved tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tParser parser \u003d new Parser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileInputStream test \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(test);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\twhile (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tString command \u003d parser.getCommand(rawInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tswitch (command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tcase \"done\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tString doneTask \u003d command.substring(4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newDoneTask \u003d parser.generateTask(doneTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\ttaskList.add(newDoneTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\t//newDoneTask.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tTask newTask \u003d parser.generateTask(rawInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\ttaskList.add(newTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tsc.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFile newData \u003d new File(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tFileOutputStream fos;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos \u003d new FileOutputStream(newData);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos.flush();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tfos.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t} catch (IOException e1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Save file creation failed\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn taskList;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 97
    }
  },
  {
    "path": "src/main/java/utilities/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Array list for memory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e memory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Stack\u003cTask\u003e lastTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate Stack\u003cString\u003e lastCommands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/** Constructor for when there is previously saved data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param inputMemory Previous memory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic TaskList(ArrayList\u003cTask\u003e inputMemory) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tlastTasks \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tlastCommands \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d inputMemory;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Empty constructor for when there is no previous data."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists out tasks in memory."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return String of tasks stored."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String list() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tresult +\u003d \" \" + counter + \".\" + t.showTask() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tcounter++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists tasks with keyword in them."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param keyword The keyword."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return String of list of tasks with keyword contained."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String keywordList(String keyword) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tint counter \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tfor (Task t : memory) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tif (t.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tresult +\u003d \" \" + counter + \".\" + t.showTask() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcounter++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Lists the newest task in memory."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Newest task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String listLatest() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn memory.get(memory.size() - 1).showTask();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Adds a task into memory, updates the last known command and task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param t Added task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void addTask(Task t) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tmemory.add(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tlastTasks.push(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tlastCommands.push(\"add\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Deletes task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of task in memory."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Deleted task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exceptions."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic Task deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask removed \u003d memory.get(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.remove(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tlastTasks.push(removed);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tlastCommands.push(\"delete \" + index);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn removed;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Please indicate which task to delete.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"That task does not exist!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Marks task as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of done task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @throws DukeException Exception."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void doneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tmemory.get(index).markAsDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tlastTasks.push(memory.get(index));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tlastCommands.push(\"done \" + index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"Indicated task does not exist.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String undoTask() throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString result \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString lastCommand \u003d lastCommands.pop();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tString command \u003d lastCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tTask lastTask \u003d lastTasks.pop();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tswitch (command) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"add\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d \" Got it! The following task has been removed:\\n   \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.remove(memory.size() - 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d \" Got it! The following task has been recovered:\\n   \";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tint deleteIndex \u003d Integer.parseInt(lastCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.add(deleteIndex, lastTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\tcase \"done\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tresult \u003d \" Got it! The following command has been undone:\\n   \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tint doneIndex \u003d Integer.parseInt(lastCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tmemory.get(doneIndex).markAsUndone();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tlastCommand \u003d null;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tresult +\u003d lastTask.showTask() + \"\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\treturn result;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\tthrow new DukeException(\"No task to undo!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Retrieves memory array list."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return Memory array list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getMemory() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn this.memory;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 166
    }
  },
  {
    "path": "src/main/java/utilities/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "package utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tfinal static String breakLine \u003d \"_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Pointer to tasklist object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Error from unidentified command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String showLoadingError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows thrown exception."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param e Exception."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String showException(Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" ☹ OOPS!!! \" + e.toString() + \"\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows logo and intro."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String logoAndIntro() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString logo \u003d \"  _____            _        \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \" |   __  \\\\ _     _|  |  _    __ \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \" |  |   |  |  |   |  |  |/ /  / _ \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \" |  |__|  |  |__|  |      V   __/\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                + \" |_____/ \\\\___,_|__|\\\\__\\\\___|\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        return \"Hello from\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ logo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Hello! I\u0027m Duke\\n What can I do for you?\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @return String for saying goodbye."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printBye() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows list of tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ tasks.list()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Sets pointer to Duke tasklist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param tasks Tasklist."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic void setTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows done task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param index Index of done task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printDone(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine + \" Nice! I\u0027ve marked this task as done:\\n   \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ tasks.getMemory().get(index).showTask() + \"\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows deleted task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param t Deleted task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printDeleted(Task t) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString tasksLeft;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (tasks.getMemory().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttasksLeft \u003d \" Now you have 1 task in your list\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttasksLeft \u003d \" Now you have \" + tasks.getMemory().size() + \" tasks in your list.\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Noted. I\u0027ve removed this task:\\n   \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ t.showTask() + \"\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Shows added task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printAdded() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString tasksLeft;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tif (tasks.getMemory().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttasksLeft \u003d \" Now you have 1 task in your list\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\ttasksLeft \u003d \" Now you have \" + tasks.getMemory().size() + \" tasks in your list.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Got it. I\u0027ve added this task:\\n   \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ tasks.listLatest() + \"\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * Displays list of tasks containing keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * @param keyword Keyword."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printFind(String keyword) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ \" Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ tasks.keywordList(keyword) + \"\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tpublic String printUndo(String undoMessage) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\treturn breakLine"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ undoMessage"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\t\t\t+ breakLine;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 137
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.6666666666666643\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * utilities.Parser Test."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tParser parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString output \u003d parser.getCommand(\"todo die\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(\"todo\", output);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 21
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import utilities.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * utilities.TaskList.tasks.Task List Test."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\ttasklist.addTodo(\"test\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString testing \u003d tasklist.listLatest();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"[T][\" + \"\\u2718\" + \"] test\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(result, testing);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @author bakwxh"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bakwxh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t * To Do Test."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\tvoid test() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tTodo todo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString testing \u003d todo.toSave();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tString result \u003d \"todo test\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t\tassertEquals(result, testing);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bakwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bakwxh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bakwxh": 22
    }
  }
]
