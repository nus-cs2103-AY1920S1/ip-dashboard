[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    testImplementation(\"org.junit.jupiter:junit-jupiter-api:5.5.1\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.5.1\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "tasks.withType(Test) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    mainClassName \u003d \"main.Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "CowSaysBaa": 25
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "CowSaysBaa": 17
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to add a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String[] temp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an AddCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input User input taken from the scanner."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp  Parsed String array derived from input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public AddCommand(String input, String[] temp) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds the given command by creating the associated object and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * adding it to the array within task, writing the updated list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * to storage and printing the current list size. If no task is added,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * input is considered invalid and an error is displayed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        DateTime date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        boolean added \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            switch (temp[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addDeadline(input, false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                added \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addEvent(input, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                added \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addToDo(input, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                added \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (added) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                ui.printAdd(task.getList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a task and date.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid date and time.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid date and time.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 81
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Abstract class for command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public abstract void execute(TaskList task, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 15
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String[] temp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed String array derived from input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DeleteCommand(String[] temp) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Deletes the task associated with the number from task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * adding it to the array within task, writing the updated list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * to storage and printing the current list size."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException          If file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws NullPointerException If an invalid task number is received."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws NullPointerException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Task toRemove \u003d task.getList().remove(Integer.parseInt(temp[1]) - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printRemove(task.getList(), toRemove);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid task number to delete.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid task number to delete.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 48
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String[] temp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an DoneCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed String array derived from input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DoneCommand(String[] temp) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Marks a task as done, updates the file in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            int index \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printDone(task.getList(), index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid task number.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(\"Please input a valid task number.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 44
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to end the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints the termination message and ends the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 24
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the user command to find tasks with the keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String[] temp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the FindCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed array of string based on user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public FindCommand(String[] temp) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String[] keywordArray \u003d Arrays.copyOfRange(temp, 1, temp.length);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        keywords \u003d String.join(\" \", keywordArray);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Loops through the task array to find tasks with descriptions that"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * contain the keyword. Found tasks are added to an ArrayList which"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * is printed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (keywords.equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printMessage(\"Please input a valid keyword\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            for (Task curr : task.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                if (curr.getDescription().contains(keywords)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    foundList.add(curr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (!foundList.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                ui.printFound(foundList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                ui.printMessage(\"No matching task found\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 56
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to display the current list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Displays the current list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ui.printList(task.getList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 22
    }
  },
  {
    "path": "src/main/java/main/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the date and time of a task in the DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private int day, month, year, time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Constructs the DateTime object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input the date and time in DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DateTime(String input) throws IndexOutOfBoundsException, DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String[] rawInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String[] date \u003d rawInput[0].split(\"/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.time \u003d Integer.parseInt(rawInput[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (time \u003e 2359 || time \u003c 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            throw new DukeException(\"Please enter a valid time\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (day \u003c 1 || day \u003e 31) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            throw new DukeException(\"Please enter a valid day\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (month \u003c 1 || month \u003e 12) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            throw new DukeException(\"Please enter a valid month\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.day + \"/\" + this.month + \"/\" + this.year + \" \" + this.time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 40
    }
  },
  {
    "path": "src/main/java/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 47
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * The main driver of the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ui.printMessage(\"Hello! I\u0027m Duke\\n     What can i do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Starts the program sequence."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static void run() throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Storage storage \u003d new Storage(\"./todoList.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        TaskList task \u003d new TaskList(storage.fileInitialization());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            while (temp.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                ui.printMessage(\"Please input something :(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            c.execute(task, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            new ExitCommand().execute(task, ui, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 187
    }
  },
  {
    "path": "src/main/java/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 12
    }
  },
  {
    "path": "src/main/java/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 12
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the interpretation of user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Splits the user input into a String array in order to understand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * the given command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input User input String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return An command object representing the user command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static Command parse(String input) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (temp[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new DoneCommand(temp);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (temp[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new DeleteCommand(temp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (temp[0].equals(\"find\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new FindCommand(temp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new AddCommand(input, temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 40
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the storage of tasks on local text file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    File f;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates a storage object, attempts to read text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * file or create the text file if not found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param filePath path of .txt file to be read or saved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.f \u003d f;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Initialize the txt file by copying the contents of the text file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * onto a Task array."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return Task array."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ArrayList\u003cTask\u003e fileInitialization() throws FileNotFoundException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ArrayList\u003cTask\u003e clone \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] inputArr \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            boolean done;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (inputArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                switch (inputArr[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    clone.add(new ToDos(inputArr[2], done));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    clone.add(new Deadlines(inputArr[2], new DateTime(inputArr[3]), done));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    clone.add(new Events(inputArr[2], new DateTime(inputArr[3]), done));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return clone;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Replaces text file with new text file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param textToAdd Content of the new text file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If the file is not found."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Converts the given array of Task into a string that is written onto"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * the text file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr Array of Task to be translated into the text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If the file is not found."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void arrayToFile(ArrayList\u003cTask\u003e arr) throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String memo \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (Task i : arr) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            int done;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (i.isDone()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (i instanceof ToDos) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"T | \" + done + \" | \" + i.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (i instanceof Deadlines) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"D | \" + done + \" | \" + i.getDescription() + \" | \" + ((Deadlines) i).getDate() + \"\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"E | \" + done + \" | \" + i.getDescription() + \" | \" + ((Events) i).getDate() + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        writeToFile(memo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 123
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents a list of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the TaskList object with the given array."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the array of Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return Array of Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.arr;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds ToDo Task object to the array."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addToDo(String whatToAdd, boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new ToDos(message, isDone));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds Event Task object to the array."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws DukeException If the input message is not recognised."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addEvent(String whatToAdd, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        DateTime date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        date \u003d new DateTime(whatToAdd.substring(whatToAdd.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1, whatToAdd.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new Events(message, date, isDone));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds Deadline Task object to the array."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws DukeException If the input message is not recognised."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addDeadline(String whatToAdd, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        DateTime date;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        date \u003d new DateTime(whatToAdd.substring(whatToAdd.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1, whatToAdd.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new Deadlines(message, date, isDone));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 74
    }
  },
  {
    "path": "src/main/java/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private static final String BORDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \".\" + arr.get(i));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printAdd(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"       \" + arr.get(arr.size() - 1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.printf(\"     Now you have %s tasks in the list.\\n\", arr.size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printDone(ArrayList\u003cTask\u003e arr, int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.get(index).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"       \" + arr.get(index));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printRemove(ArrayList\u003cTask\u003e arr, Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.printf(\"     Now you have %s tasks in the list.\\n\", arr.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER + \"\\n\" + \"     Bye. Hope to see you again soon!\" + \"\\n\" + BORDER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     \" + errorMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     \" + message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void printFound(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \".\" + arr.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 67
    }
  },
  {
    "path": "src/main/java/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private DateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Deadlines object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param date        Date of deadline in DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Deadlines(String description, DateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the DateTime object of deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return DateTime object of deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DateTime getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 37
    }
  },
  {
    "path": "src/main/java/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private DateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Events object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param date        Date of deadline in DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Events(String description, DateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the DateTime object of Events."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return DateTime object of events."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DateTime getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 37
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task, inherited by Deadlines, Events, ToDos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Task object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    protected Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 41
    }
  },
  {
    "path": "src/main/java/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the ToDos object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ToDos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 19
    }
  },
  {
    "path": "src/main/resources/view/oldDialogueBox.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 47
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDateTime(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            assertEquals(\"10/10/2001 1000\", new DateTime(\"10/10/2001 1000\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDeadlines(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            assertEquals(\"[D][\\u2713] test (by: 10/10/1000 1000)\", new Deadlines(\"test\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    new DateTime(\"10/10/1000 1000\"), true).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDukeException(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        assertEquals(\"hi\", new DukeException(\"hi\").getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 32
    }
  }
]
