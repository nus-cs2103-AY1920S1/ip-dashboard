[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 29,
      "-": 17
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "D | 1 | tutorial | Thu Sep 05 23:00:00 SGT 2019"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "T | 0 | tutorial"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "T | 0 | acc tutorial"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "T | 0 | tutorial 3"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 4
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ByeCommand(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            throws IOException, ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return ui.showBye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    String desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Command(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public abstract String execute(Storage storage, TaskList list, Ui ui) throws IOException, ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The command line with description and date separated."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param storage The storage for the task manager."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date getDate(String[] descArr, Storage storage)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return storage.convertToDate(descArr[1].substring(3));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the task number."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param arr The array with command and description separated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task number."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public int getTaskNum(String[] arr) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 36
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public DeadlineCommand(String desc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (desc.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] descArr \u003d desc.split(\"/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Date date \u003d getDate(descArr, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Deadline deadline \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    new Deadline(getDeadlineDesc(descArr), date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            storage.appendTaskToFile(deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTaskAdded(deadline, taskList.getSize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showDeadlineError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The string array with command and description separated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getDeadlineDesc(String[] descArr) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return descArr[0].substring(9, descArr[0].length() - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 40
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public DeleteCommand(String desc) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (desc.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] descArr \u003d desc.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            int num \u003d getTaskNum(descArr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task removed \u003d taskList.removeTask(num);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTaskRemoved(removed, taskList.getSize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showNoSuchTaskError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 29
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public DoneCommand(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (desc.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] descArr \u003d desc.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            int num \u003d getTaskNum(descArr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task task \u003d taskList.markTaskAsDone(num);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTaskDone(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showNoSuchTaskError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a task manager."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * A Duke object has a file with the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Tasks can be added, deleted and updated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Image user \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            .getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Image duke \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            .getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        storage \u003d new Storage(\"/Users/michelleyong/Desktop/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(f);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (ParseException p) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            System.out.println(p);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    String getResponse(String input) throws IOException, ParseException, DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Command command \u003d Parser.getCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return command.execute(storage, taskList, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Runs the task manager."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void run() throws IOException, ParseException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String desc \u003d parser.nextCommandDesc();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] commandArr \u003d parser.breakDownCommand(desc);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String command \u003d parser.getCommand(commandArr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (desc.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Todo todo \u003d parser.getTodo(desc);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(todo);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(todo, taskList.getSize());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(todo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTodoError();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (desc.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    String[] descArr \u003d parser.breakDownDescription(desc);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Date date \u003d parser.getDate(descArr, storage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Deadline deadline \u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                            new Deadline(parser.getDeadlineDesc(descArr), date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(deadline);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(deadline, taskList.getSize());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(deadline);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printDeadlineError();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (desc.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    String[] descArr \u003d parser.breakDownDescription(desc);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Date date \u003d parser.getDate(descArr, storage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Event event \u003d new Event(parser.getEventDesc(descArr), date);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    taskList.addTask(event);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskAdded(event, taskList.getSize());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.appendTaskToFile(event);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printEventError();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                taskList.printList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (desc.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    int num \u003d parser.getTaskNum(commandArr);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task task \u003d taskList.markTaskAsDone(num);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskDone(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printNoSuchTaskError();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ui.printBye();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (desc.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    int num \u003d parser.getTaskNum(commandArr);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (num \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task removed \u003d taskList.removeTask(num);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printTaskRemoved(removed, taskList.getSize());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    storage.updateTaskInFile(taskList.getList());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printNoSuchTaskError();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String toFind \u003d parser.getKeyWord(desc);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                ArrayList\u003cTask\u003e taskFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    if (t.hasKeyword(toFind)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        taskFound.add(t);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                taskList.printTaskFound(taskFound);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    ui.printUnknownCommandError();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        });"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        });"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        });"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        });*/"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /*private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /*private void handleUserInput() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String userText \u003d new String(userInput.getText());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String dukeText \u003d new String(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                DialogBox.getUserDialog(userText, new Image(user)),"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new Image(duke))"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 282,
      "-": 3
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public EventCommand(String desc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (desc.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] descArr \u003d desc.split(\"/\");;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Date date \u003d getDate(descArr, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Event event \u003d new Event(getEventDesc(descArr), date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            storage.appendTaskToFile(event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTaskAdded(event, taskList.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showEventError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param descArr The string array with command and description separated."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getEventDesc(String[] descArr) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return descArr[0].substring(6, descArr[0].length() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 38
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public FindCommand(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String toFind \u003d getKeyWord(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ArrayList\u003cTask\u003e taskFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (t.hasKeyword(toFind)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                taskFound.add(t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskList.showTaskFound(taskFound);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Get the keyword to be searched."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param line The command line."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getKeyWord(String line) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return line.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 31
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ListCommand(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskList.showList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 12
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void handleUserInput() throws IOException, ParseException, DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 54
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Handles the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the command type of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param input The input by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The command type."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws DukeException If the command by the user is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public static Command getCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new TodoCommand(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new EventCommand(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new ByeCommand(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 47
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Loads the task from the file into an array list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks to be loaded from the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Scanner fs \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        while (fs.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String line \u003d fs.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String[] taskArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String type \u003d taskArr[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Todo todo \u003d new Todo(taskArr[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String date \u003d taskArr[3].substring(8, 10) + \" \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(4, 7) + \" \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(24, 28) + \" \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(11, 16);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskArr[2],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        convertToDate(date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                String date \u003d taskArr[3].substring(8, 10) + \" \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(4, 7) + \" \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(24, 28) + \" \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                        + taskArr[3].substring(11, 16);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                Event event \u003d new Event(taskArr[2], convertToDate(date));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                if (taskArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fs.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Converts the string to a date."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param str The date in string format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws ParseException If a parse exception occurred."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date convertToDate(String str) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Date date \u003d sdf.parse(str);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Loads the task from the file into an array list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param textToAppend The text to be appended to the file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks to be loaded from the file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Converts the task to string format to be added to the file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param task The task to be converted in string format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task in a string format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private String convertTaskToFileFormat(Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer textToAdd \u003d new StringBuffer();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String type \u003d task.getType();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"T | \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"D | \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\"E | \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(task.getStatusNum());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(\" | \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(task.getDescription());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        if (type.equals(\"D\") || type.equals(\"E\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(\" | \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(task.getDate());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        textToAdd.append(\"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return textToAdd.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Appends task to the file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param task The task to be appended to the file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void appendTaskToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        String textToAppend \u003d convertTaskToFileFormat(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        appendToFile(textToAppend);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Writes the current task to the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param textToAdd The task to be written to the file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Updates the current list of tasks to the file."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param list The list of tasks to be updated to the file."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void updateTaskInFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer textToAdd \u003d new StringBuffer();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            textToAdd.append(convertTaskToFileFormat(task));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        writeToFile(textToAdd.toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 164
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Contains the task list and updates tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public TaskList() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the task of index n."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task of index n."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task getTask(int n) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.get(n);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the size of the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Adds new task to the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param t The task to be added to the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Marks task of index n in the list as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task to be marked as done in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task after it is marked as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task markTaskAsDone(int n) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Task task \u003d list.get(n);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Removes task of index n from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param n The index of the task to be removed from the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task after it is removed from the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task removeTask(int n) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return list.remove(n);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows the list of all tasks in the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        int length \u003d list.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer listDetails \u003d new StringBuffer(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            listDetails.append(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            listDetails.append(\". \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            listDetails.append(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            listDetails.append(\"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return listDetails.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows the list of tasks found by keyword in the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param taskList The list of tasks found by the keyword."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The list of tasks found."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showTaskFound(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        int length \u003d taskList.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer taskFound \u003d new StringBuffer(\"Here are the matching tasks in your list:/n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Task task \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskFound.append(i);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskFound.append(\". \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskFound.append(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskFound.append(\"/n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskFound.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 111
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public TodoCommand(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Execute the command and stores the todo added into the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param storage The storage class with the file which the todo is loaded to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param taskList The class with list of task currently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The todo that is added, showing the number of tasks in the list currently."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            if (desc.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            String task \u003d desc.substring(5);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            taskList.addTask(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            storage.appendTaskToFile(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTaskAdded(todo, taskList.getSize());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            return ui.showTodoError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 34
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Deals with the interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows the details of the task added."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The task added and the number of task in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showTaskAdded(Task task, int size) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer taskAdded \u003d new StringBuffer(\"Got it. I\u0027ve added this task:\\n \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskAdded.append(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskAdded.append(\"\\nNow you have \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskAdded.append(size);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskAdded.append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskAdded.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows todo error."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The todo error message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showTodoError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"OOPS!!! The todo description cannot be empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows deadline error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showDeadlineError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"OOPS!!! The deadline description cannot be empty.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows hello when the application runs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void showHello() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"Hello! I\u0027m your task manager!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows bye when the application ends."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows the details of the task marked done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showTaskDone(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer taskDone \u003d new StringBuffer(\"Nice! I\u0027ve marked this task as done: /n \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskDone.append(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskDone.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows the details of the task removed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showTaskRemoved(Task removed, int size) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        StringBuffer taskRemoved \u003d new StringBuffer(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskRemoved.append(removed);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskRemoved.append(\"Now you have \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskRemoved.append(size);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        taskRemoved.append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return taskRemoved.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows event error."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showEventError() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"OOPS!!! The event description cannot be empty.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows task error."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showNoSuchTaskError() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"OOPS!!! There is no such task.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Shows command error."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String showUnknownCommandError() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, I don\u0027t know what you mean :(\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 95
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " *  Simulates an exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DukeException extends Exception { }"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 6
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a deadline object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param by The date that the deadline is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.date \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + \" (by: \" + super.date + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 26
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.date \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d\"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + \" (at: \" + super.date + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 28
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    protected String type \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The date of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the status icon of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Tick if it is done, cross otherwise."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The status icon of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Gets the status number of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * 1 if it is done, 0 otherwise."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return The status number of the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String getStatusNum() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Checks if the task description contains the keyword"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param keyword the word to be found"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @return true if the task description contains the keyword"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 92
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " * Represents a todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * Creates a todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 21
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void testTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Task task \u003d new Task(\"Tutorial 1\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(\"Tutorial 1\", task.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"All task tests passed.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michelleykw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    public void testEvent() throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Date date \u003d sdf.parse(\"31 May 2020 00:00\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        Event event \u003d new Event(\"His Birthday\", date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(\"Event\", event.getType());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        assertEquals(1, event.getStatusNum());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "        System.out.println(\"All event tests passed.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michelleykw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michelleykw": 28
    }
  }
]
