[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "event type | isDone | description | extra description"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "D | 0 | CS2107 Assignment 01 | 1st of October 2018, 10.18pm"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Variable initialization"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String underscore \u003d \"    ____________________________________________________________\" + \"\\n\" ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String output \u003d \"\"; String taskType \u003d \"\"; String description \u003d \"\"; String extraDescription \u003d \"\"; int taskNum \u003d -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.tasks \u003d this.storage.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Creates scanner object to handle input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String inputLine \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while ( true ){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            taskType \u003d inputLine.split(\" \")[0]; // taskType contains the first word of the command input string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                // LIST case"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                if (taskType.equals(possibleTasks.LIST.toString().toLowerCase())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        output +\u003d \"     \" + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output +\u003d underscore;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // DONE case"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.DONE.toString().toLowerCase())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    taskNum \u003d Integer.parseInt(inputLine.substring(5)); // NTS: check for index outofbounds"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    taskNum--; // ArrayList index \u003d\u003d taskNum - 1"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.get(taskNum).setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            \"       [\" + tasks.get(taskNum).getStatusIcon() + \"] \" + tasks.get(taskNum).getTask() +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            \"\\n\" + underscore;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // TODO case"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.TODO.toString().toLowerCase())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if (inputLine.length() \u003c 5){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException (\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d inputLine.substring(5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newTodo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            + newTodo.toString() + \"\\n     Now you have \" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            tasks.size() + \" tasks in the list.\\n\" + underscore;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // DEADLINE case"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.DEADLINE.toString().toLowerCase())) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if ( ( inputLine.length() \u003c 9 )){ // Input is only \"deadline\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    } else if ( (inputLine.lastIndexOf(\u0027/\u0027) \u003c 1) || (  4+inputLine.lastIndexOf(\u0027/\u0027) \u003e inputLine.length()   ) )  {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The time period of an event cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d inputLine.substring(9, inputLine.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    extraDescription \u003d inputLine.substring(4 + inputLine.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, extraDescription);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newDeadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            + newDeadline.toString() + \"\\n     Now you have \" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            tasks.size() + \" tasks in the list.\\n\" + underscore;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // EVENT case"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.EVENT.toString().toLowerCase())) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if ( ( inputLine.length() \u003c 6 )){ // Input is only \"event\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    } else if ( (inputLine.lastIndexOf(\u0027/\u0027) \u003c 1) || (  4+inputLine.lastIndexOf(\u0027/\u0027) \u003e inputLine.length()   ) )  {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The time period of an event cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d inputLine.substring(6, inputLine.lastIndexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    extraDescription \u003d inputLine.substring(4 + inputLine.lastIndexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Event newEvent \u003d new Event(description, extraDescription);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newEvent);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            + newEvent.toString() + \"\\n     Now you have \" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            tasks.size() + \" tasks in the list.\\n\" + underscore;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // DELETE case"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.DELETE.toString().toLowerCase())){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    taskNum \u003d Integer.parseInt(inputLine.substring(7)); // NTS: check for index outofbounds"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    taskNum--; // ArrayList index \u003d\u003d taskNum - 1"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if (taskNum \u003e\u003d tasks.size()){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        throw new DukeException(\"seedu.duke.task.Task no. \" + (taskNum+1) + \" does not exist\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Task taskToDelete \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.remove(taskNum);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"     Noted. I\u0027ve removed this task.\\n       \" +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            taskToDelete.toString() + \"\\n     Now you have \" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                            tasks.size() + \" tasks in the list.\\n\" + underscore;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.println(output);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    taskToDelete \u003d null;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    //BYE case"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (taskType.equals(possibleTasks.BYE.toString().toLowerCase())){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // Prints goodbye sequence"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    output \u003d underscore + \"\\n\" + \"     \" + \"Bye. Hope to see you again soon!\" + \"\\n\" + underscore + \"\\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    System.out.print(output);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // Saves the task arraylist to the txt file"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    storage.clearFileBeforeSaving();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    for ( Task task:tasks){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        storage.writeToFile(task.toSaveString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else { // An invalid task command is given"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                ui.showLoadingError(e);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                System.out.println(e.getCause());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            inputLine \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            output \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\hatzi\\\\Documents\\\\Sourcetree\\\\seedu.duke\\\\data\\\\tasks.txt\").run();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    enum possibleTasks{"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        DEADLINE"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 199,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public TaskList(Storage storage){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Storage { private String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Storage(String filepath){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void createFile(String filepath) throws IOException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // If the file does not exist, create a new text file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (f.exists() \u003d\u003d false){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                // Need to create a new empty text file as file doesn\u0027t exist"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                Files.write(Paths.get(filepath), data.getBytes());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void writeToFile(String text) throws IOException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // appends the string to the text file as specified in filepath"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void clearFileBeforeSaving() throws IOException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Overwrites text file and adds headers before saving tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.write(\"event type | isDone | description | extra description\" + System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Loads the tasks from the filepath into an ArrayList of Tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Initialises variables to handle the txt input file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cString\u003e inputsFromFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String description \u003d \"\"; String extraDescription \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // Creates a scanner object to read the txt file from filePath"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        Scanner scanner \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        while (scanner.hasNextLine()){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            inputsFromFile.add(scanner.nextLine());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        for (String input: inputsFromFile){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // possible input string: \"D | 0 | CS2103 Ip  | Wed 2359\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            String[] words \u003d input.split(\"\\\\|\") ;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            if (words[0].length() \u003c 3 ){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                if (words[0].contains(\"T\")) { // Will avoid header"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // Create a seedu.duke.task.Todo class"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d words[2].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Todo newTodo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newTodo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (words[0].contains(\"E\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // Create an seedu.duke.task.Event class"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d words[2].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    extraDescription \u003d words[3].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Event newEvent \u003d new Event(description, extraDescription, isDone);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newEvent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                } else if (words[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    // Create a seedu.duke.task.Deadline class"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    if (words[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    } else if (words[1].contains(\"0\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                        isDone \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    description \u003d words[2].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    extraDescription \u003d words[3].trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, extraDescription, isDone);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                    tasks.add(newDeadline);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 121
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected String by; // hour;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    // protected int day, month, year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline(String description, String by) { //sets idDone to the default value, false"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // by \u003d 2/12/2019 1800"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // deadline cs /by 21/12/2019 0800"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!by.contains(\"of\")) { // If string by contains the word \"of\", by string is already formatted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                                 // For use when reading from saved file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.by \u003d parseBy(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Deadline(String description, String by, Boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // by \u003d 2/12/2019 1800"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        // deadline cs /by 21/12/2019 0800"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!by.contains(\"of\")) { // If string by contains the word \"of\", by string is already formatted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            // For use when reading from saved file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.by \u003d parseBy(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"D\" + super.toSaveString() + \" | \" + this.by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String parseBy(String by){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d possibleTaskTypes.DEADLINE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] words \u003d by.split(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] years \u003d by.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int day \u003d Integer.parseInt(words[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int month \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String hour \u003d years[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int year \u003d Integer.parseInt(words[2].split(\" \")[0]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String dayString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if ((day \u003d\u003d 1) || (day \u003d\u003d 21) || (day \u003d\u003d 31)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"st\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((day \u003d\u003d 2) || (day \u003d\u003d 22)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"nd\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if ((day \u003d\u003d 3) || (day \u003d\u003d 23)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"rd\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            dayString \u003d \"th\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String[] possibleMonths \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"December\"};"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String monthString \u003d possibleMonths[month - 1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String hoursString \u003d hour;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String amOrpm \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(0, 2)) \u003c 12) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            amOrpm \u003d \"am\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else if (Integer.parseInt(hoursString.substring(0, 2)) \u003c 24) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            amOrpm \u003d \"pm\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String minuteString \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(2)) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            minuteString \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            minuteString \u003d \".\" + hoursString.substring(2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int hourString \u003d -1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (Integer.parseInt(hoursString.substring(0, 2)) \u003e 12) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            hourString \u003d (Integer.parseInt(hoursString.substring(0, 2)) - 12);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            hourString \u003d Integer.parseInt(hoursString.substring(0, 2));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ( day + dayString + \" of \" + monthString + \" \" + year + \", \" + hourString + minuteString + amOrpm );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 98
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event (String description, String at){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d possibleTaskTypes.EVENT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Event(String description, String at, Boolean isDone){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d possibleTaskTypes.EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ( \"E\" + super.toSaveString() + \" | \" + this.at );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    protected possibleTaskTypes taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.taskType \u003d possibleTaskTypes.DEFAULT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getTask(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Task(String description, Boolean isDone){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        this.taskType \u003d possibleTaskTypes.DEFAULT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        if (!this.isDone){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ( \"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        int booleanNum \u003d (this.isDone ? 1 : 0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return ( \" | \" + booleanNum + \" | \" + this.description );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isDefault(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(possibleTaskTypes.DEFAULT) ;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isTodo(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(possibleTaskTypes.TODO) ;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isEvent(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(possibleTaskTypes.EVENT) ;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Boolean isDeadline(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return this.taskType.equals(possibleTaskTypes.DEADLINE) ;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    enum possibleTaskTypes {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        DEFAULT, DEADLINE, EVENT, TODO"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        taskType \u003d possibleTaskTypes.TODO;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Todo(String description, Boolean isDone){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        return (\"T\" + super.toSaveString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void showLoadingError(DukeException e){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String underscore \u003d \"    ____________________________________________________________\" + \"\\n\" ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        String intro \u003d underscore +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"      Hello! I\u0027m seedu.duke.Duke \" + \"\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                \"      What can I do for you?\" + \"\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "                underscore ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        System.out.println(logo + intro);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 29
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"[E][✘] description (at: location)\", new Event(\"description\", \"location\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void toSaveString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"E | 0 | description | location\", new Event(\"description\", \"location\").toSaveString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"[T][✘] description\", new Todo(\"description\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    void toSaveString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "        assertEquals(\"T | 0 | description\", new Todo(\"description\").toSaveString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AhmadHatziq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AhmadHatziq": 16
    }
  }
]
