[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 10,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * The Duke Program is a bot that help users to manage their schedule."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * @author : Xu Tunan"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * @Version: v 1.0.0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * @Since: 29/08/2019"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Object DialogPanel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this(\"/data/duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     *This constructor is used to check if the text file exists and followed the standard."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * If yes, it will read the data in the file and transform them to a taskList,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * while if not, it will create a new taskList to store tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param filePath relative file path to the file that saved the data in the taskList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        ui \u003d new Ui(storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            taskList \u003d new TaskList(storage.textRead());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IllegalDukeArgumentException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            ui.showError(\"Loading Error!\\nPlease check the file.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     *This method aimed to make use of the readCommand() method in Ui class, and print out a bottom line at last."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    //public void run() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "      //  ui.readCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //ui.showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * This method makes use of showWelcome() method in Ui class to print out the greetings."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "   // private void greeting() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     //   ui.showWelcome();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * This is the main method to create a new Duke object and run it by steps,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * which terminate the program when command \"bye\" appears."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "  /*  public static void main(String[] args) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Duke duke \u003d new Duke(\"Users/xutunan/duke/duke.txt\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        duke.greeting();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        duke.ui.showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        while (!Ui.getIsExit()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        stage.setMinWidth(500.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setPrefSize(485, 535);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                DialogBox.getDukeDialog(new Label(ui.showWelcome()), new ImageView(duke))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        );"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String response \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Label dukeText \u003d new Label(response);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        if (response.equals(\"exit\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"exit\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return ui.readCommand(input);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 211,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 10
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * The Parser class is one of the class in command package which used to deal with making sense of the user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String[] splitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * Constructor to write in command line"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param splitCommand"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Parser(String[] splitCommand) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * this method is to deal with different commands"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage the object to interact with"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeFormatException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeArgumentException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String parse(Storage storage) throws IllegalDukeFormatException, IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        switch (Command.valueOf(splitCommand[0])) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case bye:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandBye();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandDone(storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case todo:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandTodo(storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case deadline:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandDeadline(storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case event:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandEvent(storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case delete:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandDelete(storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        case find:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return commandFind();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"list\" command, print the list out"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandList() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String tasks \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return tasks + TaskList.listString() + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"bye\" command, print ending and set isExit to true"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandBye() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String Exit \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Ui.setIsExit(true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return Exit;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"done\" command, set the task done, and rewrite them to text file with the status updated."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage the object to interact with"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandDone(Storage storage) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().get(index - 1).setDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String done \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            boolean isAppend \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            if (TaskList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                for (Task t : TaskList.getList()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    storage.textWrite(t.toString(), isAppend);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    isAppend \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                storage.textWrite(\"\", false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return done + \"  \" + TaskList.getList().get(index - 1) + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Selected index not exists\" + \"\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"todo\" command, add the todo task into the list and write it in text file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage the object to interact with"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeArgumentException"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandTodo(Storage storage) throws IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String descriptionT \u003d splitCommand[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task todo \u003d new Todo(descriptionT);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(todo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(todo.toString(), true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + todo + \"\\nNow you have \" + TaskList.getList().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeArgumentException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"deadline\" command, add the deadline task into the list and write it in text file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage the object to interact with"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeFormatException"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandDeadline(Storage storage) throws IllegalDukeFormatException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] fullCommand \u003d splitCommand[1].split(\" /by \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String deadlineTime \u003d fullCommand[1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task deadline \u003d new Deadline(fullCommand[0], deadlineTime);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(deadline);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(deadline.toString(), true);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + deadline + \"\\nNow you have \" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    TaskList.getList().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeFormatException(\"deadline\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"OOPS!!! Wrong time format!\" + \"\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"event\" command, add the event task into the list and write it in text file"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage  the object to interact with"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeFormatException"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandEvent(Storage storage) throws IllegalDukeFormatException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] fullCommand \u003d splitCommand[1].split(\" /at \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String eventTime \u003d fullCommand[1];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task event \u003d new Event(fullCommand[0], eventTime);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            TaskList.getList().add(event);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            storage.textWrite(event.toString(), true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + event + \"\\nNow you have \" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    TaskList.getList().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"OOPS!!! Wrong time format!\" + \"\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeFormatException(\"event\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method for \"delete\" command, delete the task by remove it from the taskList and rewrite list to file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage the object to interact with"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandDelete(Storage storage) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int indexD \u003d Integer.parseInt(splitCommand[1]) - 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task removedTask \u003d TaskList.getList().remove(indexD);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            boolean isAppend \u003d false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            if (TaskList.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                for (Task t : TaskList.getList()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    storage.textWrite(t.toString(), isAppend);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    isAppend \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                storage.textWrite(\"\", false);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Noted. I\u0027ve removed this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    + removedTask + \"\\nNow you have \" + TaskList.getList().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"Selected index not exists\" + \"\\n\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private String commandFind() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String target \u003d splitCommand[1];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String reply \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        LinkedList\u003cTask\u003e targetList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        for (Task task : TaskList.getList()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            if (task.toString().contains(target)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                targetList.add(task);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            for (int i \u003d 0; i \u003c targetList.size(); i++) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                list +\u003d \"  \" + index + \".\" + targetList.get(i).toString() +\"\\n\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return \"OOPS! No such key word detected.\" + \"\\n\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * the enum class with all types of command"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "enum Command {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    list,bye,done,todo,deadline,event,delete,find;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 225
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " *The Storage class is one of the class in command package which"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * used to deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    //private String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private LinkedList\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method to read the information in file and convert them to Task object,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * then add to the LinkedList abd finally return the list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return LinkedList which contains the data in the text file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws IllegalDukeArgumentException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public LinkedList\u003cTask\u003e textRead() throws IllegalDukeArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            FileReader reader \u003d new FileReader(\"/Users/xutunan/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String[] fullCommand \u003d line.split(\" -- \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandType \u003d fullCommand[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandStatus \u003d fullCommand[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                String commandContent \u003d fullCommand[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                switch(commandType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"T\" :"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task todo \u003d new Todo(commandContent);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        todo.setDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"D\" :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task deadline \u003d new Deadline(commandContent, fullCommand[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        deadline.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                case \"E\" :"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    Task event \u003d new Event(commandContent, fullCommand[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    if (commandStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                        event.setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IOException | ParseException |ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            throw new IllegalDukeArgumentException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * This method write  tasks into the text file as strings"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param task the task that in String format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param isAppend check where need append"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void textWrite(String task, boolean isAppend) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"/Users/xutunan/duke/data/duke.txt\", isAppend);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.write(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 97
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.excaptions.IllegalDukeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " *The Ui class is one of the class in command package which used to deal the interaction with users"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * The constructor to write in Storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Ui(Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * This method print out the welcome words"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return greet + this.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * this method is to read the command line by line and pass them to Parser"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String readCommand(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            String[] splitCommand \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                Parser parser \u003d new Parser(splitCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                return parser.parse(storage) + this.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalDukeFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            } catch (IllegalDukeArgumentException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * a method to print splitting lines"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"_______________________________________________________________\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * A method to print error message"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method to modify the isExit boolean to check if is time to exit"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param isExit a boolean to check if is time to exit"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void setIsExit(boolean isExit) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        Ui.isExit \u003d isExit;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method to get exit status"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return boolean this return isExit"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static boolean getIsExit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 83
    }
  },
  {
    "path": "src/main/java/duke/excaptions/IllegalDukeArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.excaptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * the exception thrown when the todo command has no content"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class IllegalDukeArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public IllegalDukeArgumentException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 10
    }
  },
  {
    "path": "src/main/java/duke/excaptions/IllegalDukeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.excaptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * exception thrown when deadline or event command gets wrong format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class IllegalDukeFormatException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public IllegalDukeFormatException(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(\"☹ OOPS!!! The format of a \" + command + \" command is wrong.\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 10
    }
  },
  {
    "path": "src/main/java/duke/list/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * the class TaskList contains the task list as well as the  operations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class TaskList extends LinkedList\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private static LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * constructor to write in an existing list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param taskList the list contains the tasks in text file originally"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        TaskList.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * this method is to get the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return LinkedList which stored in this class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static LinkedList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the method to print out the list by tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void print() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static String listString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "            listString +\u003d index + \".\" + t + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * one of the tasks used to record deadlines"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * A constructor to write in date and content of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param description the content of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param by the due date, with a fixed format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the Overriding method"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return String that in deadline format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"D -- \" + super.toString() + \" -- \" + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(by);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * one of the tasks used to record events"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * A constructor to write in date and content of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param description the content of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param at the event time, with a fixed format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the Overriding method"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return String that in event format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"E -- \" + super.toString() + \" -- \" + new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").format(at);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * overall task class with task properties"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * A constructor to write in content of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param description content"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the method to determine if the task is done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return String that represent different situations"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * method to set the task as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the Overriding method"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return String that in task format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return  this.getStatusIcon() + \" -- \" + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " * one of the tasks used to record things need to do"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * A constructor to write in content of a todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @param description content of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * the Overriding method"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     * @return String that in todo format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        return \"T -- \" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 22
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void deadlineTest() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"D -- \\u2718 -- eat -- 01/09/2019 12:00\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Deadline(\"eat\", \"01/09/2019 12:00\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public void dukeTest() throws ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        DeadlineTest.deadlineTest();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        EventTest.eventTest();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        TodoTest.todoTest();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 14
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void eventTest() throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"E -- \\u2718 -- eat -- 01/09/2019 12:00\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Event(\"eat\", \"01/09/2019 12:00\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    public static void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "        assertEquals(\"T -- \\u2718 -- eat\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "                new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xuerneas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xuerneas": 13
    }
  }
]
