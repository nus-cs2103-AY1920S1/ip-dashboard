[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "# Radomir by [Roby Tanama](https://github.com/robytanama)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Welcome to Radomir!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "![User Interface](docs/Ui.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Prerequisites"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "1) Have Java SE Development Kit 11 or higher installed on your computer. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Additional Notes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "1) A folder called Data will be created in the directory you places your app in."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "2) Deleting this folder will delete the tasks you have stored inside."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "For more information on the app\u0027s usage, take a look at the [user guide](https://robytanama.github.io/duke/)"
      }
    ],
    "authorContributionMap": {
      "robytanama": 10,
      "-": 6
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    archiveBaseName \u003d \"Radomir\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    archiveVersion \u003d \"1.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "run {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 34,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "# Radomir User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Welcome to Radomir!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "![User Interface](Ui.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "To help you understand this application, there a few things "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "you would need to set up before proceeding with usage. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Contents Page "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "* [Prerequisites](#prerequisites)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 1: Adding Tasks](#feature-1-adding-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 2: Deleting Tasks](#feature-2-deleting-tasks)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 3: Listing Tasks](#feature-3-listing-tasks)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 4: Modifying Tasks](#feature-4-modifying-tasks)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 5: Finding Tasks](#feature-5-finding-tasks)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 6: Tutorial Section](#feature-6-tutorial-section)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [Feature 7: Listing Available Commands](#feature-7-listing-available-commands)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "* [Commands](#usage)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [tutorial](#tutorial---activates-tutorial-mode)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [todo](#todo---adds-a-new-todo-task-to-the-list)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [event](#event---adds-a-new-event-task-to-the-list)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [deadline](#deadline---adds-a-new-deadline-task-to-the-list)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [delete](#delete---deletes-a-task-from-the-list)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [massdelete](#massdelete---deletes-multiple-tasks-at-once)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [clearall](#clearall---deletes-the-whole-list-of-tasks)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [done](#done---mark-a-task-as-done)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [list](#list---list-down-the-added-tasks)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [find](#find---list-down-tasks-that-contains-the-specified-keyword)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "  * [bye](#bye---quits-the-app)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "## Prerequisites"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "1) Have Java SE Development Kit 11 or higher installed on your computer. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 1: Adding Tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There are 3 times of tasks that you can create :"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "1) Todo tasks with specified description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "2) Deadline tasks with specified description and deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "3) Event tasks with specified description and timing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 2: Deleting Tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There are 3 ways to delete tasks from the list :"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "1) Delete a single task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "2) Mass delete multiple tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "3) Delete all tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 3: Listing Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There is a feature to list all added tasks. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 4: Modifying Tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There is a way to modify a task by marking it as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 5: Finding Tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There is a way to find tasks according to specified keyword."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 6: Tutorial Section"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There is a way to activate tutorial mode for new users."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### Feature 7: Listing Available Commands"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "There is a way to list out all the commands."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `tutorial` - Activates tutorial mode "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This commands enables the tutorial mode which provides guide and examples for new users. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Warning : This will delete your current list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : `tutorial`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027The guide on how to use the app and couple of available features\u0027"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `todo` - Adds a new todo task to the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to add a new todo task by providing the description of the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027todo Buy new pair of Jeans\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027A new todo tasks with decription \"Buy new pair of jeans\" has been added to the list\u0027"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `event` - Adds a new event task to the list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to add a new event task by providing the description and timing of the task. "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "The keyword for the timing is \u0027/at\u0027 and the format for the timing is \u0027DD/MM/YYYY HHMM\u0027"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027event Jane\u0027s birthday party /at 01/06/2019 1800\u0027"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027A new event task with decription \"Jane\u0027s birthday party\" has been added to the list at 01/06/2019 6pm\u0027"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `deadline` - Adds a new deadline task to the list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to add a new deadline task by providing the description and timing fo the task. "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "The keyword for the timing is \u0027/by\u0027 and the format for the timing is \u0027DD/MM/YYYY HHMM\u0027"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027deadline Math homework /by 10/10/2019 2359\u0027"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027A new deadline task with description \"Math homework\" has been added to the list by 10/10/2019 11.59pm\u0027"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### \u0027delete\u0027 - Deletes a task from the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to delete a task from the list according to the index specified."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027delete 3\u0027"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027Task number 3 has been deleted from the list\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### \u0027massdelete\u0027 - Deletes multiple tasks at once"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to delete multiples tasks from the list of added tasks. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "The input index of tasks to be deleted has to be separated by a space."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027massdelete 1 3 6\u0027"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027Task number 1, 3, 6 have been deleted from the list\u0027"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `clearall\u0027 - Deletes the whole list of tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command enables you to clear the whole list of tasks."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example : "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027clearall\u0027"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027Deletes the whole list\u0027"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This app enables you to mark a task that you have completed according to the specified index."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027done 2\u0027"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027Task number 2 has been marked as done\u0027"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `list` - List down the added tasks"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command will show you all the added tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : `list`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027Shows the list of tasks\u0027"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `find` - List down tasks that contains the specified keyword"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command will show you a list of tasks that contains the specified keyword."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027find Jeans\u0027"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027List of tasks that contains the word Jeans\u0027"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "robytanama"
        },
        "content": "### `bye` - Quits the app"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "robytanama"
        },
        "content": "This command will set the app into Quit mode. Press ENTER key to close the app."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "robytanama"
        },
        "content": "#### Example :"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Input : \u0027bye\u0027"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "robytanama"
        },
        "content": "Outcome : \u0027The program will enter quit mode, press ENTER to quit the app\u0027"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "robytanama"
        },
        "content": "[Back to Top](#user-guide)"
      }
    ],
    "authorContributionMap": {
      "robytanama": 170,
      "-": 12
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The constructor for the dialog box."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param text The text to be displayed in the dialog box."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param img The profile image of the dialog box."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"View/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to create dialog box for the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param text The text displayed for the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param img The image to represent the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return A new dialog box for the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to create the dialog box for the program."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param text The text displayed for the bot."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param img The image to represent to bot."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return A new dialog box for the bot."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 76
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * The main class of the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * This specifies the filepath for use."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static final String filepath \u003d \"Data/Tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To indicate whether the program is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean exitProgram \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The storage containing the file to be modified in the hard drive."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The ui to print out the messages."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The scrolling pane of the application."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The dialog window of the application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The box for the user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The send button for user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The scene of the application."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that creates the main Duke class."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used for when there are any errors."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Duke() throws Exception {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        InputStream in \u003d this.getClass().getResourceAsStream(filepath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.loadTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (FileNotFoundException error) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.ui \u003d new UI(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To exit the program."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void terminate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.exitProgram \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * This method produces a response from Radomir to be displayed."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param input The user\u0027s input."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return Radomir\u0027s response in string form."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Handles exceptions that occurs when the method runs."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getResponse(String input) throws Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (exitProgram) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return \"You said you are leaving so please leave \u003e:(\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Command inputCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        inputCommand.execute(taskList,storage,ui);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return inputCommand.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 102,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.stage.StageStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Main() throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"View/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            stage.initStyle(StageStyle.UNDECORATED);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 35
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/User.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"images/Bot.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        showWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private void handleUserInput() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (input.isEmpty() \u0026\u0026 duke.exitProgram \u003d\u003d true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            response \u003d \"Command cannot be empty! Please say something\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            duke.terminate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void quitTheApp(ActionEvent actionEvent) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out the message when the app is started."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String input \u003d \"Hi! Welcome to Radomir!\\n\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        input +\u003d \"Type \u0027help\u0027 to get the list of commands available.\\n\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"For first time users, type \u0027tutorial\u0027 to know more about the app.\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \" (Warning, this will delete your current list!)\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                DialogBox.getDukeDialog(input, dukeImage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 75
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.time.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.time.Time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents command to add new deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String[] inputMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"noError\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in main message of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The main message of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public AddDeadlineCommand(String message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        inputMessage \u003d input.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String mainInput \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int marker \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d 0; i \u003c inputMessage.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i + 1 \u003e\u003d inputMessage.length) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                errorMessage \u003d \"Please provide more information!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (inputMessage[i + 1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                marker \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String tempInfo \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d marker + 1; i \u003c inputMessage.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i \u003d\u003d inputMessage.length - 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d \" \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] dateAndTime \u003d tempInfo.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (date.length !\u003d 3 || dateAndTime.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Invalid date and time format!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (date[0].equals(\"\") || date[1].equals(\"\") || date[2].equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Invalid date and time format!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Date inputDate \u003d new Date(day, month, year);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Time inputTime \u003d new Time(Integer.parseInt(dateAndTime[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputDate.isValid()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Sorry! Invalid time format\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputTime.isValid()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Sorry! Invalid time format\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String extraInfo \u003d inputDate + \", \" + inputTime;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (extraInfo.equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Please provide date and time for the deadline\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputMessage[marker].equals(\"/by\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Wrong syntax, should be using /by for deadline\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        deadline \u003d new Deadline(input, extraInfo);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.addDeadline(deadline);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"noError\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"Done! I have added this deadline to the list\\n\\n\" + deadline.toString() + \"\\n\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"You now have \" + listOfTasks.size() + \" tasks in the list!\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 106
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.time.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.time.Time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represent the command to add a new event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String[] inputMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"noError\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in main message of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The main message of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public AddEventCommand(String message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        inputMessage \u003d input.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String mainInput \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int marker \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d 0; i \u003c inputMessage.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i + 1 \u003e\u003d inputMessage.length) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                errorMessage \u003d \"Please provide more information!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (inputMessage[i + 1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                marker \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                mainInput +\u003d \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String tempInfo \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d marker + 1; i \u003c inputMessage.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i \u003d\u003d inputMessage.length - 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d inputMessage[i];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                tempInfo +\u003d \" \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] dateAndTime \u003d tempInfo.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (date.length !\u003d 3 || dateAndTime.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Invalid date and time format!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (date[0].equals(\"\") || date[1].equals(\"\") || date[2].equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Invalid date and time format!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Date inputDate \u003d new Date(day, month, year);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Time inputTime \u003d new Time(Integer.parseInt(dateAndTime[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputDate.isValid()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Sorry! Invalid time format\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputTime.isValid()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Sorry! Invalid time format\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String extraInfo \u003d inputDate + \", \" + inputTime;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (extraInfo.equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Please provide date and time for the event\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!inputMessage[marker].equals(\"/at\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Wrong syntax, should be using /at for event\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        event \u003d new Event(input, extraInfo);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.addEvent(event);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"noError\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"Done! I have added this event to the list\\n\\n\" + event.toString() + \"\\n\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"You now have \" + listOfTasks.size() + \" tasks in the list!\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 106
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represent command to add a new todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Todo newTodo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String[] inputMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the main message of the todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The main message of the todo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public AddTodoCommand(String message) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d listOfTasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            assert !getMessage().isEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Description of a todo cannot be empty!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (getMessage().isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Description of a todo cannot be empty!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        newTodo \u003d new Todo(getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.addTodo(newTodo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"Done! I have added this task to the list:\\n\\n\" + newTodo.toString() + \"\\n\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"You now have \" + taskList.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represent the command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in empty string to create the object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message Usually is an empty string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ByeCommand(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"See you again later! Press ENTER to leave the program\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ClearAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class ClearAllCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ClearAllCommand(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to execute the command and modify the list of tasks accordingly."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param listOfTasks List of tasks to be modified according to the input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param storage     Used to modify the files in the hard drive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param ui          Prints out all the messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception For when there are any errors when executing the method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d listOfTasks.size() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            listOfTasks.removeTask(listOfTasks.get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"Congratulations! The list is now empty!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Abstract class to represent all the commands available in this program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * String that contains the main message of the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the main message of the command. Can be empty."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The main message of the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Command(String message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.input \u003d message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to obtain the main message of the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return String of the main message of the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to execute the command and modify the list of tasks accordingly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param listOfTasks List of tasks to be modified according to the input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param storage Used to modify the files in the hard drive."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param ui Prints out all the messages."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception For when there are any errors when executing the method."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public abstract void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents the command to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Task toBeDeleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Index of the file that is to be deleted from the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private int indexToDelete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes the index of the task to be deleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message String of the index of the task to be deleted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public DeleteCommand(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.indexToDelete \u003d Integer.parseInt(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Wrong format! Did you mean to use the mass delete function instead?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d listOfTasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (indexToDelete \u003e taskList.size() || indexToDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                errorMessage \u003d \"Such task does not exist!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        toBeDeleted \u003d listOfTasks.get(indexToDelete - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.removeTask(toBeDeleted);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return \"Done! I have deleted this task :\\n\\n\" + toBeDeleted.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 60
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represent the command of finishing a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Index of the task to be completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes the index of the task to be completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message String of the index of the task to be completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public DoneCommand(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.index \u003d Integer.parseInt(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Sorry that is not an acceptable number format!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d listOfTasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"Such task does not exist!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.get(index - 1).completeTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.task \u003d listOfTasks.get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"Well done! You have completed this task:\\n\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + task.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents that command to print an error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The UI needed to print the error message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private UI errorPrinter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the error message as String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ErrorCommand(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.errorMessage \u003d getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents command to find tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The tasks to be printed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList toBePrinted;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The keyword to find in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the keyword to find."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The keyword."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public FindCommand(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        toBePrinted \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d listOfTasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        ArrayList\u003cTask\u003e tempList \u003d listOfTasks.getTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Task task : tempList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (task.toString().contains(getMessage())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                toBePrinted.addTask(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return \"The list is empty!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else if (toBePrinted.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return \"The list contain no such keyword!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return toBePrinted.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 57
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * This is the string to be printed at the start of the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String help;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in empty String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param input Empty string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public HelpCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.help \u003d \"Available commands: \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To add a new Todo Task:\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"todo \u003cdescription\u003e\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To add a new Event Task:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"event \u003cdescription\u003e /at \u003cday/month/year time\u003e\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To add a new Deadline Task:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"deadline \u003cdescription\u003e /by \u003cday/month/year time\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To delete a task:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"delete \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To mass delete a bunch of tasks:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"massdelete \u003cindexes separated by space\u003e\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To clear the list:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"clearall\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To mark a task as done:\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"done \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To obtain the list of tasks:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To obtain a list of task based on keyword:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"To exit the program:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"bye\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"Glad to help!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.help;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 63
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents the command to print out the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in empty String to create the object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message Usually is an empty string as it is not used."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ListCommand(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d listOfTasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return \"Sorry but the list is empty!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"Here are your list of tasks: \\n\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + taskList.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 39
    }
  },
  {
    "path": "src/main/java/duke/command/MassDeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class MassDeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ArrayList\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ArrayList\u003cTask\u003e deletedTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor which takes in the keyword to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The keyword."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public MassDeleteCommand(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        deletedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        indexes \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] index \u003d message.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (String string : index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            indexes.add(Integer.parseInt(string));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Method to sort the indexes."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void sortIndex() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Collections.reverse(indexes);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Method to remove the duplicates in the indexes."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return ArrayList of integers without duplicates."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ArrayList\u003cInteger\u003e removeDuplicate(ArrayList\u003cInteger\u003e array) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        ArrayList\u003cInteger\u003e output \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Integer no : array) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (!output.contains(no)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output.add(no);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to execute the command and modify the list of tasks accordingly."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param listOfTasks List of tasks to be modified according to the input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param storage     Used to modify the files in the hard drive."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param ui          Prints out all the messages."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception For when there are any errors when executing the method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (listOfTasks.isEmpty()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            errorMessage \u003d \"The list is empty, there is nothing to delete!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        sortIndex();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        indexes \u003d removeDuplicate(indexes);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Integer no : indexes) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (no \u003e listOfTasks.size() || no \u003c\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                errorMessage \u003d \"Sorry but such task does not exist!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Integer no : indexes) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            deletedTasks.add(listOfTasks.get(no - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            listOfTasks.getTasks().remove(no - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        storage.writeToFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (!errorMessage.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output +\u003d \"Success! I have deleted the following tasks:\\n\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            for (int i \u003d deletedTasks.size() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    output +\u003d deletedTasks.get(i).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    output +\u003d deletedTasks.get(i).toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 99
    }
  },
  {
    "path": "src/main/java/duke/command/TutorialCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class TutorialCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To check if this is the first time the user has used the tutorial command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static boolean firstTime \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To check the stage of the tutorial for the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static int increment \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The constructor which takes in empty string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message Usually an empty string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public TutorialCommand(String message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (increment \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Hi! Welcome to the tutorial!\\n\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"I will guide you through the use of the program and its features!\\n\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"For now, try to create a todo list!\\n\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can do so by typing:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"todo \u003ctask that you want to add\u003e\\n\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Once you\u0027re done, type tutorial to continue.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (increment) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 1 :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Well done! Congratulations on creating your first todo task!\\n\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Now, you can try creating an event or deadline!\\n\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can do so by typing the following:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"event \u003cname of task\u003e /at DD/MM/YYYY HHMM\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"For example : event pizza party /at 01/06/2019 1800\\n\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Type the following for deadline:\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"deadline \u003cname of task\u003e /by DD/MM/YYYY HHMM\\n\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Once you\u0027re done, type tutorial to continue.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 2 :"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Well done! That is how you create event or deadline!\\n\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can show your list of tasks by typing the following:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"list\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Once you\u0027re done, type tutorial to continue.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 3 :"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Those are your list of tasks that you have, with the appropriate index.\\n\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can mark task as done by typing the following:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"done \u003cindex\u003e\\n\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can also delete a task by typing the following:\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"delete \u003cindex\u003e\\n\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Once you\u0027re done, type tutorial to continue.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 4 :"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"You now know how to update and change the list accordingly, well done!\\n\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Did you know that you can delete multiple tasks at once by typing:\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"massdelete \u003cindexes split by a space\u003e\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"For example : massdelete 1 3 5 6\\n\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Go ahead and try it out!\\n\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Once you\u0027re done, type tutorial to continue.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 5 :"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Well done! This feature is helpful when you want to delete many tasks at once.\\n\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can also delete the whole list by typing:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"clearall\\n\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Type tutorial continue.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 6 :"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Amazing! This will be helpful when you want to start a new list.\\n\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"There is a command that lets you return a list containing only tasks that \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"contains specific keyword!\\n\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can do so by typing the following:\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"find \u003ckeyword\u003e\\n\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Try it out! Type tutorial to proceed to the next step.\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 7 :"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"Well done! That about concludes the tutorial.\\n\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"You can type \u0027help\u0027 to obtain the list of commands.\\n\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \"Have fun using the app!\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            increment++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            output \u003d \"You have already completed the tutorial!\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to execute the command and modify the list of tasks accordingly."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param listOfTasks List of tasks to be modified according to the input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param storage     Used to modify the files in the hard drive."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param ui          Prints out all the messages."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception For when there are any errors when executing the method."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void execute(TaskList listOfTasks, Storage storage, UI ui) throws Exception {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (firstTime) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            for (int i \u003d listOfTasks.size() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                listOfTasks.removeTask(listOfTasks.get(i));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            storage.updateTaskList(listOfTasks.getTasks());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            storage.writeToFile();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            firstTime \u003d false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 125
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that contains exceptions specific to this program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The error message to be printed out."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param message The error message to be printed out."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 25
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.ClearAllCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.ErrorCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.MassDeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.command.TutorialCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that takes in a String and parse it to return a valid command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to take in a string input and returns a command if the input is valid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param input Input made by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The command corresponding to the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used to handle any exception that occurs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public static Command parse(String input) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String constructedString \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d 1; i \u003c inputArray.length; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i \u003d\u003d inputArray.length - 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                constructedString +\u003d inputArray[i];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                constructedString +\u003d inputArray[i];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                constructedString +\u003d \" \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String command \u003d inputArray[0].toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new AddTodoCommand(constructedString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new AddEventCommand(constructedString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new AddDeadlineCommand(constructedString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new ByeCommand(constructedString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new ListCommand(constructedString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new DoneCommand(constructedString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new DeleteCommand(constructedString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"find\" :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new FindCommand(constructedString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"help\" :"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new HelpCommand(constructedString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"massdelete\" :"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new MassDeleteCommand(constructedString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"clearall\" :"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new ClearAllCommand(constructedString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"tutorial\" :"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new TutorialCommand(constructedString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case \"error\" :"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new ErrorCommand(\"Unable to read the task list! Did you do something to it?\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    + \" Try to fix it by deleting the tasks.txt file!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            return new ErrorCommand(\"OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 74
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents the files in the hard drive to be modified or accessed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Reader needed to read the file in hard drive."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to access the file in the hard drive with given filepath."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private FileReader fr;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Main list of tasks of the program to be written into or accessed from hard drive."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ArrayList\u003cTask\u003e inputList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Filepath of the file in the hard drive."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the filepath of the data."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param path The filepath of the data as String."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used to handle exception that occurs."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Storage(String path) throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.filepath \u003d path;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.inputList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (FileNotFoundException error) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            this.fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to get the list of tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The main list of tasks as ArrayList."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.inputList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to update the main task list every time there is a change."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param updatedList The new list to replace the old one."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void updateTaskList(ArrayList\u003cTask\u003e updatedList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.inputList \u003d updatedList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to load the list of tasks from hard drive into the program to be modified."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used to handle exception that occurs when the method is running."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void loadTasks() throws Exception {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String next \u003d br.readLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        while (next !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String[] input \u003d next.split(\" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                String type \u003d \"error\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String status \u003d input[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String type \u003d input[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            for (int i \u003d 2; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                if (i \u003d\u003d input.length - 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d input[i];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d input[i];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                    description +\u003d \" \";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                inputList.add(new Todo(description));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                extraInfo \u003d br.readLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                inputList.add(new Event(description, extraInfo));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                extraInfo \u003d br.readLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                inputList.add(new Deadline(description, extraInfo));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (status.equals(\"done\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                inputList.get(inputList.size() - 1).completeTask();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            next \u003d br.readLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to update the hard drive with the most current list of tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used to handle any exception that occurs."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void writeToFile() throws Exception {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (Task task : inputList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            String status \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (task.getStatus()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                status \u003d \"done\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                status \u003d \"pending\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (task.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"todo \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (task.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"event \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(task.getExtraInfo() + \"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else if (task.getType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output \u003d \"deadline \" + status + \" \" + task.getDescription();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                fw.write(task.getExtraInfo() + \"\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     Invalid file type!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 149
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the description and the date and time of the deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param description The main message of the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param extraInfo The date and time of the deadline in exact format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Deadline(String description, String extraInfo) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d extraInfo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[ D ]\" + super.toString() + \" (by: \" + this.extraInfo + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in description and date and time of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param description The main message of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param extraInfo The date and time of the event in exact format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Event(String description, String extraInfo) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d extraInfo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[ E ]\" + super.toString() + \" (at: \" + this.extraInfo + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * The class that is used to represent various tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The type of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String type \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The main message of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Indicates the completion status of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Extra information of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String extraInfo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the main message of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param description The main description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to return the type of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The type of task in String form."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to obtain the task completion status."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return True if the task is completed, false otherwise."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to obtain the main message of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to obtain any extra information of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The extra information of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.extraInfo;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to return the status icon based on completion status."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return Icon which relies on the completion status."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return (isDone ? \"V\" : \"X\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to mark a task as complete."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[ \" + this.getStatusIcon() + \" ] \" + this.description;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 89
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the main message of todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param description The description of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return \"[ T ]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 21
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The array list of list of the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the storage object containing the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param storage The storage containing the list in the hard drive."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws Exception Used to handle exception that occurs when constructing the class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public TaskList(Storage storage) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks \u003d storage.getList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in nothing for when there is no file yet in the hard drive."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to check if the list of tasks is empty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return True if the list is empty, false otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return listOfTasks.isEmpty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to indicate the size of the list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return listOfTasks.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to return the list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return ArrayList of the list of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to obtain the task using a given index."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param index The index of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The task corresponding to the index given."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return listOfTasks.get(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to delete a task from the list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The task that the user wants to delete."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.remove(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to add a general task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The task that is to be added."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to add a new Todo task into the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task A new todo task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void addTodo(Todo task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to add a new Event task into the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task A new Event task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void addEvent(Event task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to add a new Deadline task into the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task A new Deadline task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void addDeadline(Deadline task) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (i !\u003d listOfTasks.size()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output +\u003d i + \". \" + listOfTasks.get(i - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                output +\u003d i + \". \" + listOfTasks.get(i - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 123
    }
  },
  {
    "path": "src/main/java/duke/time/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.time;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents a date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The day of the year."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The month of the year."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The year."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The output of the day in String."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String dayOutput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The output of the month in String."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String monthOutput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The output of the year in String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private String yearOutput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To check if the format of the date is valid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private boolean validFormat \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the day month and year to format it properly."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param day The day."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param month The month."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param year The year."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws DukeException Error for when the input is not correct."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Date(int day, int month, int year) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String dayString \u003d String.valueOf(day);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String monthString \u003d String.valueOf(month);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String yearString \u003d String.valueOf(year);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (dayString.length() \u003e 2 || monthString.length() \u003e 2 || yearString.length() !\u003d 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            validFormat \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            dayOutput \u003d \"1st\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            dayOutput \u003d \"2nd\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            dayOutput \u003d \"3rd\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            dayOutput \u003d dayString + \"th\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"January\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"February\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"March\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"April\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"May\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"June\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"July\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"August\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"September\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"October\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"November\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            monthOutput \u003d \"December\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            throw new DukeException(\"     Invalid month entered!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        yearOutput \u003d yearString;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (day \u003c 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            throw new DukeException(\"     Negative date does not exist!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (monthOutput.equals(\"February\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 28) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     February only has 28 days!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else if (monthOutput.equals(\"April\") || monthOutput.equals(\"June\") || monthOutput.equals(\"September\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                || monthOutput.equals(\"November\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 30) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     That month only has 30 days!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            if (day \u003e 31) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                throw new DukeException(\"     That month only has 31 days!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to check whether the format is valid or not."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return True if it is valid, false otherwise."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return validFormat;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return this.dayOutput + \" of \" + monthOutput + \" \" + yearOutput;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 147
    }
  },
  {
    "path": "src/main/java/duke/time/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.time;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents the time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The time in number form."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The time formatted correctly as output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected String outputTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To indicate whether the format of the time is valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    protected boolean validFormat \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in the time to format it correctly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param time The time in number form."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws DukeException Error when the input is wrong."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public Time(int time) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String timeString \u003d String.valueOf(time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (timeString.length() \u003e 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            validFormat \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String format \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (time \u003e\u003d 1200) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            format \u003d \"pm\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            format \u003d \"am\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int hours \u003d time / 100;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        hours \u003d hours % 12;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (minutes \u003e 60) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            throw new DukeException(\"     Invalid minute format!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String hour \u003d String.valueOf(hours);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String minute \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (minutes \u003c 10) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            minute \u003d \".\" + \"0\" + minutes;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else if (minutes !\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            minute \u003d \".\" + minutes;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        outputTime \u003d hour + minute + format;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * To check if the time format is valid."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return True if it is valid, false otherwise."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return validFormat;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return outputTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 69
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": " * Class that represents all the methods used to print out messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The main list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * The reader used to read the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    private BufferedReader reader;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Constructor that takes in list of tasks to be printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param list The main list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public UI(TaskList list) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to read the user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @return The user input in String."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @throws IOException Used for when the reader has any errors."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public String readLine() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        return reader.readLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print the lines for partition."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out an empty line."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printBlank() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The main list of tasks to be printed out."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printTask(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Prints the introduction of the program during startub."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out error messages."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param error The error message to be printed out."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printError(DukeException error) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out indication that a new task has been added."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The task that is added."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printTaskAdd(Task task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     Now you have \" + taskList.size() + \" task in the list\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out indication that a task has been deleted."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The task that is deleted."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printTaskDelete(Task task) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Noted. I have removed this task:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        if (taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     Now you have \" + taskList.size() + \" task in the list\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out indication that the task has been completed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * @param task The task that is completed."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out the list of tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     \" + i + \". \" + taskList.get(i - 1));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     * Used to print out the message when quitting the program."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "robytanama"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        printBlank();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 163
    }
  },
  {
    "path": "src/main/resources/View/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" styleClass\u003d\"ap\" stylesheets\u003d\"@../CSSFiles/Style.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#fffbfb\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                \u003cFont name\u003d\"Impact\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                \u003cImage url\u003d\"@../images/User.png\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "robytanama": 32
    }
  },
  {
    "path": "src/main/resources/View/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import java.lang.String?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" styleClass\u003d\"ap\" stylesheets\u003d\"@../CSSFiles/Style.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"757.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"428.0\" promptText\u003d\"Type your request here!\" styleClass\u003d\"text\" stylesheets\u003d\"@../CSSFiles/Style.css\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cFont name\u003d\"Impact\" size\u003d\"17.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"517.0\" layoutY\u003d\"757.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"39.0\" prefWidth\u003d\"80.0\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@../CSSFiles/Style.css\" text\u003d\"SEND!\" textAlignment\u003d\"CENTER\" textFill\u003d\"#110404\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cFont name\u003d\"Impact\" size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"756.0\" prefWidth\u003d\"600.0\" stylesheets\u003d\"@../CSSFiles/Style.css\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"753.0\" prefWidth\u003d\"581.0\" spacing\u003d\"10.0\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@../CSSFiles/Style.css\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "robytanama"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "robytanama"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "robytanama"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003cstyleClass\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cString fx:value\u003d\"scroll-bar\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cString fx:value\u003d\"increment-button\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cString fx:value\u003d\"thumb\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cString fx:value\u003d\"track\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cString fx:value\u003d\"decrement-button\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003c/styleClass\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "robytanama"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton1\" layoutX\u003d\"434.0\" layoutY\u003d\"757.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#quitTheApp\" prefHeight\u003d\"39.0\" prefWidth\u003d\"80.0\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@../CSSFiles/Style.css\" text\u003d\"QUIT!\" textAlignment\u003d\"CENTER\" textFill\u003d\"#110404\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            \u003cFont name\u003d\"Impact\" size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "robytanama"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "robytanama"
        },
        "content": "      \u003c/Button\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "robytanama"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "robytanama": 43
    }
  },
  {
    "path": "src/main/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo eat food"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "todo wash clothes"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "deadline get money /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "deadline get item /by sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "event breakinus welcome tea /at tuesday 2pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "robytanama": 9
    }
  },
  {
    "path": "src/main/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "robytanama"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "robytanama"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "robytanama": 21
    }
  },
  {
    "path": "src/test/java/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.time.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void DateTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            Date date \u003d new Date(1, 2, 1999);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            assertEquals(\"1st of February 1999\", date.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            assertEquals(true, date.isValid());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "robytanama"
        },
        "content": "            System.out.println(\"     Caught!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "robytanama"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "robytanama"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    public void TodoTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        Todo todo \u003d new Todo(\"make some money\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        assertEquals(\"[T][X] make some money\", todo.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "robytanama"
        },
        "content": "        assertEquals(\"todo\", todo.getType());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "robytanama"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "robytanama"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "robytanama"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "robytanama": 13
    }
  }
]
