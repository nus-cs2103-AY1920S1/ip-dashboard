[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "run{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 47,
      "-": 15
    }
  },
  {
    "path": "data/archive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Archive List of Tasks:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | task 8 (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 1 | completed event C | July 17 2019 11:59 PM (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 0 | expired event A | July 17 2014 11:59 PM (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 1 | eat dinner (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | task 3 (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 1 | very very very long event name | February 11 2019 11:00 PM (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 0 | birthday old | August 20 2019 12:00 AM (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | task 2 (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "D | 0 | homework old | August 12 2019 11:59 PM (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 1 | homework (Date archived: 10/09/2019)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 1 | Call Sarah (Date archived: 11/09/2019)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 1 | Sarah\u0027s Birthday | September 25 2019 12:00 AM (Date archived: 11/09/2019)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | Buy a new T-shirt (Date archived: 17/09/2019)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "D | 1 | CS2103 Post-Lecture Quiz | September 12 2019 11:59 PM (Date archived: 17/09/2019)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 1 | Dental | October 17 2019 04:00 PM (Date archived: 17/09/2019)"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 17
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 1 | sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 0 | sleep | March 25 2019 11:59 PM"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | sleep 2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | eat"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "## 1 Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Project Duke is an interactive program designed to help users manage their "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "everyday simple task list. With an easy-to-use command line interface, Duke "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "supports many features to help users keep track of their everyday tasks, be it "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "something the user wants to do, an event to attend, or a deadline to meet."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "## 2 Quick Start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "To launch the Duke application, follow these steps:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "1. Ensure you have Java version 11 or later installed on your computer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "1. Download the latest version of Duke [here](https://github.com/zhangxuan97/duke/releases/tag/A-Release)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "1. To run the application:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    * For Mac OS users: Navigate to the folder which contains the jar file (latest `v0.2.jar`) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    in terminal and enter the command `java -jar v0.2.jar`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    * For Windows users: Run the application by double clicking the `v0.2.jar` file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "The application should be open in a few seconds."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "## 3 Features and Usages"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "### 3.1 Task Operations"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.1.1 Adding a Task: `todo`|`deadline`|`event`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Adds a particular type of task to the task list. The types of tasks include `Todo`, "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`Deadline`, and `Event`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`todo TASKNAME`: Adds a new todo task in the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`deadline TASKNAME / DATE TIME`: Adds a new deadline task in the task list "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "which expires on the `DATE` (specified in the format `dd/MM/yyyy`) and `TIME` "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "(specified in the format `HHmm`)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`event TASKNAME / DATE TIME`: Adds a new event task in the task list "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "which expires on the `DATE` (specified in the format `dd/MM/yyyy`) and `TIME` "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "(specified in the format `HHmm`)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`todo Buy a new T-shirt` | `[T][☓] Buy a new T-shirt`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`deadline Lecture Quiz / 12/09/2019 2359` | `[D][☓] Lecture Quiz (by: September 12 2019 11:59pm)`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`event Dental / 17/10/2019 1600` | `[E][☓] Dental (at: October 17 2019 04:00pm`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "The default completion status of a newly added task is set as incomplete."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.1.2 Deleting a Task: `delete`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Deletes a particular task identified by its task ID. Note: To check the list of task IDs, "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "use the `list` command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`delete TASK_ID`: Deletes the task with ID `TASK_ID`, if such a task exists."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`delete 2` | Acknowledgement that Duke has removed task 2, and the number of remaining tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.1.3 Marking a Task as Complete: `done`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "To indicate that the user has completed a particular task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`done TASK_ID`: Marks the task as complete, if such a task exists."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`done 2` | Acknowledgement that Duke has marked task as complete."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.1.4 Finding a Task by Keyword: `find`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Searches through all the names of the tasks and outputs the list of tasks which contains "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "the specified keyword. It is not case-sensitive."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`find KEYWORD`: Outputs the list of tasks whose names partially (or fully) contains the "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "keyword `KEYWORD`."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`find report` | A list of tasks and their details whose task names contains the word `report`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "### 3.2 Task List Operations"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.2.1 Listing All Tasks: `list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Lists out all current tasks in the format `[TASK_ID]. [TASKTYPE][STATUS] TASK_NAME`. If the task is an event "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "task or a deadline task, the respective date would be printed as well."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`list`: Lists out all existing tasks in user\u0027s task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`list` | Complete list of tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.2.2 Archiving Tasks: `archive`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "The user can choose to archive a set of tasks from the current task list. Once archived, it will "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "be deleted form the current task list and saved in a file `archive.txt` - the task name, details, "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "as well as its date of archive can be seen in `archive.txt`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive done`: Archives all tasks whose status has been mark as completed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive today`: Archives all expired tasks, i.e. date associated with the task is before today. "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "For example, if I have a task `[E][☓] Concert (at: September 14 2019 10:00pm)`, using the command "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive today` on September 15 2019 will archive the task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive TASK_ID`: Archives a task with the ID given by `TASK_ID`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive all`: Archives all existing tasks in current task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive done` | Acknowledgement from Duke that all completed tasks have been archived."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive today` | Acknowledgement from Duke that all expired tasks have been archived."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive 2` | Acknowledgement from Duke that task 2 has been archived, if task 2 exists."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`archive all` | Acknowledgement from Duke that all tasks have been archived."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.2.3 Clearing Tasks: `clear`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Removes all tasks from the task list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`clear`: Empties the task list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`clear` | Acknowledgement from Duke that task list is cleared."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "### 3.3 Global Operations"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.3.1 Viewing Help: `help`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Outputs the list of all commands and their corresponding syntax. Users can choose to seek "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "a more in-depth help option by entering the particular command behind help."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`help`: Shows the user a list of all possible commands."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`help [SPECIFIC_COMMAND]`: Explains to the user what the command does and the syntax of the "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Example Usage | Expected Output"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "------------- | -------------- "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`help` | A list of all possible commands is displayed"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`help find` | `Finds tasks in your task list by a specific keyword. Syntax: find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#### 3.3.2 Exiting the Program: `bye`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "`bye`: Upon entering \"bye\", the program will exit."
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 155,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private final int IMAGE_SIZE \u003d 70;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        displayPicture.setFitWidth(IMAGE_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        displayPicture.setFitHeight(IMAGE_SIZE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        displayPicture.setClip(new Circle(IMAGE_SIZE/2, IMAGE_SIZE/2, IMAGE_SIZE/2));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Archive;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Archive archive;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Duke object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        createNewUi();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String root \u003d new File(System.getProperty(\"user.dir\")).getPath();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String taskListFilePath \u003d root + \"/data/tasks.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        createNewStorage(taskListFilePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String archiveFilePath \u003d root + \"/data/archive.txt\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        createNewArchive(archiveFilePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        createNewTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void createNewArchive(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        archive \u003d new Archive(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!archive.isValidFilePath()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                archive \u003d new Archive();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                ui.dukeEcho((e.getMessage()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void createNewTaskList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            ui.dukeEcho(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void createNewStorage(String filePath) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!storage.isValidFilePath()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                storage \u003d new Storage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                ui.dukeEcho((e.getMessage()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void createNewUi() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the message to be displayed to the user in String format after parsing the"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * user\u0027s full command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param fullCommand The full command that the user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return Duke\u0027s response to the full command in String format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String run(String fullCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (fullCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"Please enter a command. Type \u0027help\u0027 for a list of all valid commands.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            response +\u003d c.execute(tasks, ui, storage, archive);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            response +\u003d ui.getErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 92,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 10
    }
  },
  {
    "path": "src/main/java/LeftDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Creates a Left Dialog Box"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class LeftDialogBox extends DialogBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public LeftDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(text, img);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.flip();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/r2d2.png\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            VBox dialogContainer \u003d (VBox) scene.lookup(\"#dialogContainer\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                    new LeftDialogBox(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\", dukeImage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 41
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chewie.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/r2d2.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String input \u003d userInput.getText().trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                new RightDialogBox(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                new LeftDialogBox(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 55
    }
  },
  {
    "path": "src/main/java/RightDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Creates a Right Dialog Box"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class RightDialogBox extends DialogBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public RightDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(text, img);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 10
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * An AddCommand object to deal with adding Tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs an AddCommand to deal with adding Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskType      The type of the task - Todo, Event, Deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskDetails   Additional information of the task - task name, task date \u0026 time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If input is in invalid format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public AddCommand(String taskType, String taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d taskDetails.split(\"/\",2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskName \u003d arr[0].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"The description of a \" + taskType + \" cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                this.dateTime \u003d new DateTime(arr[1].trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"No date and time found!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to add a new task into task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException    If format of task to be added is invalid"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new Deadline(taskName, dateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new Event(taskName, dateTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task format\"); // should never reach here :)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask.toString(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return String format of AddCommand for debugging."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"Add \" + this.taskType + \": \" + this.taskName + \" \" + this.dateTime.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 85
    }
  },
  {
    "path": "src/main/java/command/ArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ArchiveCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    String archiveCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    int taskNum \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArchiveCommand(String archiveCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.archiveCommand \u003d archiveCommand.toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes a full command if valid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks   The existing task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui      The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive The Archive object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If command is invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            taskNum \u003d Integer.parseInt(archiveCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            if (taskNum !\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                archiveCommand \u003d \"number\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            //Do nothing. It means command is one of the other formats."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch (archiveCommand){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"all\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            archiveAllTasks(tasks, storage, archive);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"Alright, I have archived all existing tasks.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            archiveAllBeforeToday(tasks, storage, archive);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"I have archived all tasks which have expired before today.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            archiveCompletedTasks(tasks, storage, archive);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"I have archived all completed tasks.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"number\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Task archivedTask \u003d archiveByTaskId(tasks, storage, archive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"I have archived the task: \" + archivedTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid archive command. Archive only supports all/done/today/taskID.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Task archiveByTaskId(TaskList tasks, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assert taskNum \u003e -1: \"Archive task at \" + taskNum;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I can only archive tasks from 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task archivedTask \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            archive.addTaskToArchive(archivedTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I can\u0027t seem to write to your archive file.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return archivedTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void archiveCompletedTasks(TaskList tasks, Storage storage, Archive archive) throws DukeException{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e completedTasks \u003d tasks.removeCompletedTasks();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            for (Task task : completedTasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                archive.addTaskToArchive(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I can\u0027t seem to write to your archive file.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void archiveAllBeforeToday(TaskList tasks, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e expiredTasks \u003d tasks.removeExpiredTasks();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            for (Task task : expiredTasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                archive.addTaskToArchive(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I can\u0027t seem to write to your archive file.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void archiveAllTasks(TaskList tasks, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                archive.addTaskToArchive(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I can\u0027t seem to write to your archive file.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.clearAll();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 108
    }
  },
  {
    "path": "src/main/java/command/ClearAllTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A ClearAllTasksCommand object to deal with clearing tasks from the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ClearAllTasksCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a ClearAllTasksCommand object to deal with clearing out all the tasks in an existing task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ClearAllTasksCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to clear all existing tasks in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException    If there is an error in clearing the file which stores the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.clearAll();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(\"All tasks have been cleared. You now have an empty task list!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.clearAll();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 33
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Abstract class to deal with handling commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a Command object to handle commands received from ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes a full command if valid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If command is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Indicates if the command is an exit command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The boolean to indicate if the ui should exit."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Sets the exit boolean to true."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void canExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 46
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A DeleteCommand object to deal with deleting a specific task from the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private int taskID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a DeleteCommand object to deal with deleting tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskID The task ID to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DeleteCommand(int taskID) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to delete a task identified by its task ID."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If task ID is out of bounds"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (this.taskID \u003e tasks.size() || this.taskID \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task ID. Please Enter a task ID between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task removedTask \u003d tasks.deleteTask(taskID);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(\"Noted. I\u0027ve removed this task:\", removedTask.toString(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"Delete \" + this.taskID;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 48
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A DoneCommand Object to deal with marking a task as complete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private int taskID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a DoneCommand object to deal with marking a task as complete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskID The ID of the task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DoneCommand(int taskID) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to mark a task as complete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If task ID provided is out of bounds"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (this.taskID \u003e tasks.size() || this.taskID \u003c\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task ID. Please Enter a task ID between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assert this.taskID \u003c\u003d tasks.size() \u0026\u0026 this.taskID \u003e 0 : \"Task ID is invalid.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task completedTask \u003d tasks.finishTask(taskID);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(\"Nice! I\u0027ve marked this task as done:\", completedTask.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 42
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Archive;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * An ExitCommand object to deal with requests to exit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a new ExitCommand to deal with the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to allow the program to exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.getGoodbyeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super.canExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 34
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with finding tasks by keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a FindCommand object to deal with finding tasks by keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param keyword the keyword to be searched"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException if keyword only contains whitespaces"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public FindCommand(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (keyword.equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Please enter a keyword to find!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assert keyword.length() \u003e 0: \"There should be a keyword to find\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to find tasks by keyword."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive)  {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e tasksContainingKeyword \u003d tasks.findTasksByKeyword(keyword);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] tasksToPrint \u003d new String[tasksContainingKeyword.size() + 1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasksToPrint[0] \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasksContainingKeyword.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            tasksToPrint[i] \u003d i + \".\" + tasksContainingKeyword.get(i - 1).toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(tasksToPrint);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 49
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A HelpCommand Object to deal with help requests from the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String command \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Arrays.asList(\"bye\", \"list\", \"done\", \"delete\", \"todo\", \"event\", \"deadline\", \"archive\", \"find\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new HelpCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new HelpCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to help the user print out a list of allowable input formats."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Helper helper \u003d new Helper();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d ui.dukeEchoString(helper.getCommands());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d ui.dukeEchoString(helper.getSpecificCommand(command));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 52
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Archive;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A ListCommand Object to deal with user requests to enumerate the current task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new ListCommand object to help list out all all current tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Executes the command to list out all current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks     The existing task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param ui        The Ui object which interacts with the current user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param storage   The Storage object which reads and writes to a specified file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param archive"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return          The message to be displayed upon successful execution"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage, Archive archive) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            arr[i] \u003d i + \". \" + tasks.getTask(i).toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d ui.dukeEchoString(arr);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 38
    }
  },
  {
    "path": "src/main/java/main/Archive.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Archive {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isValidFilePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Archive object which reads and writes to file at filepath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * If file path does not exist, a default task list would be created as follows:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * [root]/data/tasks.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param filePath File path to read from and to write to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Archive(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        isValidFilePath \u003d file.exists();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a default Archive object with predetermined file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException if there is an error in creating the file at the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * predetermined file path"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Archive() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            filePath \u003d createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            isValidFilePath \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File cannot be created.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if file path is valid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return true if file path is valid."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isValidFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return isValidFilePath;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Makes a directory called Data if it does not exist."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return file path of new data directory."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String makeDataDirectoryIfNotExist() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String root \u003d new File(System.getProperty(\"user.dir\")).getPath();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File dataDir \u003d new File(root + \"/data\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return dataDir.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new file at [root]/data/archive.txt to store the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws IOException if file cannot be created"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String createNewFile() throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String dataDir \u003d makeDataDirectoryIfNotExist();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File archiveFile \u003d new File(dataDir + \"/archive.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        boolean isFileCreated \u003d archiveFile.createNewFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (isFileCreated) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            filePath \u003d archiveFile.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            isValidFilePath \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return archiveFile.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void addTaskToArchive(Task task) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!isValidFilePath) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        LocalDate localDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String dateArchived \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(localDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        appendToFile(filePath, task.publishTask() + \" (Date archived: \" + dateArchived + \")\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 100
    }
  },
  {
    "path": "src/main/java/main/DataFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public abstract class DataFile {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    boolean isValidFilePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DataFile(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        isValidFilePath \u003d file.exists();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        System.out.println(\"File at \" + filePath + \"exists? \" + isValidFilePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DataFile() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            filePath \u003d createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            isValidFilePath \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File cannot be created.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public abstract String createNewFile() throws IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isValidFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return isValidFilePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String makeDataDirectoryIfNotExist() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String root \u003d new File(System.getProperty(\"user.dir\")).getPath();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File dataDir \u003d new File(root + \"/data\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return dataDir.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Clears the file found at filePath."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException if file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void clearAll() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!isValidFilePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            new FileWriter(filePath); //create new file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File does not exist, there is nothing to clear!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 64
    }
  },
  {
    "path": "src/main/java/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * A class to handle all exceptions pertaining to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Invokes the superclass Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Invokes the superclass Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param message The error message to be passed as a param to the superclass"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 22
    }
  },
  {
    "path": "src/main/java/main/Helper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Helper class for the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Helper {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private static int NUMBER_OF_COMMANDS \u003d 11;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    String[] arr \u003d new String[NUMBER_OF_COMMANDS + 1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a new Helper object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Helper() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[0] \u003d \"Here are the list of commands and their allowable input formats\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[1] \u003d \"bye\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[2] \u003d \"list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[3] \u003d \"done \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[4] \u003d \"delete \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[5] \u003d \"todo \u003ctask name\u003e\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[6] \u003d \"event \u003ctask name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[7] \u003d \"deadline \u003ctask name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[8] \u003d \"help \u003cspecific command\u003e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[9] \u003d \"clear\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[10] \u003d \"find \u003ckeyword\u003e\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[11] \u003d \"archive all/today/taskID/done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns an array of allowable input formats."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return An array with the list of allowable input formats"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String[] getCommands() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Helps the user identify the purpose of the command and its correct syntax."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param command the command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return the purpose of the command and the respective command syntax."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String[] getSpecificCommand(String command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] res;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"bye: Exits the program.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: bye\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"list: I will list out all the tasks you have in your task list\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: list\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"todo: Add a new todo task into your task list\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: todo \u003ctask name\u003e\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"event: Add a new event item into your task list\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: event \u003cevent name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"deadline: Add a new deadline item into your task list\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: deadline \u003ctask name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"find: Finds tasks in your task list by a specific keyword\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: find \u003ckeyword\u003e\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"done: Marks a task as completed in the task list\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: done \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"delete: Permanently removes a task from your task list\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: delete \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"archive\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[6];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"archive all: Move all tasks into your archive task list.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"archive done: Move all completed tasks into your archive task list.\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[2] \u003d \"archive today: Move all expired tasks into your archive task list.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[3] \u003d \"archive \u003ctaskID\u003e: Move the task with specified task ID into your archive task list.\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[4] \u003d \"Note that all archived tasks will be removed from your existing task list.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[5] \u003d \"syntax: archive all/done/today/\u003ctaskID\u003e\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d \"clear: Empties your current task list by permanently removing all existing tasks.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"syntax: clear\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d new String[2];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[0] \u003d command + \" is not yet a valid command.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res[1] \u003d \"Type \u0027help\u0027 to see the list of all commands\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 111
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns a Command object to parse the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param fullCommand The full user command received from the ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return A command object to parse the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String cmd \u003d arr[0].toLowerCase();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            if (arr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new HelpCommand(arr[1].trim().toLowerCase());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ClearAllTasksCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new DoneCommand(Integer.parseInt(arr[1].trim()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a valid task ID to mark as complete!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a numerical value for the task ID\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(arr[1].trim()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a valid task ID to delete!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a numerical value for the task ID\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                String keyword \u003d arr[1].trim().toLowerCase();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a keyword to find\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new AddCommand(cmd, arr[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"The description of the command \u0027\" + cmd + \"\u0027 cannot be empty!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"archive\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new ArchiveCommand(arr[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Enter a command behind archive. \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                        + \"Supported commands include archive all/today/done/taskID\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry I do not understand what you mean. \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                    + \"Please enter \u0027help\u0027 to see all supported commands.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 77
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isValidFilePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Storage object which reads and writes to file at filepath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * If file path does not exist, a default task list would be created as follows:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * [root]/data/tasks.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param filePath File path to read from and to write to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        isValidFilePath \u003d file.getAbsoluteFile().exists();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a default Storage object with predetermined file path."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException if there is an error in createing the file at the"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * predetermined file path"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Storage() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            filePath \u003d createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            isValidFilePath \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File cannot be created.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if file path is valid."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return true if file path is valid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isValidFilePath() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return isValidFilePath;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Makes a directory called Data if it does not exist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return file path of new data directory."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String makeDataDirectoryIfNotExist() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String root \u003d new File(System.getProperty(\"user.dir\")).getPath();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File dataDir \u003d new File(root + \"/data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return dataDir.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new file at [root]/data/tasks.txt to store the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws IOException if file cannot be created"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String createNewFile() throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String dataDir \u003d makeDataDirectoryIfNotExist();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File taskListFile \u003d new File(dataDir + \"/tasks.txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        boolean isFileCreated \u003d taskListFile.createNewFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (isFileCreated) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            filePath \u003d taskListFile.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            isValidFilePath \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return taskListFile.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Loads existing task list from specified file path."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return An ArrayList containing the Tasks from the specified file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If file does not exist"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!isValidFilePath) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File f;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            f \u003d new File(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File loading error: \" + e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d readFromFile(sc, f);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Reads from a specified File."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param sc    Scanner to read from file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param f     File to be read from"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return      The ArrayList of task objects read from file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If file is corrupted."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ArrayList\u003cTask\u003e readFromFile(Scanner sc, File f) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Task task \u003d addToTaskList(sc.nextLine().trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Task addToTaskList(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        checkValidTaskListFormat(arr);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String taskType \u003d checkValidTaskType(arr);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        int status \u003d checkValidTaskStatus(arr);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        boolean isComplete \u003d status !\u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTime dateTime;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new ToDo(arr[2].trim(), isComplete);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                dateTime \u003d DateTime.parseTaskListFormat(arr[3].trim());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new Event(arr[2].trim(), isComplete, dateTime);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                dateTime \u003d DateTime.parseTaskListFormat(arr[3].trim());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new Deadline(arr[2].trim(), isComplete, dateTime);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task status found.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void checkValidTaskListFormat(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (arr.length \u003c 3 || arr.length \u003e 4) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Existing tasklist is corrupt.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String checkValidTaskType(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String taskType \u003d arr[0].trim();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!taskType.equals(\"T\") \u0026\u0026 !taskType.equals(\"E\") \u0026\u0026 !taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task type found.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private int checkValidTaskStatus(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        int status;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            status \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task status found.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Saves current task list to file at specified file path."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param tasks The task list to be written to file."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If a file writing error arises"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!isValidFilePath) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            new FileWriter(filePath); //create new file"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                appendToFile(filePath, task.publishTask());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Error in saving to file: \" + e.getMessage());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Clears the file found at filePath."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException if file is not found."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void clearAll() throws DukeException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!isValidFilePath) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            new FileWriter(filePath); //create new file"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File does not exist, there is nothing to clear!\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 237
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Used to store tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new TaskList object with no existing tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new TaskList object with existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param existingTaskList ArrayList of existing tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e existingTaskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks \u003d existingTaskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the Tasks stored in an ArrayList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The task list in ArrayList form."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Adds a new task to the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param newTask Task object to be added"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The task that has been added"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task addTask(Task newTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assert !newTask.equals(null) : \"New task cannot be null\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Deletes a task from the task list given by its task ID (starting from 1)."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskNum task ID (index starts from 1)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The deleted task with specified task ID."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task removedTask \u003d this.tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Marks a task given by its task ID as completed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskNum The task ID of the task to be mark as completed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return The updated Task object, with completion status updated."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task finishTask(int taskNum) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task completedTask \u003d this.tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        completedTask.finishTask();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the current size of the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return the current size of the task list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the task with the corresponding task ID."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskID is the ACTUAL task ID, with index starting from 1"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return Task Object with the corresponding task ID."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task getTask(int taskID) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assert taskID \u003c\u003d tasks.size() \u0026\u0026 taskID \u003e 0 : \"Task ID must not be out of bounds.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Remove all tasks from the existing task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Finds all tasks which contains a specific keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param keyword the keyword to be searched"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return An ArrayList of tasks which contains the keyword"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            if (task.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                tasksFound.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns an iterator over elements of type {@code T}."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return an Iterator."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d new Iterator\u003c\u003e() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            private int currIdx \u003d 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            public boolean hasNext() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return currIdx \u003c tasks.size() \u0026\u0026 tasks.get(currIdx) !\u003d null;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            public Task next() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return tasks.get(currIdx++);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            public void remove() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        };"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return iter;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Removes all tasks which have been marked as complete."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return an ArrayList of all completed tasks which have been removed."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e removeCompletedTasks() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d tasks.stream().filter(task -\u003e task.isComplete());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        List\u003cTask\u003e taskList \u003d taskStream.collect(Collectors.toList());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.removeAll(taskArrayList);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Removes all tasks which has expired before today."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return An ArrayList of all tasks which has expired before today"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e removeExpiredTasks() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d tasks.stream().filter(task -\u003e task.isExpired());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        List\u003cTask\u003e taskList \u003d taskStream.collect(Collectors.toList());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.removeAll(taskArrayList);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 176
    }
  },
  {
    "path": "src/main/java/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static final String DIVIDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static final String BLANKSPACE \u003d \"     \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns a welcome message from duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return a welcome message from duke"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d dukeEchoString(\"Hi! My name is Duke, what can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns a goodbye message from Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return a goodbye message from Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String getGoodbyeMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d dukeEchoString(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Displays an error."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param message the error message to be displayed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return error message from Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String getErrorMessage(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res \u003d dukeEchoString(message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Outputs to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param messages The list of messages to be shown to the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                 Messages in separate lines should be fed in as different parameters, e.g."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                 dukeEcho(\"This is message 1\", \"Message 2 is on the next line\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void dukeEcho(String... messages) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (String msg : messages) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            System.out.println(BLANKSPACE + msg);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a string output format for the GUI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param messages The list of messages to be shown to the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                 Messages in separate lines should be fed in as different parameters, e.g."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                 dukeEcho(\"This is message 1\", \"Message 2 is on the next line\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String dukeEchoString(String... messages) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (messages.length\u003d\u003d0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (String msg : messages) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            sb.append(msg + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 81
    }
  },
  {
    "path": "src/main/java/task/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * DateTime object to make sense of date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a DateTime object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param dateTime in LocalDateTime format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    DateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a DateTime object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param rawDateTimeFormat A String with date and time information, with format dd/MM/yyyy HHmm,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                          e.g. 25/07/2019 2330"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If format is not recognized."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DateTime(String rawDateTimeFormat) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            this.dateTime \u003d LocalDateTime.parse(rawDateTimeFormat, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Makes sense of the task list date time format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskListDTformat A string with date and time information, with format LLLL dd yyyy hh:mm a,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *                         e.g. Jul 25 2019 11:30pm"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return DateTime object which stores the date and time."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @throws DukeException If format is not recognized."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static DateTime parseTaskListFormat(String taskListDTformat) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLLL dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        LocalDateTime resultDateTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            resultDateTime \u003d LocalDateTime.parse(taskListDTformat, formatter);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return new DateTime(resultDateTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLLL dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if task date and time is before the other specified date and time."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param otherDate other specified date and time"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @returntrue if task date and time is before the other specified date and time"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isBefore(LocalDateTime otherDate) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.dateTime.isBefore(otherDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 76
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name      The name of the Deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param dateTime  The date and time of the task, in DateTime format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Deadline(String name, DateTime dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name      The name of the deadline task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param isComplete The completion status of the deadline task (true/false)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param dateTime  The date and time of the task, in DateTime format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Deadline(String name, boolean isComplete, DateTime dateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"D | \" + super.publishTask() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isExpired() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        LocalDateTime today \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.dateTime.isBefore(today);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 51
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name      The name of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param dateTime  The date and time of the event, in DateTime format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Event(String name, DateTime dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name      The name of the event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param isComplete    The completion status of the event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param dateTime  The date and time of the event, in DateTime format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Event(String name, boolean isComplete, DateTime dateTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"E | \" + super.publishTask() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isExpired() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        LocalDateTime today \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.dateTime.isBefore(today);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 49
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isComplete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Task object, with completion status set to false by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name          The name of the new task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.name \u003d name.trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Creates a new Task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name          The name of the new task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param isComplete    The completion status of the task (true/false)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    Task(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String status \u003d this.isComplete ? \"\\u2713\" : \"\\u2717\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[\" + status + \"] \" + this.name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if task is complete."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return true if task is complete"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.isComplete;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Sets the status of the task to complete."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void finishTask() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isComplete \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the comprehensive task details to be written to the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return the comprehensive task details to be written to the file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String status \u003d this.isComplete ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return status + \" | \" + this.name;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if task name contains a keyword."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param keyword the keyword to be checked against the task name"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return true if task name contains specified keyword"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.name.toLowerCase().contains(keyword);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns true if a task is expired."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * ToDo tasks are never expired."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return true if task is expired."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isExpired() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 83
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type ToDo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a new ToDo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name The name of the ToDo task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Constructs a new ToDo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param name The name of the ToDo task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param isComplete The completion status of the task (true/false)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ToDo(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"T | \" + super.publishTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 36
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"658.0\" prefWidth\u003d\"555.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"616.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"479.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"479.0\" layoutY\u003d\"616.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"617.0\" prefWidth\u003d\"555.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"540.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "      \u003cURL value\u003d\"@main.css\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "   \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 23
    }
  },
  {
    "path": "src/test/java/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_addCommand_noException() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"evENT dog\u0027s birthday / 26/01/2016 1200\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(new AddCommand(\"event\", \"dog\u0027s birthday / 26/01/2016 1200\").toString(), res);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_add_Command_withException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"evENT dog\u0027s birthday / 32/01/2016 1200\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\", res);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_deleteCommand_noException() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String dummyTaskToAdd \u003d \"evENT dog\u0027s birthday / 26/01/2016 1200\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Parser.parse(dummyTaskToAdd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"delete 5\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"Delete 5\", res);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 50
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void toStringTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(new Event(\"Assignment\", false,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                        new DateTime(\"25/03/2019 2359\")).toString(),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"[E][✗] Assignment (at: March 25 2019 11:59 PM)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void publishTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"E | 0 | Assignment | March 25 2019 11:59 PM\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                new Event(\"Assignment\", false,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                        new DateTime(\"25/03/2019 2359\")).publishTask());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 22
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     2. [T][✗] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     3. [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     4. [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [T][✓] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✓] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     2. [T][✓] borrow book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     3. [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     4. [D][✓] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 57
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "event birthday /at Sunday 12am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 34
    }
  }
]
