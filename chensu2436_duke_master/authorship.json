[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 28,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "T/✗/study"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "D/✓/CS2103 / tutorial"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "E/✗/party / Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "T/✓/sleep"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "D/✗/CS2100 / Friday"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 5
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private VBox textContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        db.setStyle(\"-fx-background-color: #DCDCDC;\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        db.setStyle(\"-fx-background-color: #F4F4F4;\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 64
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * This program reads in command, adds new tasks into the task lists, changes the task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * status when it is done, and delete the tast according to the command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Loads the data from given file path."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param filePath filepath of the data of previous task lists."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return ui.sayBye();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                Command command \u003d parser.parseCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return command.execute(tasks, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            } catch (DukeException | IOException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return ex.getMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String getGreeting() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return ui.greet();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 64
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 9
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nus.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_logo.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getGreeting(), dukeImage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 55
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Parser object to deals with making sense of the user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /** 2 attribute."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * fullCommand represents the String of input from the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * part represents an array of Strings splitted by \" \"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String[] part;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in a String and creates a new Parser object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand the String of input from the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Parser(String fullCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.part \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    Command parseCommand() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (checkValidity()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            switch (getCommandType()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new TodoCommand(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new DeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                return new EventCommand(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                assert false : getCommandType();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return new Command(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns true if the full command is a valid command, or false otherwise."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return boolean variable representing the validity of the command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws DukeException if the command is invalid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    boolean checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        switch (getCommandType()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        case \"done\": case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            if (part.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! You need to enter an index.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            if (part.length \u003c 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! You need to enter a keyword to search\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        case \"todo\": case \"deadline\": case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            if (part.length \u003c 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a(n)\" + getCommandType()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                        + \"cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                    + \"that means :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the command type which is the first word of the full command."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of command type."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String getCommandType() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return part[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the index of the targeted task when there is a Done/Delete command."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return integer of the task index."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public int[] getIndices() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (part[1].contains(\"-\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            String[] range \u003d part[1].split(\"-\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            int start \u003d Integer.parseInt(range[0]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            int end \u003d Integer.parseInt(range[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            int[] indices \u003d new int[end - start + 1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                indices[i - start] \u003d i;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return indices;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            String[] range \u003d fullCommand.split(\"[, ]\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            int[] indices \u003d Arrays.stream(range)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                                .filter(s -\u003e !s.equals(\"\") \u0026\u0026 !s.equals(\"delete\") \u0026\u0026 !s.equals(\"done\"))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                                .mapToInt(Integer::parseInt)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                                .toArray();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return indices;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return fullCommand.substring(fullCommand.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the activity name of a Todo task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of activity name of a Todo task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String getActivityNameWithoutTime() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return fullCommand.substring(fullCommand.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the activity name of a Deadline or Event task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of activity name of a Deadine or Event task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String getActivityNameWithTime() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return fullCommand.substring(fullCommand.indexOf(\" \") + 1,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                fullCommand.indexOf(\"/\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the deadline in a \"deadline\" command."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of deadline."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String[] deadline \u003d fullCommand.split(\"by\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return deadline[1];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns the time of a Event task in a \"event\" command."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of time of a Event task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String[] time \u003d fullCommand.split(\"at\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return time[1];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 155
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Storage object to deal with loading tasks from the file"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * and saving tasks in the file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /** 1 attribute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * filePath represents a string of file path of the file that stores"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * data of the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in filePath and creates a new storage object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param filePath the string representing the file path of the stored task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns an ArrayList of tasks loaded from the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return an ArrayList of tasks loaded from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws FileNotFoundException if the file cannot be found by the path."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Scanner s \u003d new Scanner(fr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            String[] part \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            // Status is either done or not done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            String status \u003d part[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            boolean isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            isDone \u003d status.equals(\"✓\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            // Checks the type of task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            switch (part[0]) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                tasks.add(new Todo(part[2], isDone));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                tasks.add(new Deadline(part[2], isDone, part[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                tasks.add(new Event(part[2], isDone, part[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                assert false : part[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Saves the tasks in the list whenever there is any change."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fw.write(task.storageFormat() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 84
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a TaskList object, which contains the task list,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * and has operations to add/delete/done tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /** 1 attribute."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * list represents the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in no parameter and creates an empty list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in an ArrayList of task objects and creates a list of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * the same content as the parameter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks an ArrayList of task object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list \u003d tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Prints out the tasks in the list currently."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String showTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            message +\u003d \"\\n\" + (i+1) + \". \" + task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        //for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        //    message +\u003d (i + 1) + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Prints out the tasks with keyword in the list currently."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "               message +\u003d \"\\n\" + (i + 1) + \". \" + task ;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Adds a new task into the list and prints out the message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param newTask newly created task object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String getMessage(Task newTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n  \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                + newTask + \"\\nNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Creates a new Todo object and adds it into the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param activityName String of take name."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String addTodo(String activityName, boolean isDone) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Task newTask \u003d new Todo(activityName,isDone);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return getMessage(newTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Creates a new Deadline object and adds it into the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param activityName String of take name."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param deadline String of deadline time."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String addDeadline(String activityName, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Task newTask \u003d new Deadline(activityName, isDone, deadline);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return getMessage(newTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Creates a new Event object and adds it into the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param activityName String of take name."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param time String of activity time."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String addEvent(String activityName, String time, boolean isDone) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Task newTask \u003d new Event(activityName,isDone, time);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return getMessage(newTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Marks the task of the specified index to \"done\"."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param idx integer that represents the index of the task in the command."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String doneTask(int[] indices) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Nice! I\u0027ve marked the following task(s) as done: \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        for (int i : indices) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            assert i \u003e\u003d 1 \u0026\u0026 i \u003c\u003d list.size() : \"Invalid index input\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            list.get(i - 1).markAsDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            message.append(\"\\n  \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            message.append(list.get(i - 1));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Deletes the task in the command from the task list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param indices integer that represents the index of the task in the command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String deleteTask(int[] indices) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Noted. I\u0027ve removed the task(s): \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        ArrayList\u003cTask\u003e toRemove \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        for (int i : indices) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            assert i \u003e\u003d1 \u0026\u0026 i \u003c\u003d list.size() : \"Invalid index input\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            list.get(i - 1).markAsDeleted();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            toRemove.add(list.get(i - 1));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            message.append(\"\\n  \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            message.append(list.get(i - 1).toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        list.removeAll(toRemove);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message + \"\\nNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns an ArrayList of the current task list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return an ArrayList of the current task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 153
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a ui object to deal with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Prints out greeting message to users."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String greet() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return \"Hello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a string of user input (full command)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param sc a Scanner object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return string of full command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String readInput(Scanner sc) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Prints out the bye-bye message when the user enters \"bye\" command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String sayBye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Prints out \"File not found\" when there is FileNotFoundException."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    void showLoadingError() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 40
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Command object that is able to represent different types of command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Creates a new Command object containing the full, valid input command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of full, valid input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Command(String fullCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Executes actions according different command type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a DeadlineCommand object in charge of adding a deadline task into the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public DeadlineCommand (String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Adds a deadline task into the taskList and updates file in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d tasks.addDeadline(parser.getActivityNameWithTime(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        parser.getDeadline(), false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a DeleteCommand object in charge of deleting the target task from the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public DeleteCommand (String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Deletes the task with given index from the list and updates the storage file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d tasks.deleteTask(parser.getIndices());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a DoneCommand object in charge of marking the target task as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public DoneCommand (String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Marks the task with given index to be done and updates the storage file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d tasks.doneTask(parser.getIndices());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a EventCommand object in charge of adding a event task into the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public EventCommand (String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Adds a event task into the taskList and updates file in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d tasks.addEvent(parser.getActivityNameWithTime(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        parser.getTime(), false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a FindCommand object in charge of finding tasks which contains the keyword"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * in the existing tasks list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public FindCommand (String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Lists tasks that contains the keyword in the tasks list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return tasks.findTask(parser.getKeyword());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a ListCommand object in charge of listing existing tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public ListCommand (String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Lists existing tasks in the tasks list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return tasks.showTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 29
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a TodoCommand object in charge of adding a todo task into the tasklist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param fullCommand String of valid, full command input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public TodoCommand (String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Adds a todo task into the taskList and updates file in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param tasks TaskList object containing a list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        String message \u003d tasks.addTodo(parser.getActivityNameWithoutTime(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Deadline object that inherits from Task class and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * stores task name, status and deadline time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * 1 additional parameter"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * deadline represents a String representation of deadline time of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in taskName, done, and deadline to create a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param taskName String of task name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param deadline String representation of deadline time of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Deadline(String taskName, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.deadline  \u003d deadline;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String representation of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @returna String showing the status and the task name of a Deadline object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[D][✓]\" + taskName + \"(by:\" + deadline + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[D][✗]\" + taskName + \"(by:\" + deadline + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a Data object which is converted from the String deadline time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return a Data object which is converted from the String deadline time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Date convertDateTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Date converted;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            converted \u003d formatter.parse(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch  (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return converted;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String of representation of the task that is to be recorded in the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of representation of the task that is to be recorded in the file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String storageFormat() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"D/✓/\" + taskName + \"/\" + deadline;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"D/✗/\" + taskName + \"/\" + deadline;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates aa Event object that inherits from Task class and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * stores task name, status and event time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * 1 additional parameter"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * deadline represents a String representation of event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in taskName, done, and time to create aa Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param taskName String of task name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param time String representation of event time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Event(String taskName, boolean isDone, String time) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String representation of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @returna String showing the status and the task name of an Event object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[E][✓]\" + taskName + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[E][✗]\" + taskName + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a Data object which is converted from the String event time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return a Data object which is converted from the String event time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    private Date convertDateTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        DateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        Date converted;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            converted \u003d formatter.parse(time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } catch  (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return converted;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String of representation of the task that is to be recorded in the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of representation of the task that is to be recorded in the file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String storageFormat() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"E/✓/\" + taskName + \"/\" + time;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"E/✗/\" + taskName + \"/\" + time;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Task object which stores activity name, status (done or not done)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /** 2 attribute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * tasName represents the String of task name."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * done is true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    boolean isDeleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor takes in a String of taskName and a boolean variable"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * to construct a Task object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param taskName a String of task / activity name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param done true if the task is done or false otherwise."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    Task(String taskName, boolean done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        isDeleted \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Changes the status of the task when a \"done\" command is executed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void markAsDeleted() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        isDeleted \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public boolean isDeleted() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return isDeleted;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String of representation of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return a String showing the status and the task name."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[✓]\" + taskName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[✗]\" + taskName;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a dummy string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return a dummy string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String storageFormat() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a Todo object that inherits from Task class and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * stores task name and status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * The constructor is inherited from Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param taskName String of task name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @param isDone true if the task is done, or false otherwise."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public Todo(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String representation of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @returna String showing the status and the task name of a Todo object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[T][✓]\" + taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"[T][✗]\" + taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Returns a String of representation of the task that is to b3 recorded in the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * @return String of representation of the task that is to be recorded in the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public String storageFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"T/✓/\" + taskName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            return \"T/✗/\" + taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 43
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"TOP\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            \u003cFont name\u003d\"Lao MN\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            \u003cInsets left\u003d\"8.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" scaleShape\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"659.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            \u003cFont name\u003d\"AppleGothic Regular\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"659.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"661.0\" prefWidth\u003d\"480.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 23
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " * Encapsulates a DukeTest object to run JUnit test on Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chensu2436"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Tests getCommandType() method in the Parser class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void testGetCommandType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        assertEquals(\"todo\", new Parser(\"todo read book\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                .getCommandType());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     * Tests toString() method in the Todo class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "        assertEquals(\"[T][✗]read book\", new Todo(\"read book\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "                false).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chensu2436"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chensu2436"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chensu2436": 29
    }
  }
]
