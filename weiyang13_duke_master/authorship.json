[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 41,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::1::adscnkcnas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::csadjhkncjkascn"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[D]::0::casdnckja::cdajsnlkdj"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[E]::1::sadcjndis::cdnaskdnci"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::hi hi hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::bye bye bye"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::1::hi"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "![Logo](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### Personalised chatbot"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Duke is *your* chatbot. Duke is *Da Duke* to your *Sa Suke*. He does not say much right now but he might do so in a future version!!!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### Task organizer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Duke manages your list of task, allowing you to add, delete, or list whatever todos, deadlines or events. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "What\u0027s more, Duke automatically identifies which tasks are more important, sorting them such that the earlier, "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "undone tasks show up first. Unfortunately, the GUI currently only supports 5 lines."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `todo` - Add to-do"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Add an undone to-do task to the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`todo Drop CS2103T`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " [T][-] Drop CS2103T"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `deadline` - Add deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Add an undone deadline to the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`deadline Drop CS2101 /by 29/09/2019 2359`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " [D][-] Drop CS2101 (by: 29/09/2019 2359)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `event` - Add event"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Add an undone event to the list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`deadline \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`deadline Celebrate /at 30/09/2019 0000`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " [E][-] Celebrate (at: 30/09/2019 0000)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `list` - List tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "List all tasks. Note that tasks are automatically sorted, according to the following rules:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1. Undone tasks are listed first. (highest priority)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1. Dated tasks are listed first."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1. Tasks with an earlier date are listed first."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1. Tasks that are smaller in alphanumerical order are listed first. (lowest priority)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Note that due to the limitation of GUI, only the first 5 lines of tasks are visible, currently."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1.[E][-] Celebrate (at: 30/09/2019 0000)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "2.[T][-] Celebrate more (at: 01/10/2019 1200)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "3.[T][-] Drop CS2103T"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "3.[D][+] Drop CS2101 (by: 29/09/2019 2359)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `done` - Mark as done"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Mark a task as done. Item number of task to be marked as done is as per `list`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`done \u003citem number\u003e`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "  [T][+] Drop CS2103T"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Delete a task. Item number of task to be marked as done is as per `list`."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`delete \u003citem number\u003e`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:*"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`delete 4`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "  [T][+] Drop CS2103T"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "### `find` - Find tasks containing a keyword"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Obtain a list of tasks that contains a (case-insensitive) keyword."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*General usage:*"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Example of usage:*"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "`find celebrate`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "1.[E][-] Celebrate (at: 30/09/2019 0000)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "2.[T][-] Celebrate more (at: 01/10/2019 1200)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 145,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates a DialogBox object from user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param text Text input by user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param img Image of user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return DialogBox for user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates a DialogBox object from Duke\u0027s response."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param text Response of Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param img Image of Duke."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return DialogBox for Duke\u0027s response."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 75
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates chatbot \u0027Duke\u0027. Contains main method for chatbot"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Unit that manages saved data of task list. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** List of tasks tracked by Duke. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Unit that manages user interface of Duke. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Filepath for storage file. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String filePath \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes the chatbot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return String containing welcome message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return ui.greet(true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return ui.greet(false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the response given by the chatbot given input command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param input Input command of user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Response by chatbot."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.addError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return ui.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 64
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates an exception that occurs within the chatbot from unexpected or undefined behavior."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param message Message detailing exception encountered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 15
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    static private String TITLE \u003d \"Duke\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().initializeDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            stage.setTitle(Main.TITLE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sasuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daduke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets and initializes the chatbot."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param duke Chatbot to be run."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void initializeDuke(Duke duke) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String greetings \u003d duke.initialize();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                DialogBox.getDukeDialog(greetings, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Closes the terminal after a delay."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // @@author weiyang13-reused"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        // Segment of code adapted from https://stackoverflow.com/a/26454506"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    Thread.sleep(1000);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        };"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        // @@author"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 93,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit that parses user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses a user input command as a Command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param fullCommand String containing a command that is input by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If fullCommand is not properly formatted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String[] commandTokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            switch (commandTokens[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDone(commandTokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDelete(commandTokens);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseFind(commandTokens);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseToDo(commandTokens);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDeadline(commandTokens);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseEvent(commandTokens);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"Unrecognised command.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"find\" into a command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseFind(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 command must be followed by a single keyword.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new FindCommand(commandTokens[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"done\" into a command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDone(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 command must be followed by an integer.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            int itemNo \u003d Integer.parseInt(commandTokens[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new DoneCommand(itemNo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 must be followed by an integer.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"delete\" into a command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDelete(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027delete\u0027 command must be followed by an integer.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            int itemNo \u003d Integer.parseInt(commandTokens[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new DeleteCommand(itemNo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027delete\u0027 must be followed by an integer.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"deadline\" into a command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDeadline(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1 || commandTokens[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for deadline must not be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (commandTokens[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (i \u003d\u003d commandTokens.length) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Indicate date/time for deadline with \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (commandTokens.length !\u003d i + 3) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String by \u003d commandTokens[i + 1] + \" \" + commandTokens[i + 2];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddDeadlineCommand(description, by);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"event\" into a command."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseEvent(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1 || commandTokens[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for deadline must not be empty.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (commandTokens[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (i \u003d\u003d commandTokens.length) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Indicate date/time for event with \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (commandTokens.length !\u003d i + 3) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String at \u003d commandTokens[i + 1] + \" \" + commandTokens[i + 2];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddEventCommand(description, at);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"todo\" into a command."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseToDo(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for todo must not be empty.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddToDoCommand(description);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 189
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit that manages storage of data of the task list managed by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** File to which data of the list of tasks is saved and loaded from. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Object used to read save file. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Scanner fileReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a storage object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param filePath Pathname of the file used for storing data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Loads data from file into an ArrayList containing tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return An ArrayList of tasks represented by data in the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If error in loading occurs."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            addTaskToTaskList(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        fileReader.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Add a task from the save file to the list of tasks loaded."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there is error in loading the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void addTaskToTaskList(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String[] taskTokens \u003d fileReader"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    .nextLine()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    .split(\"::\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d createTask(taskTokens);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskTokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            task.setIsDone(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates a task based on tokens from the loaded file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskTokens Array of String tokens in loaded file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Undone task represented by tokens."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there is an error in the data loaded from the file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Task createTask(String[] taskTokens) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        switch (taskTokens[0]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        case \"[T]\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new ToDo(taskTokens[2]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        case \"[D]\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new Deadline(taskTokens[2], taskTokens[3]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        case \"[E]\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new Event(taskTokens[2], taskTokens[3]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates Scanner to read the file to be loaded."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If file is not found, or there is error in creating the file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void initialize() throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves data managed by taskList into the file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskList TaskList object managing list of tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there is an error in saving."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.getNumTasks(); i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                writeTask(task, fileWriter);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves data of a single task into the file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be recorded in target file."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param fileWriter FileWriter object for target file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws IOException If there is error in writing to file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void writeTask(Task task, FileWriter fileWriter) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        fileWriter.write(task.getTaskType().toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        fileWriter.write(\"::\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.write(\"1::\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.write(\"0::\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        fileWriter.write(task.getDescription());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (task.getHasDate()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.write(\"::\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.write(task.getDate());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 149
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates unit that manages list of tasks tracked by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** List of tasks tracked by Duke. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes TaskList object from a loaded list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * To be used only when loading from saved data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks loaded from memory"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Deletes a task (based on index) from list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        assert taskNumber \u003c\u003d getNumTasks() \u0026\u0026 taskNumber \u003e 0 : \"Task number should be valid\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sorts the tasks in list of tasks based on natural order of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void sortTasks() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.sort(null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Retrieves a task (based on index) from list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be retrieved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Task retrieved with corresponding index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        assert taskNumber \u003c\u003d getNumTasks() \u0026\u0026 taskNumber \u003e 0 : \"Task number should be valid\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 76
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit managing user interface for Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Acts as a builder for the response of Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Duke\u0027s response is stored here, and flushed when necessary."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** String storing unflushed response of chatbot. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        response \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Flushes response buffer of Ui and returns stored String."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Message stored in the buffer."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String flush() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String buffer \u003d response;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        response \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return buffer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the greeting message when the chatbot initializes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param hasLoadingError Whether there is an error in loading saved tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Greeting message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String greet(boolean hasLoadingError) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (hasLoadingError) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"Hello, fellow citizen. I am Duke, your task manager.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"Welcome back, fellow citizen.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Concatenates response buffer with message indicating an error due to user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param message String containing details of error."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void addError(String message) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printLine(\"OOPS!!! \" + message + \" :( :(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Concatenates response buffer with text."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param string String containing response of chatbot."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void printLine(String string) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (!response.equals(\"\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            response +\u003d \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        response +\u003d string;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 66
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a Deadline Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** String containing date and time of Event to be created. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddDeadlineCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the Deadline to be created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date String containing date and time of Deadline to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddDeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.dateString \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new Deadline(description, dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 29
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds an Event Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** String containing date and time of Event to be created. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddEventCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the Event to be created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date String containing date and time of Event to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddEventCommand(String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        dateString \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new Event(description, dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 29
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Description of the task to be added. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddTaskCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddTaskCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command to add a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates a task and adds it to the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful addition."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If error occurs in creating the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d createTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printMessage(tasks, ui, task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.sortTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints message indicating task completion."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task added to TaskList of Duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printMessage(TaskList tasks, Ui ui, Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.getNumTasks() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the task to be created by the command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Task created by the command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date associated with command is of wrong format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected abstract Task createTask() throws DukeException;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 66
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a ToDo Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddToDoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddToDoCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the ToDo to be created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddToDoCommand(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new ToDo(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If unexpected behavior or input is encountered during execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether a command is an ExitCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return False for non-exit commands, true for exit commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that deletes a task from the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Index of task to be deleted. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a DeleteCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is non-positive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DeleteCommand(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task number must be positive.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to delete a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful task deletion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through Storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is larger than number of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkValidTaskNumber(tasks, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        deleteTask(tasks, ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if the task number is invalid."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If task number is greater than number of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkValidTaskNumber(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003e tasks.getNumTasks()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"You have less than \" + taskNumber + \" tasks.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Deletes specified task and prints a message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void deleteTask(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        assert tasks.getTask(taskNumber) !\u003d task : \"Exact instance of task object should have been removed.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printMessage(tasks, ui, task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message indicating successful task deletion."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printMessage(TaskList tasks, Ui ui, Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.getNumTasks() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 85
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that sets a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Index of task to be set as done. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Intializes a DoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be set as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is non-positive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DoneCommand(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task number must be positive.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to set a task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets a task from the list of tasks as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through Storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is larger than number of tasks or task is already done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkValidTaskNumber(tasks, ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkTaskNotDone(tasks, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        setTaskAsDone(tasks, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.sortTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if taskNumber is not valid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is larger than number of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkValidTaskNumber(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003e tasks.getNumTasks()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"You have less than \" + taskNumber + \" tasks.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if the task to be set as done is already done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If task is already done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkTaskNotDone(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is already done.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void setTaskAsDone(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        task.setIsDone(true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printMessage(ui, task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        assert task.getIsDone() : \"Task should now be marked as done\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message indicating that task is successfully marked as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be set as done."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printMessage(Ui ui, Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 101
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that exits the chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints an exit message to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 27
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that finds tasks containing a keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Keyword to be searched for. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private int taskCount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a FindCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param keyword Keyword to be searched for."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskCount \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to find commands with a keyword."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Searches list of tasks to find commands with keyword."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful search, and list of tasks found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there are no tasks, are no matching tasks tracked by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkForEmptyTaskList(tasks, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        searchTaskList(tasks, ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkIfNoTasksFound(ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if there are no tasks in the TaskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there are no tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkForEmptyTaskList(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (tasks.getNumTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"There are no tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Searches the tasklist for tasks that match the keyword and prints the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void searchTaskList(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getNumTasks(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            printIfMatch(task, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a task if it has a keyword. Also prints a message for the first task found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be checked"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printIfMatch(Task task, Ui ui) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (task.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            printFirstLine(ui);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(taskCount +  \".\" + task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message indicating there are matching task(s)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printFirstLine(Ui ui) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if no tasks are found."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If no tasks are found."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkIfNoTasksFound(Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"No task with keyword \u0027\" + keyword + \"\u0027 found.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 106
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that lists all tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command to list all tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints all tasks in storage order to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If list of tasks is empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        checkIfNoTasks(tasks, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printTasks(tasks, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Throws an exception if no tasks are in the TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If not tasks are in the TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void checkIfNoTasks(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (tasks.getNumTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"No tasks added.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints the tasks in the TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private void printTasks(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int numTasks \u003d tasks.getNumTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(i + \".\" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 54
    }
  },
  {
    "path": "src/main/java/duke/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task that is associated with a date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Date associated with the task. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Format of date and time for input and output (dd/MM/yyyy HHmm). */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected static SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Intializes a DatedTask object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date Date associated with task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date does not follow format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DatedTask(String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        hasDate \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            this.date \u003d dateFormat.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Comparator for tasks. Compatible with tasks with no dates."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Tasks that are done have lowest priority (greatest)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Then, tasks that do not have dates have lower priority."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Among dated tasks of same priority so far, Date comparison is used."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Then, priority is based on String comparison of description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param other Task to be compared to."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A negative integer if the task has greater priority, a positive integer otherwise."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (other.isDone \u0026\u0026 !this.isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (!other.isDone \u0026\u0026 this.isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (!other.hasDate) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (this.date.compareTo(((DatedTask) other).date) !\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return this.date.compareTo(((DatedTask) other).date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return this.description.compareTo(other.description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task with a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param by Due date and time of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date and time format of by is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return super.toString() + \" (by: \" + dateFormat.format(date) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates an event Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param at Date and time the event occurs at."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date and time format of at is wrong."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return super.toString() + \" (at: \" + dateFormat.format(date) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a task that is kept tracked of by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Whether a task is complete or not.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Whether a task is associated with a date. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected boolean hasDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** The type of the task. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Task object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        hasDate \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether the task is associated with a date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if task is associated with a date, false otherwise."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean getHasDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return hasDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether the task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if task is done, false otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets whether the task is done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param isDone Boolean variable for whether a task is done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns date associated with task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return String representing date associated with task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns status icon representing whether the task is done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Status icon representing whether the task is done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"+\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"-\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return TaskType object representing type of the task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns true if description of task contains a keyword."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param keyword Keyword to be searched."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if description of task contains keyword, false otherwise."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String[] tokens \u003d description.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (token.toUpperCase().equals(keyword.toUpperCase())) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return taskType + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Comparator for tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Tasks that are done have lowest priority (greatest)."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Then, tasks that do not have dates have low priority."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Then, priority is based on String comparison of description."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param other Task to be compared to."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A negative integer if the task has greater priority, a positive integer otherwise."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (other.isDone \u0026\u0026 !this.isDone) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (!other.isDone \u0026\u0026 this.isDone) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (other.hasDate) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return this.description.compareTo(other.description);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 139
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the concrete type of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for ToDo Tasks. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    TO_DO(\u0027T\u0027),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for Deadline Tasks. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    DEADLINE(\u0027D\u0027),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for Event Tasks. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    EVENT(\u0027E\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Symbol associated with a particular TaskType. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private char typeSymbol;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Constructor for TaskType objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param typeSymbol Symbol associated with the TaskType."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    TaskType(char typeSymbol) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.typeSymbol \u003d typeSymbol;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return \"[\" + typeSymbol + \"]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 30
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a ToDo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskType \u003d TaskType.TO_DO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 19
    }
  },
  {
    "path": "src/test/java/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the tests for the ListCommand class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a test for the execute method for when the list is empty."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Asserts if the correct exception is thrown."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute_emptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Storage storage \u003d new Storage(\"data.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            new ListCommand().execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            assertEquals(\"No tasks added.\", e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 33
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the tests for the Parser class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a test for the parse method for when the command is unrecognised."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Asserts if the correct exception is thrown."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void parse_unrecognisedCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Parser.parse(\"UwU\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            assertEquals(\"Unrecognised command.\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 1 in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [D][-] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 2 in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [T][-] live a good life"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 3 in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][-] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     DukeException: OOPS! Task 2 is already done :("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [E][+] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [T][+] live a good life"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][+] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][+] live a good life"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 64
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "event gym /at 01/01/1996 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "deadline cs2103t project /by 27/08/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "todo live a good life"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 21
    }
  }
]
