[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    mainClassName \u003d \"duke.core.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 57
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Add `Todo` tasks for tracking purposes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `todo` - Adds a Todo task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Saves a Todo task into your list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`todo run`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "[T][x] run"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Add `Deadline` tasks for tracking purposes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `deadline` - Adds a Deadline task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Saves a Deadline task into your list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`deadline assignment /by 20/10/2019 2359`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "[D][x] assignment (by: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Add `Event` tasks for tracking purposes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `event` - Adds a Event task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Saves an Event task into your list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`event meeting /at 20/10/2019 2359`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "[E][x] event (at: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Lists all tasks for viewing purposes."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `list` - Lists all tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Lists all saved tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "1. [T][x] run"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "2. [D][x] assignment (by: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "3. [E][x] meeting (at: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Mark tasks as completed."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `done` - Mark tasks as done"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Mark tasks as done"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Nice! I\u0027ve marked these task(s) as done:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "[T][v] run"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "These invalid indexes were ignored:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`done 3 4`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Nice! I\u0027ve marked these task(s) as done:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "[E][v] meeting (at: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "These invalid indexes were ignored:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "4"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Find tasks by description."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Find tasks by its description"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`find`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "1. [D][x] assignment (by: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 7"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Delete tasks"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `delete` - Delete tasks"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Delete tasks"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`delete 1 3`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Noted. I\u0027ve removed these task(s):"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "1. [E][v] meeting (at: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "2. [T][v] run"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "These invalid indexes were ignored:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`delete 1 2`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Noted. I\u0027ve removed these task(s):"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "1. [D][x] assignment (by: 20 Oct 2019, 11:59:00 PM)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "These invalid indexes were ignored:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "2"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Now you have 0 tasks in the list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### Feature 8"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Exit application"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "### `bye` - Exit"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Prints goodbye message and exits application"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "Bye. Hope to see you soon!"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 189,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddDeadlineCommand extends SaveableCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddDeadlineCommand(String description, Date date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected String executeBeforeSave(TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddEventCommand extends SaveableCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddEventCommand(String description, Date date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected String executeBeforeSave(TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddTodoCommand extends SaveableCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected String executeBeforeSave(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"%s\\n\", task.toString())"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public abstract String execute(TaskList taskList, Storage storage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DeleteCommand extends SaveableCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Stream\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DeleteCommand(Stream\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.indexes \u003d indexes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected String executeBeforeSave(TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder positiveMessages \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        positiveMessages.append(\"Noted. I\u0027ve removed these task(s):\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        TaskList removedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder negativeMessages \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        negativeMessages.append(\"These invalid indexes were ignored:\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        // sort it in reverse order to avoid dealing with indexes changing midway"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        indexes.distinct()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .sorted(Comparator.reverseOrder())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .forEach(index -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    Optional\u003cTask\u003e removedTask \u003d removeTask(taskList, index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    removedTask.ifPresentOrElse("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        task -\u003e removedTasks.add(task),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        () -\u003e negativeMessages.append(String.format(\"%d \", index)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        positiveMessages.append(removedTasks.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder finalMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(positiveMessages);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(\"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(negativeMessages);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.size()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return finalMessage.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Optional\u003cTask\u003e removeTask(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return Optional.of(taskList.remove(index - 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 61
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DoneCommand extends SaveableCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Stream\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DoneCommand(Stream\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.indexes \u003d indexes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected String executeBeforeSave(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder positiveMessages \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        positiveMessages.append(\"Nice! I\u0027ve marked these task(s) as done:\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder negativeMessages \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        negativeMessages.append(\"These invalid indexes were ignored:\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        indexes.distinct()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .forEach(index -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    Optional\u003cTask\u003e markedTasked \u003d markTask(taskList, index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    markedTasked.ifPresentOrElse("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        task -\u003e positiveMessages.append(String.format(\"%s\\n\", task)),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        () -\u003e negativeMessages.append(String.format(\"%d \", index))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        StringBuilder finalMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(positiveMessages);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        finalMessage.append(negativeMessages);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return finalMessage.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Optional\u003cTask\u003e markTask(TaskList taskList, Integer index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return Optional.of(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 16
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String searchText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public FindCommand(String searchText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.searchText \u003d searchText;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + taskList.filter(searchText).toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + taskList.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 17
    }
  },
  {
    "path": "src/main/java/duke/command/SaveableCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public abstract class SaveableCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Executes {@link Command} before saving."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param taskList A {@link TaskList} to save."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param storage A {@link Storage} to save in."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A {@link String} describing the action taken."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert taskList !\u003d null : \"Execute failed on null task list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert storage !\u003d null : \"Execute failed on null storage.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String result \u003d executeBeforeSave(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (storage.isLoaded()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected abstract String executeBeforeSave(TaskList taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 24
    }
  },
  {
    "path": "src/main/java/duke/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.util.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.util.ResponseCode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"data/\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static final String FILE_NAME \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        storage \u003d new Storage(DIRECTORY_PATH, FILE_NAME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Returns a {@link Response} from {@link Duke} according to input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param input A query {@link String}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A corresponding {@link Response}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Response getResponse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String message \u003d c.execute(taskList, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            ResponseCode responseCode \u003d c.isExit() ? ResponseCode.EXIT : ResponseCode.OK;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new Response(message, responseCode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new Response(e.getMessage(), ResponseCode.ERROR);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 34,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 12
    }
  },
  {
    "path": "src/main/java/duke/core/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 32
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Converts a {@link String} into its corresponding {@link Date}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param dateString A {@link String} in the form dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A corresponding {@link Date}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @throws ParseException If dateString is not in the form dd/MM/yyyy HHmm."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static Date parseDate(String dateString) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return sdf.parse(dateString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Returns a {@link String} representation of a {@link Date}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param date Any {@link Date}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A representative {@link String}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static String formatDate(Date date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return DateFormat.getDateTimeInstance().format(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Parses a {@link String} into a {@link Command}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param fullCommand Any {@link String}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A {@link Command} specified by the input {@link String}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String command \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getByeCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getListCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getEventCommand(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getDoneCommand(fullCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getDeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return getFindCommand(fullCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getFindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String searchText \u003d fullCommand.substring(4).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (searchText.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The search text of a find command cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new FindCommand(searchText);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getDeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String parameters \u003d fullCommand.substring(6).trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (parameters.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"\\\u0027Delete\\\u0027 expects at least 1 parameter.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Stream\u003cInteger\u003e indexes \u003d Arrays.stream(parameters.split(\" \"))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .map(s -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        return Integer.parseInt(s);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        throw new DukeException(String.format(\"Parameter \\\u0027%s\\\u0027 is not an integer.\", s));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new DeleteCommand(indexes);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getDoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String parameters \u003d fullCommand.substring(4).trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (parameters.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"\\\u0027Done\\\u0027 expects at least 1 parameter.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Stream\u003cInteger\u003e indexes \u003d Arrays.stream(parameters.split(\" \"))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .map(s -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        return Integer.parseInt(s);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                        throw new DukeException(String.format(\"Parameter \\\u0027%s\\\u0027 is not an integer.\", s));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new DoneCommand(indexes);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String[] eventInfo \u003d fullCommand.substring(5).split(\" /at \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (eventInfo[0].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d parseDate(eventInfo[1].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new AddEventCommand(eventInfo[0].trim(), date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String[] deadlineInfo \u003d fullCommand.substring(8).split(\" /by \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (deadlineInfo[0].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d parseDate(deadlineInfo[1].trim());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new AddDeadlineCommand(deadlineInfo[0].trim(), date);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Error while parsing input.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String description \u003d fullCommand.substring(4).trim();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (description.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getListCommand() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private static Command getByeCommand() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 176
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String directoryPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private boolean isLoaded;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Creates a {@link Storage} object that loads and saves data to input file path."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param directoryPath Path of directory to save the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param fileName Name of file to save the data in."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Storage(String directoryPath, String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert directoryPath !\u003d null : \"Directory path is null.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert fileName !\u003d null : \"File name is null.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.directoryPath \u003d directoryPath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.isLoaded \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Returns load status of storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return load status of storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public boolean isLoaded() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return isLoaded;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Loads saved data from hard disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A {@link List} of {@link Task}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            // Solution below adapted from https://www.geeksforgeeks.org/serialization-in-java/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(directoryPath + fileName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            final List\u003cTask\u003e tasks \u003d (List\u003cTask\u003e) in.readObject();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            isLoaded \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            createFolder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            boolean fileCreated \u003d createDataFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            if (!fileCreated) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                throw new DukeException(\"Failed to create data file.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            isLoaded \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Failed to load stored data.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Saves a {@link List} of {@link Task} into a file on the hard disk."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param tasks A {@link List} of {@link Task}."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            // Solution below adapted from https://www.geeksforgeeks.org/serialization-in-java/"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FileOutputStream file \u003d new FileOutputStream(directoryPath + fileName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(file);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            out.writeObject(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            throw new DukeException(\"Failed to save data.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private boolean createDataFile() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            File file \u003d new File(directoryPath + fileName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return file.createNewFile() \u0026\u0026 file.setReadable(true) \u0026\u0026 file.setWritable(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void createFolder() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        new File(directoryPath).mkdir();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 106
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Filters the {@link Task} in the list according to searchText."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param searchText A query {@link String}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A new {@link TaskList} with {@link Task} that contain searchText in its description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList filter(String searchText) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return select(task -\u003e task.getDescription().contains(searchText));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Returns a new {@link TaskList} with {@link Task} that satisfy any of the input {@link Predicate}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param predicates Conditions to filter {@link Task} by."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @return A new {@link TaskList}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public TaskList select(Predicate\u003cTask\u003e... predicates) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        // compose predicates with or"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Predicate\u003cTask\u003e composedPred \u003d Arrays.stream(predicates)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .reduce(task -\u003e false, Predicate::or);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .filter(composedPred)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new TaskList(filteredTasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            result +\u003d String.format(\"%d. %s\\n\", (i + 1), task.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 77
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Instantiates a {@link Deadline} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param description A description of task to accomplish."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param by A {@link Date} to accomplish task by."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert by !\u003d null : \"Deadline date is null.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Parser.formatDate(by) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Instantiates an {@link Event} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param description A description of event to happen."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * @param at A {@link Date} on which event will happen."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert at !\u003d null : \"Event date is null\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Parser.formatDate(at) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert description !\u003d null : \"Task description is null\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void setColor(Color color) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialog.setTextFill(color);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 66
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.util.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.util.ResponseCode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Sets initial values upon loading."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void showWelcome() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                DialogBox.getDukeDialog(welcome, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Response response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert response !\u003d null : \"Null response from Duke.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        DialogBox dukeDialogBox \u003d DialogBox.getDukeDialog(response.getMessage(), dukeImage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        if (response.getResponseCode() \u003d\u003d ResponseCode.OK) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            dukeDialogBox.setColor(Color.GREEN);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } else if (response.getResponseCode() \u003d\u003d ResponseCode.ERROR) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            dukeDialogBox.setColor(Color.RED);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } else if (response.getResponseCode() \u003d\u003d ResponseCode.EXIT) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            dukeDialogBox.setColor(Color.BLUE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            timedExit(1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        dialogContainer.getChildren().add(dukeDialogBox);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private void timedExit(int seconds) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assert seconds \u003e 0 : \"Timed exit must be positive.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        timer.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }, new Date(System.currentTimeMillis() + seconds * 1000));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 93
    }
  },
  {
    "path": "src/main/java/duke/util/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    private ResponseCode responseCode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public Response(String message, ResponseCode responseCode) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        this.responseCode \u003d responseCode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public ResponseCode getResponseCode() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        return responseCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 19
    }
  },
  {
    "path": "src/main/java/duke/util/ResponseCode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public enum ResponseCode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    OK,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    ERROR,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    EXIT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 7
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 19
    }
  },
  {
    "path": "src/test/java/AddDeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddDeadlineCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute_correctInput_noException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AddDeadlineCommand c \u003d new AddDeadlineCommand(\"Example.\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Storage storage \u003d new Storage(\"data/\", \"tests.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"[D][%s] Example. (by: %s)\\n\", crossSymbol, Parser.formatDate(date))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/test/java/AddEventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddEventCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute_correctInput_noException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            AddEventCommand c \u003d new AddEventCommand(\"Example.\", Parser.parseDate(dateString));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Storage storage \u003d new Storage(\"data/\", \"tests.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + String.format(\"[E][%s] Example. (at: %s)\\n\", crossSymbol, Parser.formatDate(date))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 31
    }
  },
  {
    "path": "src/test/java/AddTodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class AddTodoCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void execute_correctInput_noException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        AddTodoCommand c \u003d new AddTodoCommand(\"Example.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Storage storage \u003d new Storage(\"data/\", \"tests.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String desired \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + String.format(\"[T][%s] Example.\\n\", crossSymbol)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(c.execute(taskList, storage), desired);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Deadline(\"Example.\", date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[D][%s] Example. (by: %s)\", crossSymbol, Parser.formatDate(date)),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Deadline(\"Example.\", date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            testTake.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[D][%s] Example. (by: %s)\", tickSymbol, Parser.formatDate(date)),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 42
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Event(\"Example.\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[E][%s] Example. (at: %s)\", crossSymbol, Parser.formatDate(date)),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String dateString \u003d \"28/08/2019 1700\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Date date \u003d Parser.parseDate(dateString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            Task testTake \u003d new Event(\"Example.\", date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            testTake.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            assertEquals(String.format(\"[E][%s] Example. (at: %s)\", tickSymbol, Parser.formatDate(date)),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "                    testTake.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 42
    }
  },
  {
    "path": "src/test/java/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    TaskListStub() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        tasks.add(new Todo(\"The quick brown fox jumps over the lazy dog.\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        tasks.add(new Deadline(\"Completion, epic accomplishment.\", new Date()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        tasks.add(new Event(\"The day dinosaurs were wiped from this Earth.\", new Date()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 15
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void select_multiplePredicates_returnFiltered() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        TaskList taskList \u003d new TaskListStub();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        TaskList filteredTaskList \u003d taskList.select("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            task -\u003e task.getDescription().length() \u003c 45,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "            task -\u003e task.getDescription().contains(\",\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(filteredTaskList.size(), 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 16
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isNotDone_crossSymbol() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task testTake \u003d new Todo(\"This is an example.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // x symbol"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(String.format(\"[T][%s] This is an example.\", crossSymbol), testTake.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    public void stringConversion_isDone_tickSymbol() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        Task testTask \u003d new Todo(\"This is an example.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        testTask.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "        assertEquals(String.format(\"[T][%s] This is an example.\", tickSymbol), testTask.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "delete 7"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\tmkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\trm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\techo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "\texit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "uberSaiyan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "uberSaiyan": 34
    }
  }
]
